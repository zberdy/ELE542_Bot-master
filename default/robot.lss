
robot.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001e72  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000122  00800060  00001e72  00001f06  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000006c  00800182  00800182  00002028  2**0
                  ALLOC
  3 .debug_aranges 00000280  00000000  00000000  00002028  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000481  00000000  00000000  000022a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000030c0  00000000  00000000  00002729  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001930  00000000  00000000  000057e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001d00  00000000  00000000  00007119  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000310  00000000  00000000  00008e1c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005d8  00000000  00000000  0000912c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000cf5  00000000  00000000  00009704  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  0000a3f9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 f3 03 	jmp	0x7e6	; 0x7e6 <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 10 07 	jmp	0xe20	; 0xe20 <__vector_13>
      38:	0c 94 6e 07 	jmp	0xedc	; 0xedc <__vector_14>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_16>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e7       	ldi	r30, 0x72	; 114
      68:	fe e1       	ldi	r31, 0x1E	; 30
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 38       	cpi	r26, 0x82	; 130
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a2 e8       	ldi	r26, 0x82	; 130
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ae 3e       	cpi	r26, 0xEE	; 238
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 01 06 	call	0xc02	; 0xc02 <main>
      8a:	0c 94 37 0f 	jmp	0x1e6e	; 0x1e6e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <ADC_Init>:
	//- Fréquence de l’horloge de l’ADC = 125 kHz
	//- Mode d’opération = Freerun
	//- Référence de voltage = AREF
	//- Mode de traitement des acquisitions = Interruption
	
	ADMUX	= (0 << REFS1) | (0 << REFS0) | (0 << ADLAR) | (0 << MUX4) | (0 << MUX3) | (0 << MUX2)	| (0 << MUX1) | (0 << MUX0);
      92:	17 b8       	out	0x07, r1	; 7
	ADCSRA	= (1 << ADEN) | (0 << ADSC) | (1 << ADATE) | (0 << ADIF) | (1 << ADIE) |  (1 << ADPS2)	|  (1 << ADPS1)	 |  (1 << ADPS0); 
      94:	8f ea       	ldi	r24, 0xAF	; 175
      96:	86 b9       	out	0x06, r24	; 6
	SFIOR	= (0 << ADTS2) | (0 << ADTS1) | (0 << ADTS0) | (0 << 4)	   |  (0 << ACME) | (0 << PUD)	| (0 << PSR2)	 | (0 << PSR10);
      98:	10 be       	out	0x30, r1	; 48
	ADCSRA |= (1 << ADSC); //On lance l'aquisition en mode free running
      9a:	36 9a       	sbi	0x06, 6	; 6
	ADMUX  = (1 << MUX0); //On change immédiatement de canal pour la prochaine conversion
      9c:	81 e0       	ldi	r24, 0x01	; 1
      9e:	87 b9       	out	0x07, r24	; 7
	DDRA=(1<<CAL);
      a0:	80 e1       	ldi	r24, 0x10	; 16
      a2:	8a bb       	out	0x1a, r24	; 26

//	PORTA = (1 << DIR_G) |(1 << DIR_D);
}
      a4:	08 95       	ret

000000a6 <__vector_16>:


ISR(ADC_vect)
{
      a6:	1f 92       	push	r1
      a8:	0f 92       	push	r0
      aa:	0f b6       	in	r0, 0x3f	; 63
      ac:	0f 92       	push	r0
      ae:	11 24       	eor	r1, r1
      b0:	2f 93       	push	r18
      b2:	3f 93       	push	r19
      b4:	8f 93       	push	r24
      b6:	9f 93       	push	r25
	int16_t vitesse_echantillon;
	vitesse_echantillon=ADC;
      b8:	24 b1       	in	r18, 0x04	; 4
      ba:	35 b1       	in	r19, 0x05	; 5
	
	switch(ADMUX) // ADMUX = 0 --> moteur gauche, ADMUX = 1 --> moteur droit 
      bc:	87 b1       	in	r24, 0x07	; 7
      be:	88 23       	and	r24, r24
      c0:	f9 f0       	breq	.+62     	; 0x100 <__vector_16+0x5a>
      c2:	81 30       	cpi	r24, 0x01	; 1
      c4:	c9 f5       	brne	.+114    	; 0x138 <__vector_16+0x92>
	{
		case 1:
		{
			if ((PINA & (1 << DIR_G)) > 0)
      c6:	ca 9b       	sbis	0x19, 2	; 25
      c8:	0b c0       	rjmp	.+22     	; 0xe0 <__vector_16+0x3a>
			{
				somme_vitesse[GAUCHE] -= vitesse_echantillon;
      ca:	80 91 a8 01 	lds	r24, 0x01A8
      ce:	90 91 a9 01 	lds	r25, 0x01A9
      d2:	82 1b       	sub	r24, r18
      d4:	93 0b       	sbc	r25, r19
      d6:	90 93 a9 01 	sts	0x01A9, r25
      da:	80 93 a8 01 	sts	0x01A8, r24
      de:	0a c0       	rjmp	.+20     	; 0xf4 <__vector_16+0x4e>
				nombre_echantillon[GAUCHE]++;
				
			}
			else
			{
				somme_vitesse[GAUCHE] += vitesse_echantillon;
      e0:	80 91 a8 01 	lds	r24, 0x01A8
      e4:	90 91 a9 01 	lds	r25, 0x01A9
      e8:	28 0f       	add	r18, r24
      ea:	39 1f       	adc	r19, r25
      ec:	30 93 a9 01 	sts	0x01A9, r19
      f0:	20 93 a8 01 	sts	0x01A8, r18
				nombre_echantillon[GAUCHE]++;
      f4:	80 91 ac 01 	lds	r24, 0x01AC
      f8:	8f 5f       	subi	r24, 0xFF	; 255
      fa:	80 93 ac 01 	sts	0x01AC, r24
      fe:	1c c0       	rjmp	.+56     	; 0x138 <__vector_16+0x92>
			}
			break;
		}
		case 0:
		{
			if ((PINA & (1 << DIR_D)) > 0)
     100:	cb 9b       	sbis	0x19, 3	; 25
     102:	0b c0       	rjmp	.+22     	; 0x11a <__vector_16+0x74>
			{
				somme_vitesse[DROIT] -= vitesse_echantillon;
     104:	80 91 aa 01 	lds	r24, 0x01AA
     108:	90 91 ab 01 	lds	r25, 0x01AB
     10c:	82 1b       	sub	r24, r18
     10e:	93 0b       	sbc	r25, r19
     110:	90 93 ab 01 	sts	0x01AB, r25
     114:	80 93 aa 01 	sts	0x01AA, r24
     118:	0a c0       	rjmp	.+20     	; 0x12e <__vector_16+0x88>
				nombre_echantillon[DROIT]++;
			}
			else
			{
				somme_vitesse[DROIT] += vitesse_echantillon;
     11a:	80 91 aa 01 	lds	r24, 0x01AA
     11e:	90 91 ab 01 	lds	r25, 0x01AB
     122:	28 0f       	add	r18, r24
     124:	39 1f       	adc	r19, r25
     126:	30 93 ab 01 	sts	0x01AB, r19
     12a:	20 93 aa 01 	sts	0x01AA, r18
				nombre_echantillon[DROIT]++;
     12e:	80 91 ad 01 	lds	r24, 0x01AD
     132:	8f 5f       	subi	r24, 0xFF	; 255
     134:	80 93 ad 01 	sts	0x01AD, r24
				
		}
					
	}
	
	ADMUX ^= (1  << MUX0);
     138:	87 b1       	in	r24, 0x07	; 7
     13a:	91 e0       	ldi	r25, 0x01	; 1
     13c:	89 27       	eor	r24, r25
     13e:	87 b9       	out	0x07, r24	; 7
}
     140:	9f 91       	pop	r25
     142:	8f 91       	pop	r24
     144:	3f 91       	pop	r19
     146:	2f 91       	pop	r18
     148:	0f 90       	pop	r0
     14a:	0f be       	out	0x3f, r0	; 63
     14c:	0f 90       	pop	r0
     14e:	1f 90       	pop	r1
     150:	18 95       	reti

00000152 <moyenne_Moteur>:

void moyenne_Moteur(float moyMoteur[])
{ 
     152:	2f 92       	push	r2
     154:	3f 92       	push	r3
     156:	4f 92       	push	r4
     158:	5f 92       	push	r5
     15a:	6f 92       	push	r6
     15c:	7f 92       	push	r7
     15e:	8f 92       	push	r8
     160:	9f 92       	push	r9
     162:	af 92       	push	r10
     164:	bf 92       	push	r11
     166:	cf 92       	push	r12
     168:	df 92       	push	r13
     16a:	ef 92       	push	r14
     16c:	ff 92       	push	r15
     16e:	0f 93       	push	r16
     170:	1f 93       	push	r17
     172:	cf 93       	push	r28
     174:	df 93       	push	r29
     176:	ec 01       	movw	r28, r24
	int16_t tp_somme_vitesse_G, tp_somme_vitesse_D;
  	uint8_t tp_nombre_ech_G, tp_nombre_ech_D;
	
	cli();
     178:	f8 94       	cli

	tp_somme_vitesse_G = somme_vitesse[GAUCHE];
     17a:	60 90 a8 01 	lds	r6, 0x01A8
     17e:	70 90 a9 01 	lds	r7, 0x01A9
	tp_somme_vitesse_D = somme_vitesse[DROIT];
     182:	60 91 aa 01 	lds	r22, 0x01AA
     186:	70 91 ab 01 	lds	r23, 0x01AB
	tp_nombre_ech_G = nombre_echantillon[GAUCHE];
     18a:	20 90 ac 01 	lds	r2, 0x01AC
	tp_nombre_ech_D = nombre_echantillon[DROIT];
     18e:	e0 90 ad 01 	lds	r14, 0x01AD
	nombre_echantillon[GAUCHE]=0; //Une fois l'opération de moyenne faite on réinitialise les données à 0
     192:	10 92 ac 01 	sts	0x01AC, r1
	somme_vitesse[GAUCHE]=0;
     196:	10 92 a9 01 	sts	0x01A9, r1
     19a:	10 92 a8 01 	sts	0x01A8, r1
	nombre_echantillon[DROIT]=0;
     19e:	10 92 ad 01 	sts	0x01AD, r1
	somme_vitesse[DROIT]=0;
     1a2:	10 92 ab 01 	sts	0x01AB, r1
     1a6:	10 92 aa 01 	sts	0x01AA, r1

	sei();	
     1aa:	78 94       	sei

	moyMoteur[DROIT]= ((float)tp_somme_vitesse_D) / ((float)tp_nombre_ech_D);	
     1ac:	88 27       	eor	r24, r24
     1ae:	77 fd       	sbrc	r23, 7
     1b0:	80 95       	com	r24
     1b2:	98 2f       	mov	r25, r24
     1b4:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <__floatsisf>
     1b8:	5b 01       	movw	r10, r22
     1ba:	6c 01       	movw	r12, r24
     1bc:	ff 24       	eor	r15, r15
     1be:	00 e0       	ldi	r16, 0x00	; 0
     1c0:	10 e0       	ldi	r17, 0x00	; 0
     1c2:	c8 01       	movw	r24, r16
     1c4:	b7 01       	movw	r22, r14
     1c6:	0e 94 92 0c 	call	0x1924	; 0x1924 <__floatunsisf>
     1ca:	9b 01       	movw	r18, r22
     1cc:	ac 01       	movw	r20, r24
     1ce:	c6 01       	movw	r24, r12
     1d0:	b5 01       	movw	r22, r10
     1d2:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__divsf3>
     1d6:	6c 83       	std	Y+4, r22	; 0x04
     1d8:	7d 83       	std	Y+5, r23	; 0x05
     1da:	8e 83       	std	Y+6, r24	; 0x06
     1dc:	9f 83       	std	Y+7, r25	; 0x07
	moyMoteur[GAUCHE]=((float)tp_somme_vitesse_G) / ((float)tp_nombre_ech_G);
     1de:	88 24       	eor	r8, r8
     1e0:	77 fc       	sbrc	r7, 7
     1e2:	80 94       	com	r8
     1e4:	98 2c       	mov	r9, r8
     1e6:	c4 01       	movw	r24, r8
     1e8:	b3 01       	movw	r22, r6
     1ea:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <__floatsisf>
     1ee:	7b 01       	movw	r14, r22
     1f0:	8c 01       	movw	r16, r24
     1f2:	33 24       	eor	r3, r3
     1f4:	44 24       	eor	r4, r4
     1f6:	55 24       	eor	r5, r5
     1f8:	c2 01       	movw	r24, r4
     1fa:	b1 01       	movw	r22, r2
     1fc:	0e 94 92 0c 	call	0x1924	; 0x1924 <__floatunsisf>
     200:	9b 01       	movw	r18, r22
     202:	ac 01       	movw	r20, r24
     204:	c8 01       	movw	r24, r16
     206:	b7 01       	movw	r22, r14
     208:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__divsf3>
     20c:	68 83       	st	Y, r22
     20e:	79 83       	std	Y+1, r23	; 0x01
     210:	8a 83       	std	Y+2, r24	; 0x02
     212:	9b 83       	std	Y+3, r25	; 0x03
}
     214:	df 91       	pop	r29
     216:	cf 91       	pop	r28
     218:	1f 91       	pop	r17
     21a:	0f 91       	pop	r16
     21c:	ff 90       	pop	r15
     21e:	ef 90       	pop	r14
     220:	df 90       	pop	r13
     222:	cf 90       	pop	r12
     224:	bf 90       	pop	r11
     226:	af 90       	pop	r10
     228:	9f 90       	pop	r9
     22a:	8f 90       	pop	r8
     22c:	7f 90       	pop	r7
     22e:	6f 90       	pop	r6
     230:	5f 90       	pop	r5
     232:	4f 90       	pop	r4
     234:	3f 90       	pop	r3
     236:	2f 90       	pop	r2
     238:	08 95       	ret

0000023a <CalculPWM>:
#include "moteur.h"


void CalculPWM(float Vitesse_D, float Angle_D, float Vg, float Vd, float *Duty_G, float *Duty_D)
{
     23a:	2f 92       	push	r2
     23c:	3f 92       	push	r3
     23e:	4f 92       	push	r4
     240:	5f 92       	push	r5
     242:	6f 92       	push	r6
     244:	7f 92       	push	r7
     246:	8f 92       	push	r8
     248:	9f 92       	push	r9
     24a:	af 92       	push	r10
     24c:	bf 92       	push	r11
     24e:	cf 92       	push	r12
     250:	df 92       	push	r13
     252:	ef 92       	push	r14
     254:	ff 92       	push	r15
     256:	0f 93       	push	r16
     258:	1f 93       	push	r17
     25a:	df 93       	push	r29
     25c:	cf 93       	push	r28
     25e:	cd b7       	in	r28, 0x3d	; 61
     260:	de b7       	in	r29, 0x3e	; 62
     262:	60 97       	sbiw	r28, 0x10	; 16
     264:	0f b6       	in	r0, 0x3f	; 63
     266:	f8 94       	cli
     268:	de bf       	out	0x3e, r29	; 62
     26a:	0f be       	out	0x3f, r0	; 63
     26c:	cd bf       	out	0x3d, r28	; 61
     26e:	6f 83       	std	Y+7, r22	; 0x07
     270:	78 87       	std	Y+8, r23	; 0x08
     272:	89 87       	std	Y+9, r24	; 0x09
     274:	9a 87       	std	Y+10, r25	; 0x0a
     276:	2b 87       	std	Y+11, r18	; 0x0b
     278:	3c 87       	std	Y+12, r19	; 0x0c
     27a:	4d 87       	std	Y+13, r20	; 0x0d
     27c:	5e 87       	std	Y+14, r21	; 0x0e
     27e:	27 01       	movw	r4, r14
     280:	38 01       	movw	r6, r16
     282:	98 8a       	std	Y+16, r9	; 0x10
     284:	8f 86       	std	Y+15, r8	; 0x0f
	static float Ua     = 0.0;
	static int 	 Signe_Ua = 0;
	static int 	 Signe_Ut = 0;


	Vg = (Vg > 1.0) ? 1.0 : ((Vg < -1.0) ? -1.0 : Vg);  /* Regarde les limites (-1.0 à 1.0) */
     286:	c8 01       	movw	r24, r16
     288:	b7 01       	movw	r22, r14
     28a:	20 e0       	ldi	r18, 0x00	; 0
     28c:	30 e0       	ldi	r19, 0x00	; 0
     28e:	40 e8       	ldi	r20, 0x80	; 128
     290:	5f e3       	ldi	r21, 0x3F	; 63
     292:	0e 94 20 0b 	call	0x1640	; 0x1640 <__gtsf2>
     296:	18 16       	cp	r1, r24
     298:	5c f4       	brge	.+22     	; 0x2b0 <CalculPWM+0x76>
     29a:	0f 2e       	mov	r0, r31
     29c:	f0 e0       	ldi	r31, 0x00	; 0
     29e:	4f 2e       	mov	r4, r31
     2a0:	f0 e0       	ldi	r31, 0x00	; 0
     2a2:	5f 2e       	mov	r5, r31
     2a4:	f0 e8       	ldi	r31, 0x80	; 128
     2a6:	6f 2e       	mov	r6, r31
     2a8:	ff e3       	ldi	r31, 0x3F	; 63
     2aa:	7f 2e       	mov	r7, r31
     2ac:	f0 2d       	mov	r31, r0
     2ae:	14 c0       	rjmp	.+40     	; 0x2d8 <CalculPWM+0x9e>
     2b0:	c8 01       	movw	r24, r16
     2b2:	b7 01       	movw	r22, r14
     2b4:	20 e0       	ldi	r18, 0x00	; 0
     2b6:	30 e0       	ldi	r19, 0x00	; 0
     2b8:	40 e8       	ldi	r20, 0x80	; 128
     2ba:	5f eb       	ldi	r21, 0xBF	; 191
     2bc:	0e 94 80 0b 	call	0x1700	; 0x1700 <__ltsf2>
     2c0:	88 23       	and	r24, r24
     2c2:	54 f4       	brge	.+20     	; 0x2d8 <CalculPWM+0x9e>
     2c4:	0f 2e       	mov	r0, r31
     2c6:	f0 e0       	ldi	r31, 0x00	; 0
     2c8:	4f 2e       	mov	r4, r31
     2ca:	f0 e0       	ldi	r31, 0x00	; 0
     2cc:	5f 2e       	mov	r5, r31
     2ce:	f0 e8       	ldi	r31, 0x80	; 128
     2d0:	6f 2e       	mov	r6, r31
     2d2:	ff eb       	ldi	r31, 0xBF	; 191
     2d4:	7f 2e       	mov	r7, r31
     2d6:	f0 2d       	mov	r31, r0
	Vd = (Vd > 1.0) ? 1.0 : ((Vd < -1.0) ? -1.0 : Vd);  /* Regarde les limites (-1.0 à 1.0) */
     2d8:	c6 01       	movw	r24, r12
     2da:	b5 01       	movw	r22, r10
     2dc:	20 e0       	ldi	r18, 0x00	; 0
     2de:	30 e0       	ldi	r19, 0x00	; 0
     2e0:	40 e8       	ldi	r20, 0x80	; 128
     2e2:	5f e3       	ldi	r21, 0x3F	; 63
     2e4:	0e 94 20 0b 	call	0x1640	; 0x1640 <__gtsf2>
     2e8:	18 16       	cp	r1, r24
     2ea:	5c f4       	brge	.+22     	; 0x302 <CalculPWM+0xc8>
     2ec:	0f 2e       	mov	r0, r31
     2ee:	f0 e0       	ldi	r31, 0x00	; 0
     2f0:	af 2e       	mov	r10, r31
     2f2:	f0 e0       	ldi	r31, 0x00	; 0
     2f4:	bf 2e       	mov	r11, r31
     2f6:	f0 e8       	ldi	r31, 0x80	; 128
     2f8:	cf 2e       	mov	r12, r31
     2fa:	ff e3       	ldi	r31, 0x3F	; 63
     2fc:	df 2e       	mov	r13, r31
     2fe:	f0 2d       	mov	r31, r0
     300:	14 c0       	rjmp	.+40     	; 0x32a <CalculPWM+0xf0>
     302:	c6 01       	movw	r24, r12
     304:	b5 01       	movw	r22, r10
     306:	20 e0       	ldi	r18, 0x00	; 0
     308:	30 e0       	ldi	r19, 0x00	; 0
     30a:	40 e8       	ldi	r20, 0x80	; 128
     30c:	5f eb       	ldi	r21, 0xBF	; 191
     30e:	0e 94 80 0b 	call	0x1700	; 0x1700 <__ltsf2>
     312:	88 23       	and	r24, r24
     314:	54 f4       	brge	.+20     	; 0x32a <CalculPWM+0xf0>
     316:	0f 2e       	mov	r0, r31
     318:	f0 e0       	ldi	r31, 0x00	; 0
     31a:	af 2e       	mov	r10, r31
     31c:	f0 e0       	ldi	r31, 0x00	; 0
     31e:	bf 2e       	mov	r11, r31
     320:	f0 e8       	ldi	r31, 0x80	; 128
     322:	cf 2e       	mov	r12, r31
     324:	ff eb       	ldi	r31, 0xBF	; 191
     326:	df 2e       	mov	r13, r31
     328:	f0 2d       	mov	r31, r0
		
	Old_W = W;
     32a:	e0 90 96 01 	lds	r14, 0x0196
     32e:	f0 90 97 01 	lds	r15, 0x0197
     332:	00 91 98 01 	lds	r16, 0x0198
     336:	10 91 99 01 	lds	r17, 0x0199
     33a:	e0 92 92 01 	sts	0x0192, r14
     33e:	f0 92 93 01 	sts	0x0193, r15
     342:	00 93 94 01 	sts	0x0194, r16
     346:	10 93 95 01 	sts	0x0195, r17
	W     = 0.5*(Vmax/RAYON)*(Vd-Vg);
     34a:	c6 01       	movw	r24, r12
     34c:	b5 01       	movw	r22, r10
     34e:	a3 01       	movw	r20, r6
     350:	92 01       	movw	r18, r4
     352:	0e 94 1c 09 	call	0x1238	; 0x1238 <__subsf3>
     356:	2a e1       	ldi	r18, 0x1A	; 26
     358:	32 e6       	ldi	r19, 0x62	; 98
     35a:	46 e8       	ldi	r20, 0x86	; 134
     35c:	50 e4       	ldi	r21, 0x40	; 64
     35e:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     362:	6b 83       	std	Y+3, r22	; 0x03
     364:	7c 83       	std	Y+4, r23	; 0x04
     366:	8d 83       	std	Y+5, r24	; 0x05
     368:	9e 83       	std	Y+6, r25	; 0x06
     36a:	60 93 96 01 	sts	0x0196, r22
     36e:	70 93 97 01 	sts	0x0197, r23
     372:	80 93 98 01 	sts	0x0198, r24
     376:	90 93 99 01 	sts	0x0199, r25
	Vt    = 0.5*(Vd+Vg);
     37a:	c6 01       	movw	r24, r12
     37c:	b5 01       	movw	r22, r10
     37e:	a3 01       	movw	r20, r6
     380:	92 01       	movw	r18, r4
     382:	0e 94 4d 09 	call	0x129a	; 0x129a <__addsf3>
     386:	20 e0       	ldi	r18, 0x00	; 0
     388:	30 e0       	ldi	r19, 0x00	; 0
     38a:	40 e0       	ldi	r20, 0x00	; 0
     38c:	5f e3       	ldi	r21, 0x3F	; 63
     38e:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     392:	3b 01       	movw	r6, r22
     394:	4c 01       	movw	r8, r24
     396:	60 93 8e 01 	sts	0x018E, r22
     39a:	70 93 8f 01 	sts	0x018F, r23
     39e:	80 93 90 01 	sts	0x0190, r24
     3a2:	90 93 91 01 	sts	0x0191, r25

	Angle = Angle + (0.5)*TS*(W+Old_W);
     3a6:	6b 81       	ldd	r22, Y+3	; 0x03
     3a8:	7c 81       	ldd	r23, Y+4	; 0x04
     3aa:	8d 81       	ldd	r24, Y+5	; 0x05
     3ac:	9e 81       	ldd	r25, Y+6	; 0x06
     3ae:	a8 01       	movw	r20, r16
     3b0:	97 01       	movw	r18, r14
     3b2:	0e 94 4d 09 	call	0x129a	; 0x129a <__addsf3>
     3b6:	2a e0       	ldi	r18, 0x0A	; 10
     3b8:	37 ed       	ldi	r19, 0xD7	; 215
     3ba:	43 e2       	ldi	r20, 0x23	; 35
     3bc:	5b e3       	ldi	r21, 0x3B	; 59
     3be:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     3c2:	20 91 9e 01 	lds	r18, 0x019E
     3c6:	30 91 9f 01 	lds	r19, 0x019F
     3ca:	40 91 a0 01 	lds	r20, 0x01A0
     3ce:	50 91 a1 01 	lds	r21, 0x01A1
     3d2:	0e 94 4d 09 	call	0x129a	; 0x129a <__addsf3>
     3d6:	7b 01       	movw	r14, r22
     3d8:	8c 01       	movw	r16, r24
	Angle = (Angle > 2.0*Pi) ? Angle - 2*Pi : ((Angle < 0.0) ? Angle + 2*Pi : Angle); /* Angle entre 0 et 2 pi */
     3da:	2b ed       	ldi	r18, 0xDB	; 219
     3dc:	3f e0       	ldi	r19, 0x0F	; 15
     3de:	49 ec       	ldi	r20, 0xC9	; 201
     3e0:	50 e4       	ldi	r21, 0x40	; 64
     3e2:	0e 94 20 0b 	call	0x1640	; 0x1640 <__gtsf2>
     3e6:	18 16       	cp	r1, r24
     3e8:	4c f4       	brge	.+18     	; 0x3fc <CalculPWM+0x1c2>
     3ea:	c8 01       	movw	r24, r16
     3ec:	b7 01       	movw	r22, r14
     3ee:	2b ed       	ldi	r18, 0xDB	; 219
     3f0:	3f e0       	ldi	r19, 0x0F	; 15
     3f2:	49 ec       	ldi	r20, 0xC9	; 201
     3f4:	50 e4       	ldi	r21, 0x40	; 64
     3f6:	0e 94 1c 09 	call	0x1238	; 0x1238 <__subsf3>
     3fa:	12 c0       	rjmp	.+36     	; 0x420 <CalculPWM+0x1e6>
     3fc:	c8 01       	movw	r24, r16
     3fe:	b7 01       	movw	r22, r14
     400:	20 e0       	ldi	r18, 0x00	; 0
     402:	30 e0       	ldi	r19, 0x00	; 0
     404:	40 e0       	ldi	r20, 0x00	; 0
     406:	50 e0       	ldi	r21, 0x00	; 0
     408:	0e 94 80 0b 	call	0x1700	; 0x1700 <__ltsf2>
     40c:	88 23       	and	r24, r24
     40e:	54 f4       	brge	.+20     	; 0x424 <CalculPWM+0x1ea>
     410:	c8 01       	movw	r24, r16
     412:	b7 01       	movw	r22, r14
     414:	2b ed       	ldi	r18, 0xDB	; 219
     416:	3f e0       	ldi	r19, 0x0F	; 15
     418:	49 ec       	ldi	r20, 0xC9	; 201
     41a:	50 e4       	ldi	r21, 0x40	; 64
     41c:	0e 94 4d 09 	call	0x129a	; 0x129a <__addsf3>
     420:	7b 01       	movw	r14, r22
     422:	8c 01       	movw	r16, r24
     424:	e0 92 9e 01 	sts	0x019E, r14
     428:	f0 92 9f 01 	sts	0x019F, r15
     42c:	00 93 a0 01 	sts	0x01A0, r16
     430:	10 93 a1 01 	sts	0x01A1, r17
	ErreurAngle = ((Angle_D >= Pi + Angle) ? Angle_D - 2*Pi : ((Angle_D <= -Pi + Angle) ? Angle_D + 2*Pi : Angle_D))-Angle;
     434:	c8 01       	movw	r24, r16
     436:	b7 01       	movw	r22, r14
     438:	2b ed       	ldi	r18, 0xDB	; 219
     43a:	3f e0       	ldi	r19, 0x0F	; 15
     43c:	49 e4       	ldi	r20, 0x49	; 73
     43e:	50 e4       	ldi	r21, 0x40	; 64
     440:	0e 94 4d 09 	call	0x129a	; 0x129a <__addsf3>
     444:	9b 01       	movw	r18, r22
     446:	ac 01       	movw	r20, r24
     448:	6b 85       	ldd	r22, Y+11	; 0x0b
     44a:	7c 85       	ldd	r23, Y+12	; 0x0c
     44c:	8d 85       	ldd	r24, Y+13	; 0x0d
     44e:	9e 85       	ldd	r25, Y+14	; 0x0e
     450:	0e 94 50 0b 	call	0x16a0	; 0x16a0 <__gesf2>
     454:	88 23       	and	r24, r24
     456:	5c f0       	brlt	.+22     	; 0x46e <CalculPWM+0x234>
     458:	6b 85       	ldd	r22, Y+11	; 0x0b
     45a:	7c 85       	ldd	r23, Y+12	; 0x0c
     45c:	8d 85       	ldd	r24, Y+13	; 0x0d
     45e:	9e 85       	ldd	r25, Y+14	; 0x0e
     460:	2b ed       	ldi	r18, 0xDB	; 219
     462:	3f e0       	ldi	r19, 0x0F	; 15
     464:	49 ec       	ldi	r20, 0xC9	; 201
     466:	50 e4       	ldi	r21, 0x40	; 64
     468:	0e 94 1c 09 	call	0x1238	; 0x1238 <__subsf3>
     46c:	1c c0       	rjmp	.+56     	; 0x4a6 <CalculPWM+0x26c>
     46e:	c8 01       	movw	r24, r16
     470:	b7 01       	movw	r22, r14
     472:	2b ed       	ldi	r18, 0xDB	; 219
     474:	3f e0       	ldi	r19, 0x0F	; 15
     476:	49 e4       	ldi	r20, 0x49	; 73
     478:	50 e4       	ldi	r21, 0x40	; 64
     47a:	0e 94 1c 09 	call	0x1238	; 0x1238 <__subsf3>
     47e:	9b 01       	movw	r18, r22
     480:	ac 01       	movw	r20, r24
     482:	6b 85       	ldd	r22, Y+11	; 0x0b
     484:	7c 85       	ldd	r23, Y+12	; 0x0c
     486:	8d 85       	ldd	r24, Y+13	; 0x0d
     488:	9e 85       	ldd	r25, Y+14	; 0x0e
     48a:	0e 94 b0 0b 	call	0x1760	; 0x1760 <__lesf2>
     48e:	18 16       	cp	r1, r24
     490:	74 f0       	brlt	.+28     	; 0x4ae <CalculPWM+0x274>
     492:	6b 85       	ldd	r22, Y+11	; 0x0b
     494:	7c 85       	ldd	r23, Y+12	; 0x0c
     496:	8d 85       	ldd	r24, Y+13	; 0x0d
     498:	9e 85       	ldd	r25, Y+14	; 0x0e
     49a:	2b ed       	ldi	r18, 0xDB	; 219
     49c:	3f e0       	ldi	r19, 0x0F	; 15
     49e:	49 ec       	ldi	r20, 0xC9	; 201
     4a0:	50 e4       	ldi	r21, 0x40	; 64
     4a2:	0e 94 4d 09 	call	0x129a	; 0x129a <__addsf3>
     4a6:	6b 87       	std	Y+11, r22	; 0x0b
     4a8:	7c 87       	std	Y+12, r23	; 0x0c
     4aa:	8d 87       	std	Y+13, r24	; 0x0d
     4ac:	9e 87       	std	Y+14, r25	; 0x0e
     4ae:	6b 85       	ldd	r22, Y+11	; 0x0b
     4b0:	7c 85       	ldd	r23, Y+12	; 0x0c
     4b2:	8d 85       	ldd	r24, Y+13	; 0x0d
     4b4:	9e 85       	ldd	r25, Y+14	; 0x0e
     4b6:	a8 01       	movw	r20, r16
     4b8:	97 01       	movw	r18, r14
     4ba:	0e 94 1c 09 	call	0x1238	; 0x1238 <__subsf3>
     4be:	5b 01       	movw	r10, r22
     4c0:	6c 01       	movw	r12, r24
     4c2:	60 93 9a 01 	sts	0x019A, r22
     4c6:	70 93 9b 01 	sts	0x019B, r23
     4ca:	80 93 9c 01 	sts	0x019C, r24
     4ce:	90 93 9d 01 	sts	0x019D, r25

	Ut = -H11*Vt + H12*Vitesse_D;
     4d2:	c4 01       	movw	r24, r8
     4d4:	b3 01       	movw	r22, r6
     4d6:	28 ee       	ldi	r18, 0xE8	; 232
     4d8:	31 eb       	ldi	r19, 0xB1	; 177
     4da:	49 e7       	ldi	r20, 0x79	; 121
     4dc:	50 ec       	ldi	r21, 0xC0	; 192
     4de:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     4e2:	7b 01       	movw	r14, r22
     4e4:	8c 01       	movw	r16, r24
     4e6:	6f 81       	ldd	r22, Y+7	; 0x07
     4e8:	78 85       	ldd	r23, Y+8	; 0x08
     4ea:	89 85       	ldd	r24, Y+9	; 0x09
     4ec:	9a 85       	ldd	r25, Y+10	; 0x0a
     4ee:	24 ef       	ldi	r18, 0xF4	; 244
     4f0:	38 ed       	ldi	r19, 0xD8	; 216
     4f2:	4c e9       	ldi	r20, 0x9C	; 156
     4f4:	50 e4       	ldi	r21, 0x40	; 64
     4f6:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     4fa:	9b 01       	movw	r18, r22
     4fc:	ac 01       	movw	r20, r24
     4fe:	c8 01       	movw	r24, r16
     500:	b7 01       	movw	r22, r14
     502:	0e 94 4d 09 	call	0x129a	; 0x129a <__addsf3>
     506:	3b 01       	movw	r6, r22
     508:	4c 01       	movw	r8, r24
	Ua = H21*ErreurAngle - H22*W;
     50a:	c6 01       	movw	r24, r12
     50c:	b5 01       	movw	r22, r10
     50e:	21 e2       	ldi	r18, 0x21	; 33
     510:	37 ea       	ldi	r19, 0xA7	; 167
     512:	44 e9       	ldi	r20, 0x94	; 148
     514:	5f e3       	ldi	r21, 0x3F	; 63
     516:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     51a:	7b 01       	movw	r14, r22
     51c:	8c 01       	movw	r16, r24
     51e:	6b 81       	ldd	r22, Y+3	; 0x03
     520:	7c 81       	ldd	r23, Y+4	; 0x04
     522:	8d 81       	ldd	r24, Y+5	; 0x05
     524:	9e 81       	ldd	r25, Y+6	; 0x06
     526:	28 e1       	ldi	r18, 0x18	; 24
     528:	37 ea       	ldi	r19, 0xA7	; 167
     52a:	44 e1       	ldi	r20, 0x14	; 20
     52c:	5f eb       	ldi	r21, 0xBF	; 191
     52e:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     532:	9b 01       	movw	r18, r22
     534:	ac 01       	movw	r20, r24
     536:	c8 01       	movw	r24, r16
     538:	b7 01       	movw	r22, r14
     53a:	0e 94 4d 09 	call	0x129a	; 0x129a <__addsf3>
     53e:	5b 01       	movw	r10, r22
     540:	6c 01       	movw	r12, r24
			
	Signe_Ua = (Ua >= 0.0)   ? 1 : -1;
     542:	20 e0       	ldi	r18, 0x00	; 0
     544:	30 e0       	ldi	r19, 0x00	; 0
     546:	40 e0       	ldi	r20, 0x00	; 0
     548:	50 e0       	ldi	r21, 0x00	; 0
     54a:	0e 94 50 0b 	call	0x16a0	; 0x16a0 <__gesf2>
     54e:	87 ff       	sbrs	r24, 7
     550:	03 c0       	rjmp	.+6      	; 0x558 <CalculPWM+0x31e>
     552:	0f ef       	ldi	r16, 0xFF	; 255
     554:	1f ef       	ldi	r17, 0xFF	; 255
     556:	02 c0       	rjmp	.+4      	; 0x55c <CalculPWM+0x322>
     558:	01 e0       	ldi	r16, 0x01	; 1
     55a:	10 e0       	ldi	r17, 0x00	; 0
     55c:	10 93 85 01 	sts	0x0185, r17
     560:	00 93 84 01 	sts	0x0184, r16
	Signe_Ut = (Ut >= 0.0) ? 1 : -1;
     564:	c4 01       	movw	r24, r8
     566:	b3 01       	movw	r22, r6
     568:	20 e0       	ldi	r18, 0x00	; 0
     56a:	30 e0       	ldi	r19, 0x00	; 0
     56c:	40 e0       	ldi	r20, 0x00	; 0
     56e:	50 e0       	ldi	r21, 0x00	; 0
     570:	0e 94 50 0b 	call	0x16a0	; 0x16a0 <__gesf2>
     574:	87 ff       	sbrs	r24, 7
     576:	05 c0       	rjmp	.+10     	; 0x582 <CalculPWM+0x348>
     578:	2f ef       	ldi	r18, 0xFF	; 255
     57a:	3f ef       	ldi	r19, 0xFF	; 255
     57c:	3a 83       	std	Y+2, r19	; 0x02
     57e:	29 83       	std	Y+1, r18	; 0x01
     580:	04 c0       	rjmp	.+8      	; 0x58a <CalculPWM+0x350>
     582:	81 e0       	ldi	r24, 0x01	; 1
     584:	90 e0       	ldi	r25, 0x00	; 0
     586:	9a 83       	std	Y+2, r25	; 0x02
     588:	89 83       	std	Y+1, r24	; 0x01
     58a:	a9 81       	ldd	r26, Y+1	; 0x01
     58c:	ba 81       	ldd	r27, Y+2	; 0x02
     58e:	b0 93 83 01 	sts	0x0183, r27
     592:	a0 93 82 01 	sts	0x0182, r26
	
	Ua = (Signe_Ua*Ua > 1.0) ? Signe_Ua*1.0 : ((Signe_Ua*Ua <= 0.05) ? 0.0 : Ua);
     596:	b8 01       	movw	r22, r16
     598:	88 27       	eor	r24, r24
     59a:	77 fd       	sbrc	r23, 7
     59c:	80 95       	com	r24
     59e:	98 2f       	mov	r25, r24
     5a0:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <__floatsisf>
     5a4:	1b 01       	movw	r2, r22
     5a6:	2c 01       	movw	r4, r24
     5a8:	a6 01       	movw	r20, r12
     5aa:	95 01       	movw	r18, r10
     5ac:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     5b0:	7b 01       	movw	r14, r22
     5b2:	8c 01       	movw	r16, r24
     5b4:	20 e0       	ldi	r18, 0x00	; 0
     5b6:	30 e0       	ldi	r19, 0x00	; 0
     5b8:	40 e8       	ldi	r20, 0x80	; 128
     5ba:	5f e3       	ldi	r21, 0x3F	; 63
     5bc:	0e 94 20 0b 	call	0x1640	; 0x1640 <__gtsf2>
     5c0:	18 16       	cp	r1, r24
     5c2:	1c f4       	brge	.+6      	; 0x5ca <CalculPWM+0x390>
     5c4:	62 01       	movw	r12, r4
     5c6:	51 01       	movw	r10, r2
     5c8:	14 c0       	rjmp	.+40     	; 0x5f2 <CalculPWM+0x3b8>
     5ca:	c8 01       	movw	r24, r16
     5cc:	b7 01       	movw	r22, r14
     5ce:	2d ec       	ldi	r18, 0xCD	; 205
     5d0:	3c ec       	ldi	r19, 0xCC	; 204
     5d2:	4c e4       	ldi	r20, 0x4C	; 76
     5d4:	5d e3       	ldi	r21, 0x3D	; 61
     5d6:	0e 94 b0 0b 	call	0x1760	; 0x1760 <__lesf2>
     5da:	18 16       	cp	r1, r24
     5dc:	54 f0       	brlt	.+20     	; 0x5f2 <CalculPWM+0x3b8>
     5de:	0f 2e       	mov	r0, r31
     5e0:	f0 e0       	ldi	r31, 0x00	; 0
     5e2:	af 2e       	mov	r10, r31
     5e4:	f0 e0       	ldi	r31, 0x00	; 0
     5e6:	bf 2e       	mov	r11, r31
     5e8:	f0 e0       	ldi	r31, 0x00	; 0
     5ea:	cf 2e       	mov	r12, r31
     5ec:	f0 e0       	ldi	r31, 0x00	; 0
     5ee:	df 2e       	mov	r13, r31
     5f0:	f0 2d       	mov	r31, r0
     5f2:	a0 92 86 01 	sts	0x0186, r10
     5f6:	b0 92 87 01 	sts	0x0187, r11
     5fa:	c0 92 88 01 	sts	0x0188, r12
     5fe:	d0 92 89 01 	sts	0x0189, r13
	Ut = (Signe_Ut*Ut > 1.0) ? Signe_Ut*1.0 : Ut;
     602:	e9 81       	ldd	r30, Y+1	; 0x01
     604:	fa 81       	ldd	r31, Y+2	; 0x02
     606:	bf 01       	movw	r22, r30
     608:	88 27       	eor	r24, r24
     60a:	77 fd       	sbrc	r23, 7
     60c:	80 95       	com	r24
     60e:	98 2f       	mov	r25, r24
     610:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <__floatsisf>
     614:	7b 01       	movw	r14, r22
     616:	8c 01       	movw	r16, r24
     618:	a4 01       	movw	r20, r8
     61a:	93 01       	movw	r18, r6
     61c:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     620:	20 e0       	ldi	r18, 0x00	; 0
     622:	30 e0       	ldi	r19, 0x00	; 0
     624:	40 e8       	ldi	r20, 0x80	; 128
     626:	5f e3       	ldi	r21, 0x3F	; 63
     628:	0e 94 20 0b 	call	0x1640	; 0x1640 <__gtsf2>
     62c:	18 16       	cp	r1, r24
     62e:	14 f4       	brge	.+4      	; 0x634 <CalculPWM+0x3fa>
     630:	37 01       	movw	r6, r14
     632:	48 01       	movw	r8, r16
	Ut = ((Signe_Ut*Ut) > (1.0 - Signe_Ua*Ua)) ? Signe_Ut*(1.0 - Signe_Ua*Ua) : Ut;
     634:	c2 01       	movw	r24, r4
     636:	b1 01       	movw	r22, r2
     638:	a6 01       	movw	r20, r12
     63a:	95 01       	movw	r18, r10
     63c:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     640:	9b 01       	movw	r18, r22
     642:	ac 01       	movw	r20, r24
     644:	60 e0       	ldi	r22, 0x00	; 0
     646:	70 e0       	ldi	r23, 0x00	; 0
     648:	80 e8       	ldi	r24, 0x80	; 128
     64a:	9f e3       	ldi	r25, 0x3F	; 63
     64c:	0e 94 1c 09 	call	0x1238	; 0x1238 <__subsf3>
     650:	1b 01       	movw	r2, r22
     652:	2c 01       	movw	r4, r24
     654:	c8 01       	movw	r24, r16
     656:	b7 01       	movw	r22, r14
     658:	a4 01       	movw	r20, r8
     65a:	93 01       	movw	r18, r6
     65c:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     660:	a2 01       	movw	r20, r4
     662:	91 01       	movw	r18, r2
     664:	0e 94 20 0b 	call	0x1640	; 0x1640 <__gtsf2>
     668:	18 16       	cp	r1, r24
     66a:	44 f4       	brge	.+16     	; 0x67c <CalculPWM+0x442>
     66c:	c8 01       	movw	r24, r16
     66e:	b7 01       	movw	r22, r14
     670:	a2 01       	movw	r20, r4
     672:	91 01       	movw	r18, r2
     674:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     678:	3b 01       	movw	r6, r22
     67a:	4c 01       	movw	r8, r24
     67c:	60 92 8a 01 	sts	0x018A, r6
     680:	70 92 8b 01 	sts	0x018B, r7
     684:	80 92 8c 01 	sts	0x018C, r8
     688:	90 92 8d 01 	sts	0x018D, r9


	*Duty_D = (Ut+Ua);
     68c:	c4 01       	movw	r24, r8
     68e:	b3 01       	movw	r22, r6
     690:	a6 01       	movw	r20, r12
     692:	95 01       	movw	r18, r10
     694:	0e 94 4d 09 	call	0x129a	; 0x129a <__addsf3>
     698:	ad a1       	ldd	r26, Y+37	; 0x25
     69a:	be a1       	ldd	r27, Y+38	; 0x26
     69c:	6d 93       	st	X+, r22
     69e:	7d 93       	st	X+, r23
     6a0:	8d 93       	st	X+, r24
     6a2:	9c 93       	st	X, r25
     6a4:	13 97       	sbiw	r26, 0x03	; 3
	*Duty_G = (Ut-Ua);
     6a6:	c4 01       	movw	r24, r8
     6a8:	b3 01       	movw	r22, r6
     6aa:	a6 01       	movw	r20, r12
     6ac:	95 01       	movw	r18, r10
     6ae:	0e 94 1c 09 	call	0x1238	; 0x1238 <__subsf3>
     6b2:	ef 85       	ldd	r30, Y+15	; 0x0f
     6b4:	f8 89       	ldd	r31, Y+16	; 0x10
     6b6:	60 83       	st	Z, r22
     6b8:	71 83       	std	Z+1, r23	; 0x01
     6ba:	82 83       	std	Z+2, r24	; 0x02
     6bc:	93 83       	std	Z+3, r25	; 0x03

	*Duty_D = (*Duty_D > 0.99) ? 0.99 : ((*Duty_D < -0.99) ? -0.99 : *Duty_D);
     6be:	ad a1       	ldd	r26, Y+37	; 0x25
     6c0:	be a1       	ldd	r27, Y+38	; 0x26
     6c2:	ed 90       	ld	r14, X+
     6c4:	fd 90       	ld	r15, X+
     6c6:	0d 91       	ld	r16, X+
     6c8:	1c 91       	ld	r17, X
     6ca:	c8 01       	movw	r24, r16
     6cc:	b7 01       	movw	r22, r14
     6ce:	24 ea       	ldi	r18, 0xA4	; 164
     6d0:	30 e7       	ldi	r19, 0x70	; 112
     6d2:	4d e7       	ldi	r20, 0x7D	; 125
     6d4:	5f e3       	ldi	r21, 0x3F	; 63
     6d6:	0e 94 20 0b 	call	0x1640	; 0x1640 <__gtsf2>
     6da:	18 16       	cp	r1, r24
     6dc:	5c f4       	brge	.+22     	; 0x6f4 <CalculPWM+0x4ba>
     6de:	0f 2e       	mov	r0, r31
     6e0:	f4 ea       	ldi	r31, 0xA4	; 164
     6e2:	ef 2e       	mov	r14, r31
     6e4:	f0 e7       	ldi	r31, 0x70	; 112
     6e6:	ff 2e       	mov	r15, r31
     6e8:	fd e7       	ldi	r31, 0x7D	; 125
     6ea:	0f 2f       	mov	r16, r31
     6ec:	ff e3       	ldi	r31, 0x3F	; 63
     6ee:	1f 2f       	mov	r17, r31
     6f0:	f0 2d       	mov	r31, r0
     6f2:	14 c0       	rjmp	.+40     	; 0x71c <CalculPWM+0x4e2>
     6f4:	c8 01       	movw	r24, r16
     6f6:	b7 01       	movw	r22, r14
     6f8:	24 ea       	ldi	r18, 0xA4	; 164
     6fa:	30 e7       	ldi	r19, 0x70	; 112
     6fc:	4d e7       	ldi	r20, 0x7D	; 125
     6fe:	5f eb       	ldi	r21, 0xBF	; 191
     700:	0e 94 80 0b 	call	0x1700	; 0x1700 <__ltsf2>
     704:	88 23       	and	r24, r24
     706:	54 f4       	brge	.+20     	; 0x71c <CalculPWM+0x4e2>
     708:	0f 2e       	mov	r0, r31
     70a:	f4 ea       	ldi	r31, 0xA4	; 164
     70c:	ef 2e       	mov	r14, r31
     70e:	f0 e7       	ldi	r31, 0x70	; 112
     710:	ff 2e       	mov	r15, r31
     712:	fd e7       	ldi	r31, 0x7D	; 125
     714:	0f 2f       	mov	r16, r31
     716:	ff eb       	ldi	r31, 0xBF	; 191
     718:	1f 2f       	mov	r17, r31
     71a:	f0 2d       	mov	r31, r0
     71c:	ed a1       	ldd	r30, Y+37	; 0x25
     71e:	fe a1       	ldd	r31, Y+38	; 0x26
     720:	e0 82       	st	Z, r14
     722:	f1 82       	std	Z+1, r15	; 0x01
     724:	02 83       	std	Z+2, r16	; 0x02
     726:	13 83       	std	Z+3, r17	; 0x03
	*Duty_G = (*Duty_G > 0.99) ? 0.99 : ((*Duty_G < -0.99) ? -0.99 : *Duty_G);	
     728:	af 85       	ldd	r26, Y+15	; 0x0f
     72a:	b8 89       	ldd	r27, Y+16	; 0x10
     72c:	ed 90       	ld	r14, X+
     72e:	fd 90       	ld	r15, X+
     730:	0d 91       	ld	r16, X+
     732:	1c 91       	ld	r17, X
     734:	c8 01       	movw	r24, r16
     736:	b7 01       	movw	r22, r14
     738:	24 ea       	ldi	r18, 0xA4	; 164
     73a:	30 e7       	ldi	r19, 0x70	; 112
     73c:	4d e7       	ldi	r20, 0x7D	; 125
     73e:	5f e3       	ldi	r21, 0x3F	; 63
     740:	0e 94 20 0b 	call	0x1640	; 0x1640 <__gtsf2>
     744:	18 16       	cp	r1, r24
     746:	5c f4       	brge	.+22     	; 0x75e <CalculPWM+0x524>
     748:	0f 2e       	mov	r0, r31
     74a:	f4 ea       	ldi	r31, 0xA4	; 164
     74c:	ef 2e       	mov	r14, r31
     74e:	f0 e7       	ldi	r31, 0x70	; 112
     750:	ff 2e       	mov	r15, r31
     752:	fd e7       	ldi	r31, 0x7D	; 125
     754:	0f 2f       	mov	r16, r31
     756:	ff e3       	ldi	r31, 0x3F	; 63
     758:	1f 2f       	mov	r17, r31
     75a:	f0 2d       	mov	r31, r0
     75c:	14 c0       	rjmp	.+40     	; 0x786 <CalculPWM+0x54c>
     75e:	c8 01       	movw	r24, r16
     760:	b7 01       	movw	r22, r14
     762:	24 ea       	ldi	r18, 0xA4	; 164
     764:	30 e7       	ldi	r19, 0x70	; 112
     766:	4d e7       	ldi	r20, 0x7D	; 125
     768:	5f eb       	ldi	r21, 0xBF	; 191
     76a:	0e 94 80 0b 	call	0x1700	; 0x1700 <__ltsf2>
     76e:	88 23       	and	r24, r24
     770:	54 f4       	brge	.+20     	; 0x786 <CalculPWM+0x54c>
     772:	0f 2e       	mov	r0, r31
     774:	f4 ea       	ldi	r31, 0xA4	; 164
     776:	ef 2e       	mov	r14, r31
     778:	f0 e7       	ldi	r31, 0x70	; 112
     77a:	ff 2e       	mov	r15, r31
     77c:	fd e7       	ldi	r31, 0x7D	; 125
     77e:	0f 2f       	mov	r16, r31
     780:	ff eb       	ldi	r31, 0xBF	; 191
     782:	1f 2f       	mov	r17, r31
     784:	f0 2d       	mov	r31, r0
     786:	ef 85       	ldd	r30, Y+15	; 0x0f
     788:	f8 89       	ldd	r31, Y+16	; 0x10
     78a:	e0 82       	st	Z, r14
     78c:	f1 82       	std	Z+1, r15	; 0x01
     78e:	02 83       	std	Z+2, r16	; 0x02
     790:	13 83       	std	Z+3, r17	; 0x03
}
     792:	60 96       	adiw	r28, 0x10	; 16
     794:	0f b6       	in	r0, 0x3f	; 63
     796:	f8 94       	cli
     798:	de bf       	out	0x3e, r29	; 62
     79a:	0f be       	out	0x3f, r0	; 63
     79c:	cd bf       	out	0x3d, r28	; 61
     79e:	cf 91       	pop	r28
     7a0:	df 91       	pop	r29
     7a2:	1f 91       	pop	r17
     7a4:	0f 91       	pop	r16
     7a6:	ff 90       	pop	r15
     7a8:	ef 90       	pop	r14
     7aa:	df 90       	pop	r13
     7ac:	cf 90       	pop	r12
     7ae:	bf 90       	pop	r11
     7b0:	af 90       	pop	r10
     7b2:	9f 90       	pop	r9
     7b4:	8f 90       	pop	r8
     7b6:	7f 90       	pop	r7
     7b8:	6f 90       	pop	r6
     7ba:	5f 90       	pop	r5
     7bc:	4f 90       	pop	r4
     7be:	3f 90       	pop	r3
     7c0:	2f 90       	pop	r2
     7c2:	08 95       	ret

000007c4 <PWM_Init>:
	//- Fast PWM
	//PWMA = moteur droit - Interruption de débordement
	//- Niveau haut au débordement
	//- Niveau bas à la comparaison
	// Configuration mode 14 (Fast PWM avec ICR1)
	DDRD =0b11111100; //(1 << PIND4) | (1 << PIND5);  //Pin 4 et 5 configurées en sortie
     7c4:	8c ef       	ldi	r24, 0xFC	; 252
     7c6:	81 bb       	out	0x11, r24	; 17
	TCCR1A =  (1 << COM1A1) | (0 << COM1A0) | (1 << COM1B1)  | (0 << COM1B0)   |  (0 << FOC1A)  |  (0 << FOC1B) |  (1 << WGM11) | (0 << WGM10);
     7c8:	82 ea       	ldi	r24, 0xA2	; 162
     7ca:	8f bd       	out	0x2f, r24	; 47
	TCCR1B =  (0 << ICNC1)  | (0 << ICES1)  | (0 << 5)      |  (1 << WGM13)    |  (1 << WGM12)  | ( 0 << CS12)  |  (1 << CS11)  | (0 << CS10);
     7cc:	8a e1       	ldi	r24, 0x1A	; 26
     7ce:	8e bd       	out	0x2e, r24	; 46
	OCR1A = 0;                                                                                                                                                                                                                                                                  
     7d0:	1b bc       	out	0x2b, r1	; 43
     7d2:	1a bc       	out	0x2a, r1	; 42
	OCR1B = 0;
     7d4:	19 bc       	out	0x29, r1	; 41
     7d6:	18 bc       	out	0x28, r1	; 40
	ICR1 = PWM_TOP;
     7d8:	8f e0       	ldi	r24, 0x0F	; 15
     7da:	97 e2       	ldi	r25, 0x27	; 39
     7dc:	97 bd       	out	0x27, r25	; 39
     7de:	86 bd       	out	0x26, r24	; 38
	TIMSK = (0 << OCIE2)  | (0 << TOIE2)  | (0 << TICIE1) |   (0 << OCIE1A) | (0 << OCIE1B) |  (1 << TOIE1) | (0 << OCIE0) | (0 << TOIE0);
     7e0:	84 e0       	ldi	r24, 0x04	; 4
     7e2:	89 bf       	out	0x39, r24	; 57
	
}
     7e4:	08 95       	ret

000007e6 <__vector_9>:



ISR(TIMER1_OVF_vect){
     7e6:	1f 92       	push	r1
     7e8:	0f 92       	push	r0
     7ea:	0f b6       	in	r0, 0x3f	; 63
     7ec:	0f 92       	push	r0
     7ee:	11 24       	eor	r1, r1
     7f0:	2f 93       	push	r18
     7f2:	3f 93       	push	r19
     7f4:	8f 93       	push	r24
     7f6:	9f 93       	push	r25
	
	// Déclenché à chaque 5 ms en conformité est avec les paramètres d'initialisation 
	// de la fonction PWM_init().
	flag5ms=1;
     7f8:	81 e0       	ldi	r24, 0x01	; 1
     7fa:	80 93 a7 01 	sts	0x01A7, r24
	//PORTB ^= 1;
	//compteur1=(compteur1+1)%250;
	
	if (calibration_req == 1)
     7fe:	20 91 a5 01 	lds	r18, 0x01A5
     802:	21 30       	cpi	r18, 0x01	; 1
     804:	c1 f4       	brne	.+48     	; 0x836 <__vector_9+0x50>
	{
		compteur1++;
     806:	80 91 a2 01 	lds	r24, 0x01A2
     80a:	90 91 a3 01 	lds	r25, 0x01A3
     80e:	01 96       	adiw	r24, 0x01	; 1
     810:	90 93 a3 01 	sts	0x01A3, r25
     814:	80 93 a2 01 	sts	0x01A2, r24
		if (compteur1 >= REGIME_TRANSITOIRE)
     818:	80 91 a2 01 	lds	r24, 0x01A2
     81c:	90 91 a3 01 	lds	r25, 0x01A3
     820:	84 5f       	subi	r24, 0xF4	; 244
     822:	91 40       	sbci	r25, 0x01	; 1
     824:	40 f0       	brcs	.+16     	; 0x836 <__vector_9+0x50>
		{
		    //PORTB ^= 1;
			calibration_req = 0;
     826:	10 92 a5 01 	sts	0x01A5, r1
			compteur1 = 0;
     82a:	10 92 a3 01 	sts	0x01A3, r1
     82e:	10 92 a2 01 	sts	0x01A2, r1
			calibration_rdy = 1;
     832:	20 93 a4 01 	sts	0x01A4, r18
		
	}

	
	
}
     836:	9f 91       	pop	r25
     838:	8f 91       	pop	r24
     83a:	3f 91       	pop	r19
     83c:	2f 91       	pop	r18
     83e:	0f 90       	pop	r0
     840:	0f be       	out	0x3f, r0	; 63
     842:	0f 90       	pop	r0
     844:	1f 90       	pop	r1
     846:	18 95       	reti

00000848 <ordre_Moteur2>:

}


void ordre_Moteur2(float dutyCycleG, float dutyCycleD)
{
     848:	af 92       	push	r10
     84a:	bf 92       	push	r11
     84c:	cf 92       	push	r12
     84e:	df 92       	push	r13
     850:	ef 92       	push	r14
     852:	ff 92       	push	r15
     854:	0f 93       	push	r16
     856:	1f 93       	push	r17
     858:	7b 01       	movw	r14, r22
     85a:	8c 01       	movw	r16, r24
     85c:	59 01       	movw	r10, r18
     85e:	6a 01       	movw	r12, r20
	//Cas Moteur Gauche
	
	if (dutyCycleG > 0.01)
     860:	2a e0       	ldi	r18, 0x0A	; 10
     862:	37 ed       	ldi	r19, 0xD7	; 215
     864:	43 e2       	ldi	r20, 0x23	; 35
     866:	5c e3       	ldi	r21, 0x3C	; 60
     868:	0e 94 20 0b 	call	0x1640	; 0x1640 <__gtsf2>
     86c:	18 16       	cp	r1, r24
     86e:	8c f4       	brge	.+34     	; 0x892 <__stack+0x33>
	{
		OCR1B=(uint16_t)((float)ICR1*dutyCycleG);
     870:	66 b5       	in	r22, 0x26	; 38
     872:	77 b5       	in	r23, 0x27	; 39
     874:	80 e0       	ldi	r24, 0x00	; 0
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	0e 94 92 0c 	call	0x1924	; 0x1924 <__floatunsisf>
     87c:	a8 01       	movw	r20, r16
     87e:	97 01       	movw	r18, r14
     880:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     884:	0e 94 a4 07 	call	0xf48	; 0xf48 <__fixunssfsi>
     888:	79 bd       	out	0x29, r23	; 41
     88a:	68 bd       	out	0x28, r22	; 40
		PORTD |= (1 << DIR_G1);
     88c:	92 9a       	sbi	0x12, 2	; 18
		PORTD &= ~(1 << DIR_G2);
     88e:	93 98       	cbi	0x12, 3	; 18
     890:	1e c0       	rjmp	.+60     	; 0x8ce <__stack+0x6f>
	}
	
	else if (dutyCycleG < 0.01)
     892:	c8 01       	movw	r24, r16
     894:	b7 01       	movw	r22, r14
     896:	2a e0       	ldi	r18, 0x0A	; 10
     898:	37 ed       	ldi	r19, 0xD7	; 215
     89a:	43 e2       	ldi	r20, 0x23	; 35
     89c:	5c e3       	ldi	r21, 0x3C	; 60
     89e:	0e 94 80 0b 	call	0x1700	; 0x1700 <__ltsf2>
     8a2:	88 23       	and	r24, r24
     8a4:	94 f4       	brge	.+36     	; 0x8ca <__stack+0x6b>
	{
		OCR1B=(uint16_t)((float)ICR1*(-dutyCycleG));
     8a6:	66 b5       	in	r22, 0x26	; 38
     8a8:	77 b5       	in	r23, 0x27	; 39
     8aa:	80 e0       	ldi	r24, 0x00	; 0
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	0e 94 92 0c 	call	0x1924	; 0x1924 <__floatunsisf>
     8b2:	a8 01       	movw	r20, r16
     8b4:	97 01       	movw	r18, r14
     8b6:	50 58       	subi	r21, 0x80	; 128
     8b8:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     8bc:	0e 94 a4 07 	call	0xf48	; 0xf48 <__fixunssfsi>
     8c0:	79 bd       	out	0x29, r23	; 41
     8c2:	68 bd       	out	0x28, r22	; 40
		PORTD |= (1 << DIR_G2);
     8c4:	93 9a       	sbi	0x12, 3	; 18
		PORTD &= ~(1 << DIR_G1);
     8c6:	92 98       	cbi	0x12, 2	; 18
     8c8:	02 c0       	rjmp	.+4      	; 0x8ce <__stack+0x6f>
	}

	else 
	{
		PORTD |= (0 << DIR_D2) | (0 << DIR_D1) ;
     8ca:	82 b3       	in	r24, 0x12	; 18
     8cc:	82 bb       	out	0x12, r24	; 18
	}

	//Cas Moteur Droit

	if (dutyCycleD > 0.01)
     8ce:	c6 01       	movw	r24, r12
     8d0:	b5 01       	movw	r22, r10
     8d2:	2a e0       	ldi	r18, 0x0A	; 10
     8d4:	37 ed       	ldi	r19, 0xD7	; 215
     8d6:	43 e2       	ldi	r20, 0x23	; 35
     8d8:	5c e3       	ldi	r21, 0x3C	; 60
     8da:	0e 94 20 0b 	call	0x1640	; 0x1640 <__gtsf2>
     8de:	18 16       	cp	r1, r24
     8e0:	8c f4       	brge	.+34     	; 0x904 <__stack+0xa5>
	{
		OCR1A=(uint16_t)((float)ICR1*dutyCycleD);
     8e2:	66 b5       	in	r22, 0x26	; 38
     8e4:	77 b5       	in	r23, 0x27	; 39
     8e6:	80 e0       	ldi	r24, 0x00	; 0
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	0e 94 92 0c 	call	0x1924	; 0x1924 <__floatunsisf>
     8ee:	a6 01       	movw	r20, r12
     8f0:	95 01       	movw	r18, r10
     8f2:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     8f6:	0e 94 a4 07 	call	0xf48	; 0xf48 <__fixunssfsi>
     8fa:	7b bd       	out	0x2b, r23	; 43
     8fc:	6a bd       	out	0x2a, r22	; 42
		PORTD |= (1 << DIR_D1);
     8fe:	96 9a       	sbi	0x12, 6	; 18
		PORTD &= ~(1 << DIR_D2);
     900:	97 98       	cbi	0x12, 7	; 18
     902:	1e c0       	rjmp	.+60     	; 0x940 <__stack+0xe1>
	}
	
	else if (dutyCycleD < 0.01)
     904:	c6 01       	movw	r24, r12
     906:	b5 01       	movw	r22, r10
     908:	2a e0       	ldi	r18, 0x0A	; 10
     90a:	37 ed       	ldi	r19, 0xD7	; 215
     90c:	43 e2       	ldi	r20, 0x23	; 35
     90e:	5c e3       	ldi	r21, 0x3C	; 60
     910:	0e 94 80 0b 	call	0x1700	; 0x1700 <__ltsf2>
     914:	88 23       	and	r24, r24
     916:	94 f4       	brge	.+36     	; 0x93c <__stack+0xdd>
	{
		OCR1A=(uint16_t)((float)ICR1*(-dutyCycleD));
     918:	66 b5       	in	r22, 0x26	; 38
     91a:	77 b5       	in	r23, 0x27	; 39
     91c:	80 e0       	ldi	r24, 0x00	; 0
     91e:	90 e0       	ldi	r25, 0x00	; 0
     920:	0e 94 92 0c 	call	0x1924	; 0x1924 <__floatunsisf>
     924:	a6 01       	movw	r20, r12
     926:	95 01       	movw	r18, r10
     928:	50 58       	subi	r21, 0x80	; 128
     92a:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     92e:	0e 94 a4 07 	call	0xf48	; 0xf48 <__fixunssfsi>
     932:	7b bd       	out	0x2b, r23	; 43
     934:	6a bd       	out	0x2a, r22	; 42
		PORTD |= (1 << DIR_D2);
     936:	97 9a       	sbi	0x12, 7	; 18
		PORTD &= ~(1 << DIR_D1);
     938:	96 98       	cbi	0x12, 6	; 18
     93a:	02 c0       	rjmp	.+4      	; 0x940 <__stack+0xe1>
	}

	else 
	{
		PORTD |= (0 << DIR_D2) | (0 << DIR_D1);
     93c:	82 b3       	in	r24, 0x12	; 18
     93e:	82 bb       	out	0x12, r24	; 18
	}

}
     940:	1f 91       	pop	r17
     942:	0f 91       	pop	r16
     944:	ff 90       	pop	r15
     946:	ef 90       	pop	r14
     948:	df 90       	pop	r13
     94a:	cf 90       	pop	r12
     94c:	bf 90       	pop	r11
     94e:	af 90       	pop	r10
     950:	08 95       	ret

00000952 <PWM_calibrer>:


void PWM_calibrer(void)
{
	//Calibration de Vmax+
	OCR1A=0;
     952:	1b bc       	out	0x2b, r1	; 43
     954:	1a bc       	out	0x2a, r1	; 42
	OCR1B=0;
     956:	19 bc       	out	0x29, r1	; 41
     958:	18 bc       	out	0x28, r1	; 40
	PORTD |= (1 << DIR_G1) | (0<<DIR_G2) | (1 << DIR_D1)| (0 << DIR_D2); //conf V+
     95a:	82 b3       	in	r24, 0x12	; 18
     95c:	84 64       	ori	r24, 0x44	; 68
     95e:	82 bb       	out	0x12, r24	; 18
	PORTA |= (1 << CAL);
     960:	dc 9a       	sbi	0x1b, 4	; 27

	//Lancer aquisition
	compteur1=0;
     962:	10 92 a3 01 	sts	0x01A3, r1
     966:	10 92 a2 01 	sts	0x01A2, r1
	calibration_req=1;
     96a:	81 e0       	ldi	r24, 0x01	; 1
     96c:	80 93 a5 01 	sts	0x01A5, r24
	calibration_rdy = 0;
     970:	10 92 a4 01 	sts	0x01A4, r1
	while (calibration_rdy!=1) // On attend que le moteur soit en régime permanent (2.5s)
     974:	80 91 a4 01 	lds	r24, 0x01A4
     978:	81 30       	cpi	r24, 0x01	; 1
     97a:	e1 f7       	brne	.-8      	; 0x974 <PWM_calibrer+0x22>
	;
	PORTB=0x01;
     97c:	88 bb       	out	0x18, r24	; 24

	calibration_rdy=0;
     97e:	10 92 a4 01 	sts	0x01A4, r1
	nombre_echantillon[GAUCHE]=0;
     982:	10 92 ac 01 	sts	0x01AC, r1
	nombre_echantillon[DROIT]=0;
     986:	10 92 ad 01 	sts	0x01AD, r1
	somme_vitesse[GAUCHE]=0;
     98a:	10 92 a9 01 	sts	0x01A9, r1
     98e:	10 92 a8 01 	sts	0x01A8, r1
	somme_vitesse[DROIT]=0;
     992:	10 92 ab 01 	sts	0x01AB, r1
     996:	10 92 aa 01 	sts	0x01AA, r1
	while(nombre_echantillon[GAUCHE]<ECHANTILLON_INIT && nombre_echantillon[DROIT]<ECHANTILLON_INIT)
     99a:	80 91 ac 01 	lds	r24, 0x01AC
     99e:	89 31       	cpi	r24, 0x19	; 25
     9a0:	20 f4       	brcc	.+8      	; 0x9aa <PWM_calibrer+0x58>
     9a2:	80 91 ad 01 	lds	r24, 0x01AD
     9a6:	89 31       	cpi	r24, 0x19	; 25
     9a8:	c0 f3       	brcs	.-16     	; 0x99a <PWM_calibrer+0x48>
	//	_delay_ms(50);
	;//On attend que l'ADC est recolté assez d'échantillons
	
	moyenne_Moteur(vMaxPlus);
     9aa:	86 ec       	ldi	r24, 0xC6	; 198
     9ac:	91 e0       	ldi	r25, 0x01	; 1
     9ae:	0e 94 a9 00 	call	0x152	; 0x152 <moyenne_Moteur>
	UCSRB|=(1<<UDRIE);
	*/
	
	
	//Calibration de Vzero+
	PORTD |= (1 << DIR_G1)  | (1 << DIR_D1); //conf V+
     9b2:	82 b3       	in	r24, 0x12	; 18
     9b4:	84 64       	ori	r24, 0x44	; 68
     9b6:	82 bb       	out	0x12, r24	; 18
	PORTD &=   ~(1 << DIR_G2) | ~(1 << PWM_G) | ~(1 << PWM_D) |  ~(1 << DIR_D2); //conf V+
     9b8:	82 b3       	in	r24, 0x12	; 18
     9ba:	82 bb       	out	0x12, r24	; 18
	PORTA &= ~(1 << CAL);
     9bc:	dc 98       	cbi	0x1b, 4	; 27
	calibration_req = 1;
     9be:	81 e0       	ldi	r24, 0x01	; 1
     9c0:	80 93 a5 01 	sts	0x01A5, r24
	calibration_rdy =0;
     9c4:	10 92 a4 01 	sts	0x01A4, r1
	while (calibration_rdy!=1)
     9c8:	80 91 a4 01 	lds	r24, 0x01A4
     9cc:	81 30       	cpi	r24, 0x01	; 1
     9ce:	e1 f7       	brne	.-8      	; 0x9c8 <PWM_calibrer+0x76>
	;
	nombre_echantillon[GAUCHE]=0;
     9d0:	10 92 ac 01 	sts	0x01AC, r1
	nombre_echantillon[DROIT]=0;
     9d4:	10 92 ad 01 	sts	0x01AD, r1
	somme_vitesse[GAUCHE]=0;
     9d8:	10 92 a9 01 	sts	0x01A9, r1
     9dc:	10 92 a8 01 	sts	0x01A8, r1
	somme_vitesse[DROIT]=0;
     9e0:	10 92 ab 01 	sts	0x01AB, r1
     9e4:	10 92 aa 01 	sts	0x01AA, r1
	calibration_rdy=0;
     9e8:	10 92 a4 01 	sts	0x01A4, r1
	while(nombre_echantillon[GAUCHE]<ECHANTILLON_INIT && nombre_echantillon[DROIT]<ECHANTILLON_INIT)
     9ec:	80 91 ac 01 	lds	r24, 0x01AC
     9f0:	89 31       	cpi	r24, 0x19	; 25
     9f2:	20 f4       	brcc	.+8      	; 0x9fc <PWM_calibrer+0xaa>
     9f4:	80 91 ad 01 	lds	r24, 0x01AD
     9f8:	89 31       	cpi	r24, 0x19	; 25
     9fa:	c0 f3       	brcs	.-16     	; 0x9ec <PWM_calibrer+0x9a>
	;//On attend que l'ADC est recolté assez d'échantillons
	moyenne_Moteur(vZeroPlus);
     9fc:	81 e6       	ldi	r24, 0x61	; 97
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	0e 94 a9 00 	call	0x152	; 0x152 <moyenne_Moteur>
	

	PORTB^=0b00000010;
     a04:	88 b3       	in	r24, 0x18	; 24
     a06:	92 e0       	ldi	r25, 0x02	; 2
     a08:	89 27       	eor	r24, r25
     a0a:	88 bb       	out	0x18, r24	; 24
	sprintf(debugChaine, "%d\r\n", (int)(vZeroPlus[GAUCHE]*1000));
	debug=1;
	UCSRB|=(1<<UDRIE);
	*/
	//Calibration de Vmax-
	PORTD |= (1 << DIR_G2) | (1 << DIR_D2); //conf V-
     a0c:	82 b3       	in	r24, 0x12	; 18
     a0e:	88 68       	ori	r24, 0x88	; 136
     a10:	82 bb       	out	0x12, r24	; 18
	PORTD &= ~(1 << DIR_G1) |  ~(1 << PWM_G) | ~(1 << PWM_D) | ~(1 << DIR_D1); //conf V-
     a12:	82 b3       	in	r24, 0x12	; 18
     a14:	82 bb       	out	0x12, r24	; 18
	PORTA |= (1 << CAL);
     a16:	dc 9a       	sbi	0x1b, 4	; 27
	calibration_req = 1;
     a18:	81 e0       	ldi	r24, 0x01	; 1
     a1a:	80 93 a5 01 	sts	0x01A5, r24
	calibration_rdy =0;
     a1e:	10 92 a4 01 	sts	0x01A4, r1
	while (calibration_rdy!=1)
     a22:	80 91 a4 01 	lds	r24, 0x01A4
     a26:	81 30       	cpi	r24, 0x01	; 1
     a28:	e1 f7       	brne	.-8      	; 0xa22 <PWM_calibrer+0xd0>
	;
	nombre_echantillon[GAUCHE]=0;
     a2a:	10 92 ac 01 	sts	0x01AC, r1
	nombre_echantillon[DROIT]=0;
     a2e:	10 92 ad 01 	sts	0x01AD, r1
	somme_vitesse[GAUCHE]=0;
     a32:	10 92 a9 01 	sts	0x01A9, r1
     a36:	10 92 a8 01 	sts	0x01A8, r1
	somme_vitesse[DROIT]=0;
     a3a:	10 92 ab 01 	sts	0x01AB, r1
     a3e:	10 92 aa 01 	sts	0x01AA, r1
	calibration_rdy=0;
     a42:	10 92 a4 01 	sts	0x01A4, r1
	while(nombre_echantillon[GAUCHE]<ECHANTILLON_INIT && nombre_echantillon[DROIT]<ECHANTILLON_INIT)
     a46:	80 91 ac 01 	lds	r24, 0x01AC
     a4a:	89 31       	cpi	r24, 0x19	; 25
     a4c:	20 f4       	brcc	.+8      	; 0xa56 <PWM_calibrer+0x104>
     a4e:	80 91 ad 01 	lds	r24, 0x01AD
     a52:	89 31       	cpi	r24, 0x19	; 25
     a54:	c0 f3       	brcs	.-16     	; 0xa46 <PWM_calibrer+0xf4>
	;//On attend que l'ADC est recolté assez d'échantillons
	moyenne_Moteur(vMaxMoins);
     a56:	8a ec       	ldi	r24, 0xCA	; 202
     a58:	91 e0       	ldi	r25, 0x01	; 1
     a5a:	0e 94 a9 00 	call	0x152	; 0x152 <moyenne_Moteur>
	PORTB^=0b00000100;
     a5e:	88 b3       	in	r24, 0x18	; 24
     a60:	94 e0       	ldi	r25, 0x04	; 4
     a62:	89 27       	eor	r24, r25
     a64:	88 bb       	out	0x18, r24	; 24
	sprintf(debugChaine, "%d\r\n", (int)(vMaxMoins[GAUCHE]*1000));
	debug=1;
	UCSRB|=(1<<UDRIE);
*/	
	//Calibration de Vzero-
	PORTD |= (1 << DIR_G2) |  (1 << DIR_D2); //conf V+
     a66:	82 b3       	in	r24, 0x12	; 18
     a68:	88 68       	ori	r24, 0x88	; 136
     a6a:	82 bb       	out	0x12, r24	; 18
	PORTD &= ~(1 << DIR_G1) |  ~(1 << PWM_G) | ~(1 << PWM_D) | ~(1 << DIR_D1); //conf V+
     a6c:	82 b3       	in	r24, 0x12	; 18
     a6e:	82 bb       	out	0x12, r24	; 18
	PORTA &= ~(1 << CAL);
     a70:	dc 98       	cbi	0x1b, 4	; 27
	calibration_req = 1;
     a72:	81 e0       	ldi	r24, 0x01	; 1
     a74:	80 93 a5 01 	sts	0x01A5, r24
	calibration_rdy =0;
     a78:	10 92 a4 01 	sts	0x01A4, r1
	while (calibration_rdy!=1)
     a7c:	80 91 a4 01 	lds	r24, 0x01A4
     a80:	81 30       	cpi	r24, 0x01	; 1
     a82:	e1 f7       	brne	.-8      	; 0xa7c <PWM_calibrer+0x12a>
	;
	nombre_echantillon[GAUCHE]=0;
     a84:	10 92 ac 01 	sts	0x01AC, r1
	nombre_echantillon[DROIT]=0;
     a88:	10 92 ad 01 	sts	0x01AD, r1
	somme_vitesse[GAUCHE]=0;
     a8c:	10 92 a9 01 	sts	0x01A9, r1
     a90:	10 92 a8 01 	sts	0x01A8, r1
	somme_vitesse[DROIT]=0;
     a94:	10 92 ab 01 	sts	0x01AB, r1
     a98:	10 92 aa 01 	sts	0x01AA, r1
	calibration_rdy=0;
     a9c:	10 92 a4 01 	sts	0x01A4, r1
	while(nombre_echantillon[GAUCHE]<ECHANTILLON_INIT && nombre_echantillon[DROIT]<ECHANTILLON_INIT)
     aa0:	80 91 ac 01 	lds	r24, 0x01AC
     aa4:	89 31       	cpi	r24, 0x19	; 25
     aa6:	20 f4       	brcc	.+8      	; 0xab0 <PWM_calibrer+0x15e>
     aa8:	80 91 ad 01 	lds	r24, 0x01AD
     aac:	89 31       	cpi	r24, 0x19	; 25
     aae:	c0 f3       	brcs	.-16     	; 0xaa0 <PWM_calibrer+0x14e>
	; //On attend que l'ADC est recolté assez d'échantillons
	moyenne_Moteur(vZeroMoins);
     ab0:	85 e6       	ldi	r24, 0x65	; 101
     ab2:	90 e0       	ldi	r25, 0x00	; 0
     ab4:	0e 94 a9 00 	call	0x152	; 0x152 <moyenne_Moteur>
	PORTB^=0b00001000;
     ab8:	88 b3       	in	r24, 0x18	; 24
     aba:	98 e0       	ldi	r25, 0x08	; 8
     abc:	89 27       	eor	r24, r25
     abe:	88 bb       	out	0x18, r24	; 24
	debug=1;
	UCSRB|=(1<<UDRIE);
*/	
	//Une fois tous nos échantillons récupérés, on calcul les termes des fonctions de correction (y=a.x+b)
	aPlus[GAUCHE] = (float)(((float)1023) / ((float)vMaxPlus[GAUCHE] - (float)vZeroPlus[GAUCHE]));
	aPlus[GAUCHE] /= 1024.0;
     ac0:	60 91 c6 01 	lds	r22, 0x01C6
     ac4:	70 91 c7 01 	lds	r23, 0x01C7
     ac8:	80 91 c8 01 	lds	r24, 0x01C8
     acc:	90 91 c9 01 	lds	r25, 0x01C9
     ad0:	20 91 61 00 	lds	r18, 0x0061
     ad4:	30 91 62 00 	lds	r19, 0x0062
     ad8:	40 91 63 00 	lds	r20, 0x0063
     adc:	50 91 64 00 	lds	r21, 0x0064
     ae0:	0e 94 1c 09 	call	0x1238	; 0x1238 <__subsf3>
     ae4:	9b 01       	movw	r18, r22
     ae6:	ac 01       	movw	r20, r24
     ae8:	60 e0       	ldi	r22, 0x00	; 0
     aea:	70 ec       	ldi	r23, 0xC0	; 192
     aec:	8f e7       	ldi	r24, 0x7F	; 127
     aee:	94 e4       	ldi	r25, 0x44	; 68
     af0:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__divsf3>
     af4:	20 e0       	ldi	r18, 0x00	; 0
     af6:	30 e0       	ldi	r19, 0x00	; 0
     af8:	40 e8       	ldi	r20, 0x80	; 128
     afa:	5a e3       	ldi	r21, 0x3A	; 58
     afc:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     b00:	60 93 69 00 	sts	0x0069, r22
     b04:	70 93 6a 00 	sts	0x006A, r23
     b08:	80 93 6b 00 	sts	0x006B, r24
     b0c:	90 93 6c 00 	sts	0x006C, r25
	aPlus[DROIT]  = (float)(((float)1023) / ((float)vMaxPlus[DROIT] - (float)vZeroPlus[DROIT]));
	aPlus[DROIT] /= 1024.0;
     b10:	60 91 ca 01 	lds	r22, 0x01CA
     b14:	70 91 cb 01 	lds	r23, 0x01CB
     b18:	80 91 cc 01 	lds	r24, 0x01CC
     b1c:	90 91 cd 01 	lds	r25, 0x01CD
     b20:	20 91 65 00 	lds	r18, 0x0065
     b24:	30 91 66 00 	lds	r19, 0x0066
     b28:	40 91 67 00 	lds	r20, 0x0067
     b2c:	50 91 68 00 	lds	r21, 0x0068
     b30:	0e 94 1c 09 	call	0x1238	; 0x1238 <__subsf3>
     b34:	9b 01       	movw	r18, r22
     b36:	ac 01       	movw	r20, r24
     b38:	60 e0       	ldi	r22, 0x00	; 0
     b3a:	70 ec       	ldi	r23, 0xC0	; 192
     b3c:	8f e7       	ldi	r24, 0x7F	; 127
     b3e:	94 e4       	ldi	r25, 0x44	; 68
     b40:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__divsf3>
     b44:	20 e0       	ldi	r18, 0x00	; 0
     b46:	30 e0       	ldi	r19, 0x00	; 0
     b48:	40 e8       	ldi	r20, 0x80	; 128
     b4a:	5a e3       	ldi	r21, 0x3A	; 58
     b4c:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     b50:	60 93 6d 00 	sts	0x006D, r22
     b54:	70 93 6e 00 	sts	0x006E, r23
     b58:	80 93 6f 00 	sts	0x006F, r24
     b5c:	90 93 70 00 	sts	0x0070, r25
	
	//bPlus[GAUCHE] = (float)(-aPlus[GAUCHE]*vZeroPlus[GAUCHE]/1024); //On divise ici le coef b par 1024 afin d'éviter une division de float
	//bPlus[DROIT]  = (float)(-aPlus[DROIT]*vZeroPlus[DROIT]/1024); //

	aMoins[GAUCHE] = (float)(((float)1023) / ((float)vMaxMoins[GAUCHE] - (float)vZeroMoins[GAUCHE]));
	aMoins[GAUCHE] /= 1024.0;
     b60:	60 91 ca 01 	lds	r22, 0x01CA
     b64:	70 91 cb 01 	lds	r23, 0x01CB
     b68:	80 91 cc 01 	lds	r24, 0x01CC
     b6c:	90 91 cd 01 	lds	r25, 0x01CD
     b70:	20 91 65 00 	lds	r18, 0x0065
     b74:	30 91 66 00 	lds	r19, 0x0066
     b78:	40 91 67 00 	lds	r20, 0x0067
     b7c:	50 91 68 00 	lds	r21, 0x0068
     b80:	0e 94 1c 09 	call	0x1238	; 0x1238 <__subsf3>
     b84:	9b 01       	movw	r18, r22
     b86:	ac 01       	movw	r20, r24
     b88:	60 e0       	ldi	r22, 0x00	; 0
     b8a:	70 ec       	ldi	r23, 0xC0	; 192
     b8c:	8f e7       	ldi	r24, 0x7F	; 127
     b8e:	94 e4       	ldi	r25, 0x44	; 68
     b90:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__divsf3>
     b94:	20 e0       	ldi	r18, 0x00	; 0
     b96:	30 e0       	ldi	r19, 0x00	; 0
     b98:	40 e8       	ldi	r20, 0x80	; 128
     b9a:	5a e3       	ldi	r21, 0x3A	; 58
     b9c:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     ba0:	60 93 71 00 	sts	0x0071, r22
     ba4:	70 93 72 00 	sts	0x0072, r23
     ba8:	80 93 73 00 	sts	0x0073, r24
     bac:	90 93 74 00 	sts	0x0074, r25
	aMoins[DROIT] = (float)(((float)1023) / ((float)vMaxMoins[DROIT] - (float)vZeroMoins[DROIT]));
	aMoins[DROIT] /= 1024.0;
     bb0:	60 91 ce 01 	lds	r22, 0x01CE
     bb4:	70 91 cf 01 	lds	r23, 0x01CF
     bb8:	80 91 d0 01 	lds	r24, 0x01D0
     bbc:	90 91 d1 01 	lds	r25, 0x01D1
     bc0:	20 91 69 00 	lds	r18, 0x0069
     bc4:	30 91 6a 00 	lds	r19, 0x006A
     bc8:	40 91 6b 00 	lds	r20, 0x006B
     bcc:	50 91 6c 00 	lds	r21, 0x006C
     bd0:	0e 94 1c 09 	call	0x1238	; 0x1238 <__subsf3>
     bd4:	9b 01       	movw	r18, r22
     bd6:	ac 01       	movw	r20, r24
     bd8:	60 e0       	ldi	r22, 0x00	; 0
     bda:	70 ec       	ldi	r23, 0xC0	; 192
     bdc:	8f e7       	ldi	r24, 0x7F	; 127
     bde:	94 e4       	ldi	r25, 0x44	; 68
     be0:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__divsf3>
     be4:	20 e0       	ldi	r18, 0x00	; 0
     be6:	30 e0       	ldi	r19, 0x00	; 0
     be8:	40 e8       	ldi	r20, 0x80	; 128
     bea:	5a e3       	ldi	r21, 0x3A	; 58
     bec:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     bf0:	60 93 75 00 	sts	0x0075, r22
     bf4:	70 93 76 00 	sts	0x0076, r23
     bf8:	80 93 77 00 	sts	0x0077, r24
     bfc:	90 93 78 00 	sts	0x0078, r25



	

}
     c00:	08 95       	ret

00000c02 <main>:
//Variable de Test à suprimmer
uint8_t test1=0;
volatile uint16_t test;

int main(void)
{
     c02:	7f 92       	push	r7
     c04:	8f 92       	push	r8
     c06:	9f 92       	push	r9
     c08:	af 92       	push	r10
     c0a:	bf 92       	push	r11
     c0c:	cf 92       	push	r12
     c0e:	df 92       	push	r13
     c10:	ef 92       	push	r14
     c12:	ff 92       	push	r15
     c14:	0f 93       	push	r16
     c16:	1f 93       	push	r17
     c18:	cf 93       	push	r28
     c1a:	df 93       	push	r29
	sei();   
     c1c:	78 94       	sei
	DDRB=0xFF;
     c1e:	8f ef       	ldi	r24, 0xFF	; 255
     c20:	87 bb       	out	0x17, r24	; 23
	PORTB=0x00;
     c22:	18 ba       	out	0x18, r1	; 24
	USART_Init();
     c24:	0e 94 06 07 	call	0xe0c	; 0xe0c <USART_Init>
	
	ADC_Init();
     c28:	0e 94 49 00 	call	0x92	; 0x92 <ADC_Init>
	PWM_Init();
     c2c:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <PWM_Init>
	PWM_calibrer();
     c30:	0e 94 a9 04 	call	0x952	; 0x952 <PWM_calibrer>
	flag5ms=0;
     c34:	10 92 a7 01 	sts	0x01A7, r1


	PORTD=0b01100100;
     c38:	84 e6       	ldi	r24, 0x64	; 100
     c3a:	82 bb       	out	0x12, r24	; 18
		//Reception de la commande
		
		if (etat == 0)
		{

			etat = 1;
     c3c:	77 24       	eor	r7, r7
     c3e:	73 94       	inc	r7
			sprintf(debugChaine, "%d  %d", (int)(vitesseCommande*1000),(int)(angleCommande*1000));
			debug=1;
			UCSRB|=(1<<UDRIE);
			*/

			CalculPWM(vitesseCommande, angleCommande, vitesseMoteurCorr[GAUCHE], vitesseMoteurCorr[DROIT], &dutyCycleG, &dutyCycleD);
     c40:	c2 ec       	ldi	r28, 0xC2	; 194
     c42:	d1 e0       	ldi	r29, 0x01	; 1
	while(1)
    {
	
		//Reception de la commande
		
		if (etat == 0)
     c44:	80 91 60 00 	lds	r24, 0x0060
     c48:	88 23       	and	r24, r24
     c4a:	a1 f5       	brne	.+104    	; 0xcb4 <main+0xb2>
		{

			etat = 1;
     c4c:	70 92 60 00 	sts	0x0060, r7
			vitesseCommande = (vitesseCommande - (float)100)*0.01;
     c50:	60 91 ce 01 	lds	r22, 0x01CE
     c54:	70 91 cf 01 	lds	r23, 0x01CF
     c58:	80 91 d0 01 	lds	r24, 0x01D0
     c5c:	90 91 d1 01 	lds	r25, 0x01D1
     c60:	20 e0       	ldi	r18, 0x00	; 0
     c62:	30 e0       	ldi	r19, 0x00	; 0
     c64:	48 ec       	ldi	r20, 0xC8	; 200
     c66:	52 e4       	ldi	r21, 0x42	; 66
     c68:	0e 94 1c 09 	call	0x1238	; 0x1238 <__subsf3>
     c6c:	2a e0       	ldi	r18, 0x0A	; 10
     c6e:	37 ed       	ldi	r19, 0xD7	; 215
     c70:	43 e2       	ldi	r20, 0x23	; 35
     c72:	5c e3       	ldi	r21, 0x3C	; 60
     c74:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     c78:	60 93 ce 01 	sts	0x01CE, r22
     c7c:	70 93 cf 01 	sts	0x01CF, r23
     c80:	80 93 d0 01 	sts	0x01D0, r24
     c84:	90 93 d1 01 	sts	0x01D1, r25
			angleCommande *= CST_ROT;
     c88:	60 91 d2 01 	lds	r22, 0x01D2
     c8c:	70 91 d3 01 	lds	r23, 0x01D3
     c90:	80 91 d4 01 	lds	r24, 0x01D4
     c94:	90 91 d5 01 	lds	r25, 0x01D5
     c98:	25 e3       	ldi	r18, 0x35	; 53
     c9a:	3a ef       	ldi	r19, 0xFA	; 250
     c9c:	4e e0       	ldi	r20, 0x0E	; 14
     c9e:	5d e3       	ldi	r21, 0x3D	; 61
     ca0:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     ca4:	60 93 d2 01 	sts	0x01D2, r22
     ca8:	70 93 d3 01 	sts	0x01D3, r23
     cac:	80 93 d4 01 	sts	0x01D4, r24
     cb0:	90 93 d5 01 	sts	0x01D5, r25
		}

	
		if (flag5ms) //Toutes les 5ms on déclanche le calcul du PWM
     cb4:	80 91 a7 01 	lds	r24, 0x01A7
     cb8:	88 23       	and	r24, r24
     cba:	21 f2       	breq	.-120    	; 0xc44 <main+0x42>
		{

			flag5ms = 0;
     cbc:	10 92 a7 01 	sts	0x01A7, r1
			
			// On calcul la moyenne de la vitesse non corrigé des 5ms prec
			moyenne_Moteur(vitesseMoteur); //Attention vitesse moteur est encore une valeure entre 0 et 1023					
     cc0:	86 eb       	ldi	r24, 0xB6	; 182
     cc2:	91 e0       	ldi	r25, 0x01	; 1
     cc4:	0e 94 a9 00 	call	0x152	; 0x152 <moyenne_Moteur>

				//Moteur Droit
			if (vitesseMoteur[DROIT] > 0.0)//Si le moteur tourne en marche avant
     cc8:	e0 90 ba 01 	lds	r14, 0x01BA
     ccc:	f0 90 bb 01 	lds	r15, 0x01BB
     cd0:	00 91 bc 01 	lds	r16, 0x01BC
     cd4:	10 91 bd 01 	lds	r17, 0x01BD
     cd8:	c8 01       	movw	r24, r16
     cda:	b7 01       	movw	r22, r14
     cdc:	20 e0       	ldi	r18, 0x00	; 0
     cde:	30 e0       	ldi	r19, 0x00	; 0
     ce0:	40 e0       	ldi	r20, 0x00	; 0
     ce2:	50 e0       	ldi	r21, 0x00	; 0
     ce4:	0e 94 20 0b 	call	0x1640	; 0x1640 <__gtsf2>
     ce8:	18 16       	cp	r1, r24
     cea:	5c f4       	brge	.+22     	; 0xd02 <main+0x100>
			{
				vitesseMoteurCorr[DROIT]=vitesseMoteur[DROIT]*aPlus[DROIT];
     cec:	c8 01       	movw	r24, r16
     cee:	b7 01       	movw	r22, r14
     cf0:	20 91 6d 00 	lds	r18, 0x006D
     cf4:	30 91 6e 00 	lds	r19, 0x006E
     cf8:	40 91 6f 00 	lds	r20, 0x006F
     cfc:	50 91 70 00 	lds	r21, 0x0070
     d00:	0a c0       	rjmp	.+20     	; 0xd16 <main+0x114>
			}
			else
			{
				vitesseMoteurCorr[DROIT]=vitesseMoteur[DROIT]*aMoins[DROIT];
     d02:	c8 01       	movw	r24, r16
     d04:	b7 01       	movw	r22, r14
     d06:	20 91 75 00 	lds	r18, 0x0075
     d0a:	30 91 76 00 	lds	r19, 0x0076
     d0e:	40 91 77 00 	lds	r20, 0x0077
     d12:	50 91 78 00 	lds	r21, 0x0078
     d16:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     d1a:	60 93 b2 01 	sts	0x01B2, r22
     d1e:	70 93 b3 01 	sts	0x01B3, r23
     d22:	80 93 b4 01 	sts	0x01B4, r24
     d26:	90 93 b5 01 	sts	0x01B5, r25
			}
			
			
			//Moteur gauche
			if (vitesseMoteur[GAUCHE] > 0.0)//Si le moteur tourne en marche avant
     d2a:	e0 90 b6 01 	lds	r14, 0x01B6
     d2e:	f0 90 b7 01 	lds	r15, 0x01B7
     d32:	00 91 b8 01 	lds	r16, 0x01B8
     d36:	10 91 b9 01 	lds	r17, 0x01B9
     d3a:	c8 01       	movw	r24, r16
     d3c:	b7 01       	movw	r22, r14
     d3e:	20 e0       	ldi	r18, 0x00	; 0
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	40 e0       	ldi	r20, 0x00	; 0
     d44:	50 e0       	ldi	r21, 0x00	; 0
     d46:	0e 94 20 0b 	call	0x1640	; 0x1640 <__gtsf2>
     d4a:	18 16       	cp	r1, r24
     d4c:	5c f4       	brge	.+22     	; 0xd64 <main+0x162>
			{
				vitesseMoteurCorr[GAUCHE]=vitesseMoteur[GAUCHE]*aPlus[GAUCHE];		
     d4e:	c8 01       	movw	r24, r16
     d50:	b7 01       	movw	r22, r14
     d52:	20 91 69 00 	lds	r18, 0x0069
     d56:	30 91 6a 00 	lds	r19, 0x006A
     d5a:	40 91 6b 00 	lds	r20, 0x006B
     d5e:	50 91 6c 00 	lds	r21, 0x006C
     d62:	0a c0       	rjmp	.+20     	; 0xd78 <main+0x176>
			}
			else
			{
				vitesseMoteurCorr[GAUCHE]=vitesseMoteur[GAUCHE]*aMoins[GAUCHE];
     d64:	c8 01       	movw	r24, r16
     d66:	b7 01       	movw	r22, r14
     d68:	20 91 71 00 	lds	r18, 0x0071
     d6c:	30 91 72 00 	lds	r19, 0x0072
     d70:	40 91 73 00 	lds	r20, 0x0073
     d74:	50 91 74 00 	lds	r21, 0x0074
     d78:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <__mulsf3>
     d7c:	60 93 ae 01 	sts	0x01AE, r22
     d80:	70 93 af 01 	sts	0x01AF, r23
     d84:	80 93 b0 01 	sts	0x01B0, r24
     d88:	90 93 b1 01 	sts	0x01B1, r25
			sprintf(debugChaine, "%d  %d", (int)(vitesseCommande*1000),(int)(angleCommande*1000));
			debug=1;
			UCSRB|=(1<<UDRIE);
			*/

			CalculPWM(vitesseCommande, angleCommande, vitesseMoteurCorr[GAUCHE], vitesseMoteurCorr[DROIT], &dutyCycleG, &dutyCycleD);
     d8c:	60 91 ce 01 	lds	r22, 0x01CE
     d90:	70 91 cf 01 	lds	r23, 0x01CF
     d94:	80 91 d0 01 	lds	r24, 0x01D0
     d98:	90 91 d1 01 	lds	r25, 0x01D1
     d9c:	20 91 d2 01 	lds	r18, 0x01D2
     da0:	30 91 d3 01 	lds	r19, 0x01D3
     da4:	40 91 d4 01 	lds	r20, 0x01D4
     da8:	50 91 d5 01 	lds	r21, 0x01D5
     dac:	00 d0       	rcall	.+0      	; 0xdae <main+0x1ac>
     dae:	e0 90 ae 01 	lds	r14, 0x01AE
     db2:	f0 90 af 01 	lds	r15, 0x01AF
     db6:	00 91 b0 01 	lds	r16, 0x01B0
     dba:	10 91 b1 01 	lds	r17, 0x01B1
     dbe:	a0 90 b2 01 	lds	r10, 0x01B2
     dc2:	b0 90 b3 01 	lds	r11, 0x01B3
     dc6:	c0 90 b4 01 	lds	r12, 0x01B4
     dca:	d0 90 b5 01 	lds	r13, 0x01B5
     dce:	ed b7       	in	r30, 0x3d	; 61
     dd0:	fe b7       	in	r31, 0x3e	; 62
     dd2:	d2 83       	std	Z+2, r29	; 0x02
     dd4:	c1 83       	std	Z+1, r28	; 0x01
     dd6:	ee eb       	ldi	r30, 0xBE	; 190
     dd8:	8e 2e       	mov	r8, r30
     dda:	e1 e0       	ldi	r30, 0x01	; 1
     ddc:	9e 2e       	mov	r9, r30
     dde:	0e 94 1d 01 	call	0x23a	; 0x23a <CalculPWM>
			
			ordre_Moteur2(dutyCycleG, dutyCycleD);
     de2:	0f 90       	pop	r0
     de4:	0f 90       	pop	r0
     de6:	60 91 be 01 	lds	r22, 0x01BE
     dea:	70 91 bf 01 	lds	r23, 0x01BF
     dee:	80 91 c0 01 	lds	r24, 0x01C0
     df2:	90 91 c1 01 	lds	r25, 0x01C1
     df6:	20 91 c2 01 	lds	r18, 0x01C2
     dfa:	30 91 c3 01 	lds	r19, 0x01C3
     dfe:	40 91 c4 01 	lds	r20, 0x01C4
     e02:	50 91 c5 01 	lds	r21, 0x01C5
     e06:	0e 94 24 04 	call	0x848	; 0x848 <ordre_Moteur2>
     e0a:	1c cf       	rjmp	.-456    	; 0xc44 <main+0x42>

00000e0c <USART_Init>:
extern volatile uint8_t etat;
extern volatile float vitesseCommande;
extern volatile float angleCommande;
void USART_Init()
{
	UBRRH = 0x00;
     e0c:	10 bc       	out	0x20, r1	; 32
	UBRRL = UART_BAUD_SELECT; //(uint8_t)(F_CPU / 153600) - (uint8_t)1;
     e0e:	87 e6       	ldi	r24, 0x67	; 103
     e10:	89 b9       	out	0x09, r24	; 9
	//- vitesse = 9600 Baud - 1 bit d’arrêt - Mode : XXXXXXXXXXX
	//- 8 bits de données - pas de parité
	UCSRA = (0 << RXC) | (0 << TXC)	| (1 << UDRE) | (0 << FE) | (0 << DOR) | (0 << PE) | (0 << U2X)	| (0 << MPCM);
     e12:	80 e2       	ldi	r24, 0x20	; 32
     e14:	8b b9       	out	0x0b, r24	; 11
	UCSRB = (1 << RXCIE) | (0 << TXCIE) | (0 << UDRIE) | (1 << RXEN)  |  (1 << TXEN) | (0 << UCSZ2)  | (0 << RXB8)	| (0 << TXB8);
     e16:	88 e9       	ldi	r24, 0x98	; 152
     e18:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL) | (0 << UMSEL) | (0 << UPM1) | (0 << UPM0) | (0 << USBS) | (1 << UCSZ1) | (1 << UCSZ0) | (0 << UCPOL);	 
     e1a:	86 e8       	ldi	r24, 0x86	; 134
     e1c:	80 bd       	out	0x20, r24	; 32
}
     e1e:	08 95       	ret

00000e20 <__vector_13>:

//Intéruption pour la reception des trames de commandes
ISR(USART_RXC_vect)
{
     e20:	1f 92       	push	r1
     e22:	0f 92       	push	r0
     e24:	0f b6       	in	r0, 0x3f	; 63
     e26:	0f 92       	push	r0
     e28:	11 24       	eor	r1, r1
     e2a:	2f 93       	push	r18
     e2c:	3f 93       	push	r19
     e2e:	4f 93       	push	r20
     e30:	5f 93       	push	r21
     e32:	6f 93       	push	r22
     e34:	7f 93       	push	r23
     e36:	8f 93       	push	r24
     e38:	9f 93       	push	r25
     e3a:	af 93       	push	r26
     e3c:	bf 93       	push	r27
     e3e:	ef 93       	push	r30
     e40:	ff 93       	push	r31
	donneRecue=UDR;
     e42:	8c b1       	in	r24, 0x0c	; 12
     e44:	80 93 ed 01 	sts	0x01ED, r24
	//PORTB^=0x01;
	if (debug==0)
     e48:	80 91 a6 01 	lds	r24, 0x01A6
     e4c:	88 23       	and	r24, r24
     e4e:	19 f4       	brne	.+6      	; 0xe56 <__vector_13+0x36>
	{
		UDR=donneRecue;
     e50:	80 91 ed 01 	lds	r24, 0x01ED
     e54:	8c b9       	out	0x0c, r24	; 12
		//USART_Envoie(donneRecue);
//		UCSRB|=(1<<UDRIE);
	}
		
	switch (etat)
     e56:	80 91 60 00 	lds	r24, 0x0060
     e5a:	82 30       	cpi	r24, 0x02	; 2
     e5c:	51 f0       	breq	.+20     	; 0xe72 <__vector_13+0x52>
     e5e:	83 30       	cpi	r24, 0x03	; 3
     e60:	d9 f0       	breq	.+54     	; 0xe98 <__vector_13+0x78>
     e62:	81 30       	cpi	r24, 0x01	; 1
     e64:	51 f5       	brne	.+84     	; 0xeba <__vector_13+0x9a>
		{

		case 1:
			{
				if (donneRecue == 0xF1) // réception d'une commande normale
     e66:	80 91 ed 01 	lds	r24, 0x01ED
     e6a:	81 3f       	cpi	r24, 0xF1	; 241
     e6c:	11 f4       	brne	.+4      	; 0xe72 <__vector_13+0x52>
				{
					etat = 2;
     e6e:	82 e0       	ldi	r24, 0x02	; 2
     e70:	10 c0       	rjmp	.+32     	; 0xe92 <__vector_13+0x72>
				}
			}

		case 2:
			{
				vitesseCommande = (float)donneRecue;
     e72:	60 91 ed 01 	lds	r22, 0x01ED
     e76:	70 e0       	ldi	r23, 0x00	; 0
     e78:	80 e0       	ldi	r24, 0x00	; 0
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	0e 94 92 0c 	call	0x1924	; 0x1924 <__floatunsisf>
     e80:	60 93 ce 01 	sts	0x01CE, r22
     e84:	70 93 cf 01 	sts	0x01CF, r23
     e88:	80 93 d0 01 	sts	0x01D0, r24
     e8c:	90 93 d1 01 	sts	0x01D1, r25
				etat = 3;
     e90:	83 e0       	ldi	r24, 0x03	; 3
     e92:	80 93 60 00 	sts	0x0060, r24
     e96:	11 c0       	rjmp	.+34     	; 0xeba <__vector_13+0x9a>
			}

		case 3:
			{
			
				angleCommande = (float)donneRecue;
     e98:	60 91 ed 01 	lds	r22, 0x01ED
     e9c:	70 e0       	ldi	r23, 0x00	; 0
     e9e:	80 e0       	ldi	r24, 0x00	; 0
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	0e 94 92 0c 	call	0x1924	; 0x1924 <__floatunsisf>
     ea6:	60 93 d2 01 	sts	0x01D2, r22
     eaa:	70 93 d3 01 	sts	0x01D3, r23
     eae:	80 93 d4 01 	sts	0x01D4, r24
     eb2:	90 93 d5 01 	sts	0x01D5, r25
				etat = 0;
     eb6:	10 92 60 00 	sts	0x0060, r1
				break;
			}
		}
}
     eba:	ff 91       	pop	r31
     ebc:	ef 91       	pop	r30
     ebe:	bf 91       	pop	r27
     ec0:	af 91       	pop	r26
     ec2:	9f 91       	pop	r25
     ec4:	8f 91       	pop	r24
     ec6:	7f 91       	pop	r23
     ec8:	6f 91       	pop	r22
     eca:	5f 91       	pop	r21
     ecc:	4f 91       	pop	r20
     ece:	3f 91       	pop	r19
     ed0:	2f 91       	pop	r18
     ed2:	0f 90       	pop	r0
     ed4:	0f be       	out	0x3f, r0	; 63
     ed6:	0f 90       	pop	r0
     ed8:	1f 90       	pop	r1
     eda:	18 95       	reti

00000edc <__vector_14>:


//Intéruption pour l'envoi des données via l'USART
ISR(USART_UDRE_vect)
{
     edc:	1f 92       	push	r1
     ede:	0f 92       	push	r0
     ee0:	0f b6       	in	r0, 0x3f	; 63
     ee2:	0f 92       	push	r0
     ee4:	11 24       	eor	r1, r1
     ee6:	8f 93       	push	r24
     ee8:	ef 93       	push	r30
     eea:	ff 93       	push	r31
	if (compteur==TAILLE_CHAINE)
     eec:	80 91 79 00 	lds	r24, 0x0079
     ef0:	84 31       	cpi	r24, 0x14	; 20
     ef2:	29 f4       	brne	.+10     	; 0xefe <__vector_14+0x22>
	{
		UDR=DEBUT_DEBUG;
     ef4:	8e ef       	ldi	r24, 0xFE	; 254
     ef6:	8c b9       	out	0x0c, r24	; 12
		compteur=0;
     ef8:	10 92 79 00 	sts	0x0079, r1
     efc:	1d c0       	rjmp	.+58     	; 0xf38 <__vector_14+0x5c>
	}
	else
	{
		if (debugChaine[compteur]!='\0')
     efe:	e0 91 79 00 	lds	r30, 0x0079
     f02:	f0 e0       	ldi	r31, 0x00	; 0
     f04:	e9 52       	subi	r30, 0x29	; 41
     f06:	fe 4f       	sbci	r31, 0xFE	; 254
     f08:	80 81       	ld	r24, Z
     f0a:	88 23       	and	r24, r24
     f0c:	69 f0       	breq	.+26     	; 0xf28 <__vector_14+0x4c>
		{
			UDR=debugChaine[compteur];
     f0e:	e0 91 79 00 	lds	r30, 0x0079
     f12:	f0 e0       	ldi	r31, 0x00	; 0
     f14:	e9 52       	subi	r30, 0x29	; 41
     f16:	fe 4f       	sbci	r31, 0xFE	; 254
     f18:	80 81       	ld	r24, Z
     f1a:	8c b9       	out	0x0c, r24	; 12
			compteur++;
     f1c:	80 91 79 00 	lds	r24, 0x0079
     f20:	8f 5f       	subi	r24, 0xFF	; 255
     f22:	80 93 79 00 	sts	0x0079, r24
     f26:	08 c0       	rjmp	.+16     	; 0xf38 <__vector_14+0x5c>
		}
		else
		{
			UDR=FIN_DEBUG;
     f28:	8f ef       	ldi	r24, 0xFF	; 255
     f2a:	8c b9       	out	0x0c, r24	; 12
			UCSRB &= ~(1 << UDRIE);
     f2c:	55 98       	cbi	0x0a, 5	; 10
			compteur=TAILLE_CHAINE;
     f2e:	84 e1       	ldi	r24, 0x14	; 20
     f30:	80 93 79 00 	sts	0x0079, r24
			debug=0;
     f34:	10 92 a6 01 	sts	0x01A6, r1
		}
	}
	
}
     f38:	ff 91       	pop	r31
     f3a:	ef 91       	pop	r30
     f3c:	8f 91       	pop	r24
     f3e:	0f 90       	pop	r0
     f40:	0f be       	out	0x3f, r0	; 63
     f42:	0f 90       	pop	r0
     f44:	1f 90       	pop	r1
     f46:	18 95       	reti

00000f48 <__fixunssfsi>:
     f48:	ef 92       	push	r14
     f4a:	ff 92       	push	r15
     f4c:	0f 93       	push	r16
     f4e:	1f 93       	push	r17
     f50:	7b 01       	movw	r14, r22
     f52:	8c 01       	movw	r16, r24
     f54:	20 e0       	ldi	r18, 0x00	; 0
     f56:	30 e0       	ldi	r19, 0x00	; 0
     f58:	40 e0       	ldi	r20, 0x00	; 0
     f5a:	5f e4       	ldi	r21, 0x4F	; 79
     f5c:	0e 94 50 0b 	call	0x16a0	; 0x16a0 <__gesf2>
     f60:	88 23       	and	r24, r24
     f62:	8c f0       	brlt	.+34     	; 0xf86 <__fixunssfsi+0x3e>
     f64:	c8 01       	movw	r24, r16
     f66:	b7 01       	movw	r22, r14
     f68:	20 e0       	ldi	r18, 0x00	; 0
     f6a:	30 e0       	ldi	r19, 0x00	; 0
     f6c:	40 e0       	ldi	r20, 0x00	; 0
     f6e:	5f e4       	ldi	r21, 0x4F	; 79
     f70:	0e 94 1c 09 	call	0x1238	; 0x1238 <__subsf3>
     f74:	0e 94 3e 0c 	call	0x187c	; 0x187c <__fixsfsi>
     f78:	9b 01       	movw	r18, r22
     f7a:	ac 01       	movw	r20, r24
     f7c:	20 50       	subi	r18, 0x00	; 0
     f7e:	30 40       	sbci	r19, 0x00	; 0
     f80:	40 40       	sbci	r20, 0x00	; 0
     f82:	50 48       	sbci	r21, 0x80	; 128
     f84:	06 c0       	rjmp	.+12     	; 0xf92 <__fixunssfsi+0x4a>
     f86:	c8 01       	movw	r24, r16
     f88:	b7 01       	movw	r22, r14
     f8a:	0e 94 3e 0c 	call	0x187c	; 0x187c <__fixsfsi>
     f8e:	9b 01       	movw	r18, r22
     f90:	ac 01       	movw	r20, r24
     f92:	b9 01       	movw	r22, r18
     f94:	ca 01       	movw	r24, r20
     f96:	1f 91       	pop	r17
     f98:	0f 91       	pop	r16
     f9a:	ff 90       	pop	r15
     f9c:	ef 90       	pop	r14
     f9e:	08 95       	ret

00000fa0 <_fpadd_parts>:
     fa0:	a0 e0       	ldi	r26, 0x00	; 0
     fa2:	b0 e0       	ldi	r27, 0x00	; 0
     fa4:	e6 ed       	ldi	r30, 0xD6	; 214
     fa6:	f7 e0       	ldi	r31, 0x07	; 7
     fa8:	0c 94 00 0f 	jmp	0x1e00	; 0x1e00 <__prologue_saves__>
     fac:	dc 01       	movw	r26, r24
     fae:	2b 01       	movw	r4, r22
     fb0:	fa 01       	movw	r30, r20
     fb2:	9c 91       	ld	r25, X
     fb4:	92 30       	cpi	r25, 0x02	; 2
     fb6:	08 f4       	brcc	.+2      	; 0xfba <_fpadd_parts+0x1a>
     fb8:	39 c1       	rjmp	.+626    	; 0x122c <_fpadd_parts+0x28c>
     fba:	eb 01       	movw	r28, r22
     fbc:	88 81       	ld	r24, Y
     fbe:	82 30       	cpi	r24, 0x02	; 2
     fc0:	08 f4       	brcc	.+2      	; 0xfc4 <_fpadd_parts+0x24>
     fc2:	33 c1       	rjmp	.+614    	; 0x122a <_fpadd_parts+0x28a>
     fc4:	94 30       	cpi	r25, 0x04	; 4
     fc6:	69 f4       	brne	.+26     	; 0xfe2 <_fpadd_parts+0x42>
     fc8:	84 30       	cpi	r24, 0x04	; 4
     fca:	09 f0       	breq	.+2      	; 0xfce <_fpadd_parts+0x2e>
     fcc:	2f c1       	rjmp	.+606    	; 0x122c <_fpadd_parts+0x28c>
     fce:	11 96       	adiw	r26, 0x01	; 1
     fd0:	9c 91       	ld	r25, X
     fd2:	11 97       	sbiw	r26, 0x01	; 1
     fd4:	89 81       	ldd	r24, Y+1	; 0x01
     fd6:	98 17       	cp	r25, r24
     fd8:	09 f4       	brne	.+2      	; 0xfdc <_fpadd_parts+0x3c>
     fda:	28 c1       	rjmp	.+592    	; 0x122c <_fpadd_parts+0x28c>
     fdc:	aa e7       	ldi	r26, 0x7A	; 122
     fde:	b0 e0       	ldi	r27, 0x00	; 0
     fe0:	25 c1       	rjmp	.+586    	; 0x122c <_fpadd_parts+0x28c>
     fe2:	84 30       	cpi	r24, 0x04	; 4
     fe4:	09 f4       	brne	.+2      	; 0xfe8 <_fpadd_parts+0x48>
     fe6:	21 c1       	rjmp	.+578    	; 0x122a <_fpadd_parts+0x28a>
     fe8:	82 30       	cpi	r24, 0x02	; 2
     fea:	a9 f4       	brne	.+42     	; 0x1016 <_fpadd_parts+0x76>
     fec:	92 30       	cpi	r25, 0x02	; 2
     fee:	09 f0       	breq	.+2      	; 0xff2 <_fpadd_parts+0x52>
     ff0:	1d c1       	rjmp	.+570    	; 0x122c <_fpadd_parts+0x28c>
     ff2:	9a 01       	movw	r18, r20
     ff4:	ad 01       	movw	r20, r26
     ff6:	88 e0       	ldi	r24, 0x08	; 8
     ff8:	ea 01       	movw	r28, r20
     ffa:	09 90       	ld	r0, Y+
     ffc:	ae 01       	movw	r20, r28
     ffe:	e9 01       	movw	r28, r18
    1000:	09 92       	st	Y+, r0
    1002:	9e 01       	movw	r18, r28
    1004:	81 50       	subi	r24, 0x01	; 1
    1006:	c1 f7       	brne	.-16     	; 0xff8 <_fpadd_parts+0x58>
    1008:	e2 01       	movw	r28, r4
    100a:	89 81       	ldd	r24, Y+1	; 0x01
    100c:	11 96       	adiw	r26, 0x01	; 1
    100e:	9c 91       	ld	r25, X
    1010:	89 23       	and	r24, r25
    1012:	81 83       	std	Z+1, r24	; 0x01
    1014:	08 c1       	rjmp	.+528    	; 0x1226 <_fpadd_parts+0x286>
    1016:	92 30       	cpi	r25, 0x02	; 2
    1018:	09 f4       	brne	.+2      	; 0x101c <_fpadd_parts+0x7c>
    101a:	07 c1       	rjmp	.+526    	; 0x122a <_fpadd_parts+0x28a>
    101c:	12 96       	adiw	r26, 0x02	; 2
    101e:	2d 90       	ld	r2, X+
    1020:	3c 90       	ld	r3, X
    1022:	13 97       	sbiw	r26, 0x03	; 3
    1024:	eb 01       	movw	r28, r22
    1026:	8a 81       	ldd	r24, Y+2	; 0x02
    1028:	9b 81       	ldd	r25, Y+3	; 0x03
    102a:	14 96       	adiw	r26, 0x04	; 4
    102c:	ad 90       	ld	r10, X+
    102e:	bd 90       	ld	r11, X+
    1030:	cd 90       	ld	r12, X+
    1032:	dc 90       	ld	r13, X
    1034:	17 97       	sbiw	r26, 0x07	; 7
    1036:	ec 80       	ldd	r14, Y+4	; 0x04
    1038:	fd 80       	ldd	r15, Y+5	; 0x05
    103a:	0e 81       	ldd	r16, Y+6	; 0x06
    103c:	1f 81       	ldd	r17, Y+7	; 0x07
    103e:	91 01       	movw	r18, r2
    1040:	28 1b       	sub	r18, r24
    1042:	39 0b       	sbc	r19, r25
    1044:	b9 01       	movw	r22, r18
    1046:	37 ff       	sbrs	r19, 7
    1048:	04 c0       	rjmp	.+8      	; 0x1052 <_fpadd_parts+0xb2>
    104a:	66 27       	eor	r22, r22
    104c:	77 27       	eor	r23, r23
    104e:	62 1b       	sub	r22, r18
    1050:	73 0b       	sbc	r23, r19
    1052:	60 32       	cpi	r22, 0x20	; 32
    1054:	71 05       	cpc	r23, r1
    1056:	0c f0       	brlt	.+2      	; 0x105a <_fpadd_parts+0xba>
    1058:	61 c0       	rjmp	.+194    	; 0x111c <_fpadd_parts+0x17c>
    105a:	12 16       	cp	r1, r18
    105c:	13 06       	cpc	r1, r19
    105e:	6c f5       	brge	.+90     	; 0x10ba <_fpadd_parts+0x11a>
    1060:	37 01       	movw	r6, r14
    1062:	48 01       	movw	r8, r16
    1064:	06 2e       	mov	r0, r22
    1066:	04 c0       	rjmp	.+8      	; 0x1070 <_fpadd_parts+0xd0>
    1068:	96 94       	lsr	r9
    106a:	87 94       	ror	r8
    106c:	77 94       	ror	r7
    106e:	67 94       	ror	r6
    1070:	0a 94       	dec	r0
    1072:	d2 f7       	brpl	.-12     	; 0x1068 <_fpadd_parts+0xc8>
    1074:	21 e0       	ldi	r18, 0x01	; 1
    1076:	30 e0       	ldi	r19, 0x00	; 0
    1078:	40 e0       	ldi	r20, 0x00	; 0
    107a:	50 e0       	ldi	r21, 0x00	; 0
    107c:	04 c0       	rjmp	.+8      	; 0x1086 <_fpadd_parts+0xe6>
    107e:	22 0f       	add	r18, r18
    1080:	33 1f       	adc	r19, r19
    1082:	44 1f       	adc	r20, r20
    1084:	55 1f       	adc	r21, r21
    1086:	6a 95       	dec	r22
    1088:	d2 f7       	brpl	.-12     	; 0x107e <_fpadd_parts+0xde>
    108a:	21 50       	subi	r18, 0x01	; 1
    108c:	30 40       	sbci	r19, 0x00	; 0
    108e:	40 40       	sbci	r20, 0x00	; 0
    1090:	50 40       	sbci	r21, 0x00	; 0
    1092:	2e 21       	and	r18, r14
    1094:	3f 21       	and	r19, r15
    1096:	40 23       	and	r20, r16
    1098:	51 23       	and	r21, r17
    109a:	21 15       	cp	r18, r1
    109c:	31 05       	cpc	r19, r1
    109e:	41 05       	cpc	r20, r1
    10a0:	51 05       	cpc	r21, r1
    10a2:	21 f0       	breq	.+8      	; 0x10ac <_fpadd_parts+0x10c>
    10a4:	21 e0       	ldi	r18, 0x01	; 1
    10a6:	30 e0       	ldi	r19, 0x00	; 0
    10a8:	40 e0       	ldi	r20, 0x00	; 0
    10aa:	50 e0       	ldi	r21, 0x00	; 0
    10ac:	79 01       	movw	r14, r18
    10ae:	8a 01       	movw	r16, r20
    10b0:	e6 28       	or	r14, r6
    10b2:	f7 28       	or	r15, r7
    10b4:	08 29       	or	r16, r8
    10b6:	19 29       	or	r17, r9
    10b8:	3c c0       	rjmp	.+120    	; 0x1132 <_fpadd_parts+0x192>
    10ba:	23 2b       	or	r18, r19
    10bc:	d1 f1       	breq	.+116    	; 0x1132 <_fpadd_parts+0x192>
    10be:	26 0e       	add	r2, r22
    10c0:	37 1e       	adc	r3, r23
    10c2:	35 01       	movw	r6, r10
    10c4:	46 01       	movw	r8, r12
    10c6:	06 2e       	mov	r0, r22
    10c8:	04 c0       	rjmp	.+8      	; 0x10d2 <_fpadd_parts+0x132>
    10ca:	96 94       	lsr	r9
    10cc:	87 94       	ror	r8
    10ce:	77 94       	ror	r7
    10d0:	67 94       	ror	r6
    10d2:	0a 94       	dec	r0
    10d4:	d2 f7       	brpl	.-12     	; 0x10ca <_fpadd_parts+0x12a>
    10d6:	21 e0       	ldi	r18, 0x01	; 1
    10d8:	30 e0       	ldi	r19, 0x00	; 0
    10da:	40 e0       	ldi	r20, 0x00	; 0
    10dc:	50 e0       	ldi	r21, 0x00	; 0
    10de:	04 c0       	rjmp	.+8      	; 0x10e8 <_fpadd_parts+0x148>
    10e0:	22 0f       	add	r18, r18
    10e2:	33 1f       	adc	r19, r19
    10e4:	44 1f       	adc	r20, r20
    10e6:	55 1f       	adc	r21, r21
    10e8:	6a 95       	dec	r22
    10ea:	d2 f7       	brpl	.-12     	; 0x10e0 <_fpadd_parts+0x140>
    10ec:	21 50       	subi	r18, 0x01	; 1
    10ee:	30 40       	sbci	r19, 0x00	; 0
    10f0:	40 40       	sbci	r20, 0x00	; 0
    10f2:	50 40       	sbci	r21, 0x00	; 0
    10f4:	2a 21       	and	r18, r10
    10f6:	3b 21       	and	r19, r11
    10f8:	4c 21       	and	r20, r12
    10fa:	5d 21       	and	r21, r13
    10fc:	21 15       	cp	r18, r1
    10fe:	31 05       	cpc	r19, r1
    1100:	41 05       	cpc	r20, r1
    1102:	51 05       	cpc	r21, r1
    1104:	21 f0       	breq	.+8      	; 0x110e <_fpadd_parts+0x16e>
    1106:	21 e0       	ldi	r18, 0x01	; 1
    1108:	30 e0       	ldi	r19, 0x00	; 0
    110a:	40 e0       	ldi	r20, 0x00	; 0
    110c:	50 e0       	ldi	r21, 0x00	; 0
    110e:	59 01       	movw	r10, r18
    1110:	6a 01       	movw	r12, r20
    1112:	a6 28       	or	r10, r6
    1114:	b7 28       	or	r11, r7
    1116:	c8 28       	or	r12, r8
    1118:	d9 28       	or	r13, r9
    111a:	0b c0       	rjmp	.+22     	; 0x1132 <_fpadd_parts+0x192>
    111c:	82 15       	cp	r24, r2
    111e:	93 05       	cpc	r25, r3
    1120:	2c f0       	brlt	.+10     	; 0x112c <_fpadd_parts+0x18c>
    1122:	1c 01       	movw	r2, r24
    1124:	aa 24       	eor	r10, r10
    1126:	bb 24       	eor	r11, r11
    1128:	65 01       	movw	r12, r10
    112a:	03 c0       	rjmp	.+6      	; 0x1132 <_fpadd_parts+0x192>
    112c:	ee 24       	eor	r14, r14
    112e:	ff 24       	eor	r15, r15
    1130:	87 01       	movw	r16, r14
    1132:	11 96       	adiw	r26, 0x01	; 1
    1134:	9c 91       	ld	r25, X
    1136:	d2 01       	movw	r26, r4
    1138:	11 96       	adiw	r26, 0x01	; 1
    113a:	8c 91       	ld	r24, X
    113c:	98 17       	cp	r25, r24
    113e:	09 f4       	brne	.+2      	; 0x1142 <_fpadd_parts+0x1a2>
    1140:	45 c0       	rjmp	.+138    	; 0x11cc <_fpadd_parts+0x22c>
    1142:	99 23       	and	r25, r25
    1144:	39 f0       	breq	.+14     	; 0x1154 <_fpadd_parts+0x1b4>
    1146:	a8 01       	movw	r20, r16
    1148:	97 01       	movw	r18, r14
    114a:	2a 19       	sub	r18, r10
    114c:	3b 09       	sbc	r19, r11
    114e:	4c 09       	sbc	r20, r12
    1150:	5d 09       	sbc	r21, r13
    1152:	06 c0       	rjmp	.+12     	; 0x1160 <_fpadd_parts+0x1c0>
    1154:	a6 01       	movw	r20, r12
    1156:	95 01       	movw	r18, r10
    1158:	2e 19       	sub	r18, r14
    115a:	3f 09       	sbc	r19, r15
    115c:	40 0b       	sbc	r20, r16
    115e:	51 0b       	sbc	r21, r17
    1160:	57 fd       	sbrc	r21, 7
    1162:	08 c0       	rjmp	.+16     	; 0x1174 <_fpadd_parts+0x1d4>
    1164:	11 82       	std	Z+1, r1	; 0x01
    1166:	33 82       	std	Z+3, r3	; 0x03
    1168:	22 82       	std	Z+2, r2	; 0x02
    116a:	24 83       	std	Z+4, r18	; 0x04
    116c:	35 83       	std	Z+5, r19	; 0x05
    116e:	46 83       	std	Z+6, r20	; 0x06
    1170:	57 83       	std	Z+7, r21	; 0x07
    1172:	1d c0       	rjmp	.+58     	; 0x11ae <_fpadd_parts+0x20e>
    1174:	81 e0       	ldi	r24, 0x01	; 1
    1176:	81 83       	std	Z+1, r24	; 0x01
    1178:	33 82       	std	Z+3, r3	; 0x03
    117a:	22 82       	std	Z+2, r2	; 0x02
    117c:	88 27       	eor	r24, r24
    117e:	99 27       	eor	r25, r25
    1180:	dc 01       	movw	r26, r24
    1182:	82 1b       	sub	r24, r18
    1184:	93 0b       	sbc	r25, r19
    1186:	a4 0b       	sbc	r26, r20
    1188:	b5 0b       	sbc	r27, r21
    118a:	84 83       	std	Z+4, r24	; 0x04
    118c:	95 83       	std	Z+5, r25	; 0x05
    118e:	a6 83       	std	Z+6, r26	; 0x06
    1190:	b7 83       	std	Z+7, r27	; 0x07
    1192:	0d c0       	rjmp	.+26     	; 0x11ae <_fpadd_parts+0x20e>
    1194:	22 0f       	add	r18, r18
    1196:	33 1f       	adc	r19, r19
    1198:	44 1f       	adc	r20, r20
    119a:	55 1f       	adc	r21, r21
    119c:	24 83       	std	Z+4, r18	; 0x04
    119e:	35 83       	std	Z+5, r19	; 0x05
    11a0:	46 83       	std	Z+6, r20	; 0x06
    11a2:	57 83       	std	Z+7, r21	; 0x07
    11a4:	82 81       	ldd	r24, Z+2	; 0x02
    11a6:	93 81       	ldd	r25, Z+3	; 0x03
    11a8:	01 97       	sbiw	r24, 0x01	; 1
    11aa:	93 83       	std	Z+3, r25	; 0x03
    11ac:	82 83       	std	Z+2, r24	; 0x02
    11ae:	24 81       	ldd	r18, Z+4	; 0x04
    11b0:	35 81       	ldd	r19, Z+5	; 0x05
    11b2:	46 81       	ldd	r20, Z+6	; 0x06
    11b4:	57 81       	ldd	r21, Z+7	; 0x07
    11b6:	da 01       	movw	r26, r20
    11b8:	c9 01       	movw	r24, r18
    11ba:	01 97       	sbiw	r24, 0x01	; 1
    11bc:	a1 09       	sbc	r26, r1
    11be:	b1 09       	sbc	r27, r1
    11c0:	8f 5f       	subi	r24, 0xFF	; 255
    11c2:	9f 4f       	sbci	r25, 0xFF	; 255
    11c4:	af 4f       	sbci	r26, 0xFF	; 255
    11c6:	bf 43       	sbci	r27, 0x3F	; 63
    11c8:	28 f3       	brcs	.-54     	; 0x1194 <_fpadd_parts+0x1f4>
    11ca:	0b c0       	rjmp	.+22     	; 0x11e2 <_fpadd_parts+0x242>
    11cc:	91 83       	std	Z+1, r25	; 0x01
    11ce:	33 82       	std	Z+3, r3	; 0x03
    11d0:	22 82       	std	Z+2, r2	; 0x02
    11d2:	ea 0c       	add	r14, r10
    11d4:	fb 1c       	adc	r15, r11
    11d6:	0c 1d       	adc	r16, r12
    11d8:	1d 1d       	adc	r17, r13
    11da:	e4 82       	std	Z+4, r14	; 0x04
    11dc:	f5 82       	std	Z+5, r15	; 0x05
    11de:	06 83       	std	Z+6, r16	; 0x06
    11e0:	17 83       	std	Z+7, r17	; 0x07
    11e2:	83 e0       	ldi	r24, 0x03	; 3
    11e4:	80 83       	st	Z, r24
    11e6:	24 81       	ldd	r18, Z+4	; 0x04
    11e8:	35 81       	ldd	r19, Z+5	; 0x05
    11ea:	46 81       	ldd	r20, Z+6	; 0x06
    11ec:	57 81       	ldd	r21, Z+7	; 0x07
    11ee:	57 ff       	sbrs	r21, 7
    11f0:	1a c0       	rjmp	.+52     	; 0x1226 <_fpadd_parts+0x286>
    11f2:	c9 01       	movw	r24, r18
    11f4:	aa 27       	eor	r26, r26
    11f6:	97 fd       	sbrc	r25, 7
    11f8:	a0 95       	com	r26
    11fa:	ba 2f       	mov	r27, r26
    11fc:	81 70       	andi	r24, 0x01	; 1
    11fe:	90 70       	andi	r25, 0x00	; 0
    1200:	a0 70       	andi	r26, 0x00	; 0
    1202:	b0 70       	andi	r27, 0x00	; 0
    1204:	56 95       	lsr	r21
    1206:	47 95       	ror	r20
    1208:	37 95       	ror	r19
    120a:	27 95       	ror	r18
    120c:	82 2b       	or	r24, r18
    120e:	93 2b       	or	r25, r19
    1210:	a4 2b       	or	r26, r20
    1212:	b5 2b       	or	r27, r21
    1214:	84 83       	std	Z+4, r24	; 0x04
    1216:	95 83       	std	Z+5, r25	; 0x05
    1218:	a6 83       	std	Z+6, r26	; 0x06
    121a:	b7 83       	std	Z+7, r27	; 0x07
    121c:	82 81       	ldd	r24, Z+2	; 0x02
    121e:	93 81       	ldd	r25, Z+3	; 0x03
    1220:	01 96       	adiw	r24, 0x01	; 1
    1222:	93 83       	std	Z+3, r25	; 0x03
    1224:	82 83       	std	Z+2, r24	; 0x02
    1226:	df 01       	movw	r26, r30
    1228:	01 c0       	rjmp	.+2      	; 0x122c <_fpadd_parts+0x28c>
    122a:	d2 01       	movw	r26, r4
    122c:	cd 01       	movw	r24, r26
    122e:	cd b7       	in	r28, 0x3d	; 61
    1230:	de b7       	in	r29, 0x3e	; 62
    1232:	e2 e1       	ldi	r30, 0x12	; 18
    1234:	0c 94 1c 0f 	jmp	0x1e38	; 0x1e38 <__epilogue_restores__>

00001238 <__subsf3>:
    1238:	a0 e2       	ldi	r26, 0x20	; 32
    123a:	b0 e0       	ldi	r27, 0x00	; 0
    123c:	e2 e2       	ldi	r30, 0x22	; 34
    123e:	f9 e0       	ldi	r31, 0x09	; 9
    1240:	0c 94 0c 0f 	jmp	0x1e18	; 0x1e18 <__prologue_saves__+0x18>
    1244:	69 83       	std	Y+1, r22	; 0x01
    1246:	7a 83       	std	Y+2, r23	; 0x02
    1248:	8b 83       	std	Y+3, r24	; 0x03
    124a:	9c 83       	std	Y+4, r25	; 0x04
    124c:	2d 83       	std	Y+5, r18	; 0x05
    124e:	3e 83       	std	Y+6, r19	; 0x06
    1250:	4f 83       	std	Y+7, r20	; 0x07
    1252:	58 87       	std	Y+8, r21	; 0x08
    1254:	e9 e0       	ldi	r30, 0x09	; 9
    1256:	ee 2e       	mov	r14, r30
    1258:	f1 2c       	mov	r15, r1
    125a:	ec 0e       	add	r14, r28
    125c:	fd 1e       	adc	r15, r29
    125e:	ce 01       	movw	r24, r28
    1260:	01 96       	adiw	r24, 0x01	; 1
    1262:	b7 01       	movw	r22, r14
    1264:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__unpack_f>
    1268:	8e 01       	movw	r16, r28
    126a:	0f 5e       	subi	r16, 0xEF	; 239
    126c:	1f 4f       	sbci	r17, 0xFF	; 255
    126e:	ce 01       	movw	r24, r28
    1270:	05 96       	adiw	r24, 0x05	; 5
    1272:	b8 01       	movw	r22, r16
    1274:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__unpack_f>
    1278:	8a 89       	ldd	r24, Y+18	; 0x12
    127a:	91 e0       	ldi	r25, 0x01	; 1
    127c:	89 27       	eor	r24, r25
    127e:	8a 8b       	std	Y+18, r24	; 0x12
    1280:	c7 01       	movw	r24, r14
    1282:	b8 01       	movw	r22, r16
    1284:	ae 01       	movw	r20, r28
    1286:	47 5e       	subi	r20, 0xE7	; 231
    1288:	5f 4f       	sbci	r21, 0xFF	; 255
    128a:	0e 94 d0 07 	call	0xfa0	; 0xfa0 <_fpadd_parts>
    128e:	0e 94 5a 0d 	call	0x1ab4	; 0x1ab4 <__pack_f>
    1292:	a0 96       	adiw	r28, 0x20	; 32
    1294:	e6 e0       	ldi	r30, 0x06	; 6
    1296:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <__epilogue_restores__+0x18>

0000129a <__addsf3>:
    129a:	a0 e2       	ldi	r26, 0x20	; 32
    129c:	b0 e0       	ldi	r27, 0x00	; 0
    129e:	e3 e5       	ldi	r30, 0x53	; 83
    12a0:	f9 e0       	ldi	r31, 0x09	; 9
    12a2:	0c 94 0c 0f 	jmp	0x1e18	; 0x1e18 <__prologue_saves__+0x18>
    12a6:	69 83       	std	Y+1, r22	; 0x01
    12a8:	7a 83       	std	Y+2, r23	; 0x02
    12aa:	8b 83       	std	Y+3, r24	; 0x03
    12ac:	9c 83       	std	Y+4, r25	; 0x04
    12ae:	2d 83       	std	Y+5, r18	; 0x05
    12b0:	3e 83       	std	Y+6, r19	; 0x06
    12b2:	4f 83       	std	Y+7, r20	; 0x07
    12b4:	58 87       	std	Y+8, r21	; 0x08
    12b6:	f9 e0       	ldi	r31, 0x09	; 9
    12b8:	ef 2e       	mov	r14, r31
    12ba:	f1 2c       	mov	r15, r1
    12bc:	ec 0e       	add	r14, r28
    12be:	fd 1e       	adc	r15, r29
    12c0:	ce 01       	movw	r24, r28
    12c2:	01 96       	adiw	r24, 0x01	; 1
    12c4:	b7 01       	movw	r22, r14
    12c6:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__unpack_f>
    12ca:	8e 01       	movw	r16, r28
    12cc:	0f 5e       	subi	r16, 0xEF	; 239
    12ce:	1f 4f       	sbci	r17, 0xFF	; 255
    12d0:	ce 01       	movw	r24, r28
    12d2:	05 96       	adiw	r24, 0x05	; 5
    12d4:	b8 01       	movw	r22, r16
    12d6:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__unpack_f>
    12da:	c7 01       	movw	r24, r14
    12dc:	b8 01       	movw	r22, r16
    12de:	ae 01       	movw	r20, r28
    12e0:	47 5e       	subi	r20, 0xE7	; 231
    12e2:	5f 4f       	sbci	r21, 0xFF	; 255
    12e4:	0e 94 d0 07 	call	0xfa0	; 0xfa0 <_fpadd_parts>
    12e8:	0e 94 5a 0d 	call	0x1ab4	; 0x1ab4 <__pack_f>
    12ec:	a0 96       	adiw	r28, 0x20	; 32
    12ee:	e6 e0       	ldi	r30, 0x06	; 6
    12f0:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <__epilogue_restores__+0x18>

000012f4 <__mulsf3>:
    12f4:	a0 e2       	ldi	r26, 0x20	; 32
    12f6:	b0 e0       	ldi	r27, 0x00	; 0
    12f8:	e0 e8       	ldi	r30, 0x80	; 128
    12fa:	f9 e0       	ldi	r31, 0x09	; 9
    12fc:	0c 94 00 0f 	jmp	0x1e00	; 0x1e00 <__prologue_saves__>
    1300:	69 83       	std	Y+1, r22	; 0x01
    1302:	7a 83       	std	Y+2, r23	; 0x02
    1304:	8b 83       	std	Y+3, r24	; 0x03
    1306:	9c 83       	std	Y+4, r25	; 0x04
    1308:	2d 83       	std	Y+5, r18	; 0x05
    130a:	3e 83       	std	Y+6, r19	; 0x06
    130c:	4f 83       	std	Y+7, r20	; 0x07
    130e:	58 87       	std	Y+8, r21	; 0x08
    1310:	ce 01       	movw	r24, r28
    1312:	01 96       	adiw	r24, 0x01	; 1
    1314:	be 01       	movw	r22, r28
    1316:	67 5f       	subi	r22, 0xF7	; 247
    1318:	7f 4f       	sbci	r23, 0xFF	; 255
    131a:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__unpack_f>
    131e:	ce 01       	movw	r24, r28
    1320:	05 96       	adiw	r24, 0x05	; 5
    1322:	be 01       	movw	r22, r28
    1324:	6f 5e       	subi	r22, 0xEF	; 239
    1326:	7f 4f       	sbci	r23, 0xFF	; 255
    1328:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__unpack_f>
    132c:	99 85       	ldd	r25, Y+9	; 0x09
    132e:	92 30       	cpi	r25, 0x02	; 2
    1330:	88 f0       	brcs	.+34     	; 0x1354 <__mulsf3+0x60>
    1332:	89 89       	ldd	r24, Y+17	; 0x11
    1334:	82 30       	cpi	r24, 0x02	; 2
    1336:	c8 f0       	brcs	.+50     	; 0x136a <__mulsf3+0x76>
    1338:	94 30       	cpi	r25, 0x04	; 4
    133a:	19 f4       	brne	.+6      	; 0x1342 <__mulsf3+0x4e>
    133c:	82 30       	cpi	r24, 0x02	; 2
    133e:	51 f4       	brne	.+20     	; 0x1354 <__mulsf3+0x60>
    1340:	04 c0       	rjmp	.+8      	; 0x134a <__mulsf3+0x56>
    1342:	84 30       	cpi	r24, 0x04	; 4
    1344:	29 f4       	brne	.+10     	; 0x1350 <__mulsf3+0x5c>
    1346:	92 30       	cpi	r25, 0x02	; 2
    1348:	81 f4       	brne	.+32     	; 0x136a <__mulsf3+0x76>
    134a:	8a e7       	ldi	r24, 0x7A	; 122
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	c6 c0       	rjmp	.+396    	; 0x14dc <__mulsf3+0x1e8>
    1350:	92 30       	cpi	r25, 0x02	; 2
    1352:	49 f4       	brne	.+18     	; 0x1366 <__mulsf3+0x72>
    1354:	20 e0       	ldi	r18, 0x00	; 0
    1356:	9a 85       	ldd	r25, Y+10	; 0x0a
    1358:	8a 89       	ldd	r24, Y+18	; 0x12
    135a:	98 13       	cpse	r25, r24
    135c:	21 e0       	ldi	r18, 0x01	; 1
    135e:	2a 87       	std	Y+10, r18	; 0x0a
    1360:	ce 01       	movw	r24, r28
    1362:	09 96       	adiw	r24, 0x09	; 9
    1364:	bb c0       	rjmp	.+374    	; 0x14dc <__mulsf3+0x1e8>
    1366:	82 30       	cpi	r24, 0x02	; 2
    1368:	49 f4       	brne	.+18     	; 0x137c <__mulsf3+0x88>
    136a:	20 e0       	ldi	r18, 0x00	; 0
    136c:	9a 85       	ldd	r25, Y+10	; 0x0a
    136e:	8a 89       	ldd	r24, Y+18	; 0x12
    1370:	98 13       	cpse	r25, r24
    1372:	21 e0       	ldi	r18, 0x01	; 1
    1374:	2a 8b       	std	Y+18, r18	; 0x12
    1376:	ce 01       	movw	r24, r28
    1378:	41 96       	adiw	r24, 0x11	; 17
    137a:	b0 c0       	rjmp	.+352    	; 0x14dc <__mulsf3+0x1e8>
    137c:	2d 84       	ldd	r2, Y+13	; 0x0d
    137e:	3e 84       	ldd	r3, Y+14	; 0x0e
    1380:	4f 84       	ldd	r4, Y+15	; 0x0f
    1382:	58 88       	ldd	r5, Y+16	; 0x10
    1384:	6d 88       	ldd	r6, Y+21	; 0x15
    1386:	7e 88       	ldd	r7, Y+22	; 0x16
    1388:	8f 88       	ldd	r8, Y+23	; 0x17
    138a:	98 8c       	ldd	r9, Y+24	; 0x18
    138c:	ee 24       	eor	r14, r14
    138e:	ff 24       	eor	r15, r15
    1390:	87 01       	movw	r16, r14
    1392:	aa 24       	eor	r10, r10
    1394:	bb 24       	eor	r11, r11
    1396:	65 01       	movw	r12, r10
    1398:	40 e0       	ldi	r20, 0x00	; 0
    139a:	50 e0       	ldi	r21, 0x00	; 0
    139c:	60 e0       	ldi	r22, 0x00	; 0
    139e:	70 e0       	ldi	r23, 0x00	; 0
    13a0:	e0 e0       	ldi	r30, 0x00	; 0
    13a2:	f0 e0       	ldi	r31, 0x00	; 0
    13a4:	c1 01       	movw	r24, r2
    13a6:	81 70       	andi	r24, 0x01	; 1
    13a8:	90 70       	andi	r25, 0x00	; 0
    13aa:	89 2b       	or	r24, r25
    13ac:	e9 f0       	breq	.+58     	; 0x13e8 <__mulsf3+0xf4>
    13ae:	e6 0c       	add	r14, r6
    13b0:	f7 1c       	adc	r15, r7
    13b2:	08 1d       	adc	r16, r8
    13b4:	19 1d       	adc	r17, r9
    13b6:	9a 01       	movw	r18, r20
    13b8:	ab 01       	movw	r20, r22
    13ba:	2a 0d       	add	r18, r10
    13bc:	3b 1d       	adc	r19, r11
    13be:	4c 1d       	adc	r20, r12
    13c0:	5d 1d       	adc	r21, r13
    13c2:	80 e0       	ldi	r24, 0x00	; 0
    13c4:	90 e0       	ldi	r25, 0x00	; 0
    13c6:	a0 e0       	ldi	r26, 0x00	; 0
    13c8:	b0 e0       	ldi	r27, 0x00	; 0
    13ca:	e6 14       	cp	r14, r6
    13cc:	f7 04       	cpc	r15, r7
    13ce:	08 05       	cpc	r16, r8
    13d0:	19 05       	cpc	r17, r9
    13d2:	20 f4       	brcc	.+8      	; 0x13dc <__mulsf3+0xe8>
    13d4:	81 e0       	ldi	r24, 0x01	; 1
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	a0 e0       	ldi	r26, 0x00	; 0
    13da:	b0 e0       	ldi	r27, 0x00	; 0
    13dc:	ba 01       	movw	r22, r20
    13de:	a9 01       	movw	r20, r18
    13e0:	48 0f       	add	r20, r24
    13e2:	59 1f       	adc	r21, r25
    13e4:	6a 1f       	adc	r22, r26
    13e6:	7b 1f       	adc	r23, r27
    13e8:	aa 0c       	add	r10, r10
    13ea:	bb 1c       	adc	r11, r11
    13ec:	cc 1c       	adc	r12, r12
    13ee:	dd 1c       	adc	r13, r13
    13f0:	97 fe       	sbrs	r9, 7
    13f2:	08 c0       	rjmp	.+16     	; 0x1404 <__mulsf3+0x110>
    13f4:	81 e0       	ldi	r24, 0x01	; 1
    13f6:	90 e0       	ldi	r25, 0x00	; 0
    13f8:	a0 e0       	ldi	r26, 0x00	; 0
    13fa:	b0 e0       	ldi	r27, 0x00	; 0
    13fc:	a8 2a       	or	r10, r24
    13fe:	b9 2a       	or	r11, r25
    1400:	ca 2a       	or	r12, r26
    1402:	db 2a       	or	r13, r27
    1404:	31 96       	adiw	r30, 0x01	; 1
    1406:	e0 32       	cpi	r30, 0x20	; 32
    1408:	f1 05       	cpc	r31, r1
    140a:	49 f0       	breq	.+18     	; 0x141e <__mulsf3+0x12a>
    140c:	66 0c       	add	r6, r6
    140e:	77 1c       	adc	r7, r7
    1410:	88 1c       	adc	r8, r8
    1412:	99 1c       	adc	r9, r9
    1414:	56 94       	lsr	r5
    1416:	47 94       	ror	r4
    1418:	37 94       	ror	r3
    141a:	27 94       	ror	r2
    141c:	c3 cf       	rjmp	.-122    	; 0x13a4 <__mulsf3+0xb0>
    141e:	fa 85       	ldd	r31, Y+10	; 0x0a
    1420:	ea 89       	ldd	r30, Y+18	; 0x12
    1422:	2b 89       	ldd	r18, Y+19	; 0x13
    1424:	3c 89       	ldd	r19, Y+20	; 0x14
    1426:	8b 85       	ldd	r24, Y+11	; 0x0b
    1428:	9c 85       	ldd	r25, Y+12	; 0x0c
    142a:	28 0f       	add	r18, r24
    142c:	39 1f       	adc	r19, r25
    142e:	2e 5f       	subi	r18, 0xFE	; 254
    1430:	3f 4f       	sbci	r19, 0xFF	; 255
    1432:	17 c0       	rjmp	.+46     	; 0x1462 <__mulsf3+0x16e>
    1434:	ca 01       	movw	r24, r20
    1436:	81 70       	andi	r24, 0x01	; 1
    1438:	90 70       	andi	r25, 0x00	; 0
    143a:	89 2b       	or	r24, r25
    143c:	61 f0       	breq	.+24     	; 0x1456 <__mulsf3+0x162>
    143e:	16 95       	lsr	r17
    1440:	07 95       	ror	r16
    1442:	f7 94       	ror	r15
    1444:	e7 94       	ror	r14
    1446:	80 e0       	ldi	r24, 0x00	; 0
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	a0 e0       	ldi	r26, 0x00	; 0
    144c:	b0 e8       	ldi	r27, 0x80	; 128
    144e:	e8 2a       	or	r14, r24
    1450:	f9 2a       	or	r15, r25
    1452:	0a 2b       	or	r16, r26
    1454:	1b 2b       	or	r17, r27
    1456:	76 95       	lsr	r23
    1458:	67 95       	ror	r22
    145a:	57 95       	ror	r21
    145c:	47 95       	ror	r20
    145e:	2f 5f       	subi	r18, 0xFF	; 255
    1460:	3f 4f       	sbci	r19, 0xFF	; 255
    1462:	77 fd       	sbrc	r23, 7
    1464:	e7 cf       	rjmp	.-50     	; 0x1434 <__mulsf3+0x140>
    1466:	0c c0       	rjmp	.+24     	; 0x1480 <__mulsf3+0x18c>
    1468:	44 0f       	add	r20, r20
    146a:	55 1f       	adc	r21, r21
    146c:	66 1f       	adc	r22, r22
    146e:	77 1f       	adc	r23, r23
    1470:	17 fd       	sbrc	r17, 7
    1472:	41 60       	ori	r20, 0x01	; 1
    1474:	ee 0c       	add	r14, r14
    1476:	ff 1c       	adc	r15, r15
    1478:	00 1f       	adc	r16, r16
    147a:	11 1f       	adc	r17, r17
    147c:	21 50       	subi	r18, 0x01	; 1
    147e:	30 40       	sbci	r19, 0x00	; 0
    1480:	40 30       	cpi	r20, 0x00	; 0
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	59 07       	cpc	r21, r25
    1486:	90 e0       	ldi	r25, 0x00	; 0
    1488:	69 07       	cpc	r22, r25
    148a:	90 e4       	ldi	r25, 0x40	; 64
    148c:	79 07       	cpc	r23, r25
    148e:	60 f3       	brcs	.-40     	; 0x1468 <__mulsf3+0x174>
    1490:	2b 8f       	std	Y+27, r18	; 0x1b
    1492:	3c 8f       	std	Y+28, r19	; 0x1c
    1494:	db 01       	movw	r26, r22
    1496:	ca 01       	movw	r24, r20
    1498:	8f 77       	andi	r24, 0x7F	; 127
    149a:	90 70       	andi	r25, 0x00	; 0
    149c:	a0 70       	andi	r26, 0x00	; 0
    149e:	b0 70       	andi	r27, 0x00	; 0
    14a0:	80 34       	cpi	r24, 0x40	; 64
    14a2:	91 05       	cpc	r25, r1
    14a4:	a1 05       	cpc	r26, r1
    14a6:	b1 05       	cpc	r27, r1
    14a8:	61 f4       	brne	.+24     	; 0x14c2 <__mulsf3+0x1ce>
    14aa:	47 fd       	sbrc	r20, 7
    14ac:	0a c0       	rjmp	.+20     	; 0x14c2 <__mulsf3+0x1ce>
    14ae:	e1 14       	cp	r14, r1
    14b0:	f1 04       	cpc	r15, r1
    14b2:	01 05       	cpc	r16, r1
    14b4:	11 05       	cpc	r17, r1
    14b6:	29 f0       	breq	.+10     	; 0x14c2 <__mulsf3+0x1ce>
    14b8:	40 5c       	subi	r20, 0xC0	; 192
    14ba:	5f 4f       	sbci	r21, 0xFF	; 255
    14bc:	6f 4f       	sbci	r22, 0xFF	; 255
    14be:	7f 4f       	sbci	r23, 0xFF	; 255
    14c0:	40 78       	andi	r20, 0x80	; 128
    14c2:	1a 8e       	std	Y+26, r1	; 0x1a
    14c4:	fe 17       	cp	r31, r30
    14c6:	11 f0       	breq	.+4      	; 0x14cc <__mulsf3+0x1d8>
    14c8:	81 e0       	ldi	r24, 0x01	; 1
    14ca:	8a 8f       	std	Y+26, r24	; 0x1a
    14cc:	4d 8f       	std	Y+29, r20	; 0x1d
    14ce:	5e 8f       	std	Y+30, r21	; 0x1e
    14d0:	6f 8f       	std	Y+31, r22	; 0x1f
    14d2:	78 a3       	std	Y+32, r23	; 0x20
    14d4:	83 e0       	ldi	r24, 0x03	; 3
    14d6:	89 8f       	std	Y+25, r24	; 0x19
    14d8:	ce 01       	movw	r24, r28
    14da:	49 96       	adiw	r24, 0x19	; 25
    14dc:	0e 94 5a 0d 	call	0x1ab4	; 0x1ab4 <__pack_f>
    14e0:	a0 96       	adiw	r28, 0x20	; 32
    14e2:	e2 e1       	ldi	r30, 0x12	; 18
    14e4:	0c 94 1c 0f 	jmp	0x1e38	; 0x1e38 <__epilogue_restores__>

000014e8 <__divsf3>:
    14e8:	a8 e1       	ldi	r26, 0x18	; 24
    14ea:	b0 e0       	ldi	r27, 0x00	; 0
    14ec:	ea e7       	ldi	r30, 0x7A	; 122
    14ee:	fa e0       	ldi	r31, 0x0A	; 10
    14f0:	0c 94 08 0f 	jmp	0x1e10	; 0x1e10 <__prologue_saves__+0x10>
    14f4:	69 83       	std	Y+1, r22	; 0x01
    14f6:	7a 83       	std	Y+2, r23	; 0x02
    14f8:	8b 83       	std	Y+3, r24	; 0x03
    14fa:	9c 83       	std	Y+4, r25	; 0x04
    14fc:	2d 83       	std	Y+5, r18	; 0x05
    14fe:	3e 83       	std	Y+6, r19	; 0x06
    1500:	4f 83       	std	Y+7, r20	; 0x07
    1502:	58 87       	std	Y+8, r21	; 0x08
    1504:	b9 e0       	ldi	r27, 0x09	; 9
    1506:	eb 2e       	mov	r14, r27
    1508:	f1 2c       	mov	r15, r1
    150a:	ec 0e       	add	r14, r28
    150c:	fd 1e       	adc	r15, r29
    150e:	ce 01       	movw	r24, r28
    1510:	01 96       	adiw	r24, 0x01	; 1
    1512:	b7 01       	movw	r22, r14
    1514:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__unpack_f>
    1518:	8e 01       	movw	r16, r28
    151a:	0f 5e       	subi	r16, 0xEF	; 239
    151c:	1f 4f       	sbci	r17, 0xFF	; 255
    151e:	ce 01       	movw	r24, r28
    1520:	05 96       	adiw	r24, 0x05	; 5
    1522:	b8 01       	movw	r22, r16
    1524:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__unpack_f>
    1528:	29 85       	ldd	r18, Y+9	; 0x09
    152a:	22 30       	cpi	r18, 0x02	; 2
    152c:	08 f4       	brcc	.+2      	; 0x1530 <__divsf3+0x48>
    152e:	7e c0       	rjmp	.+252    	; 0x162c <__divsf3+0x144>
    1530:	39 89       	ldd	r19, Y+17	; 0x11
    1532:	32 30       	cpi	r19, 0x02	; 2
    1534:	10 f4       	brcc	.+4      	; 0x153a <__divsf3+0x52>
    1536:	b8 01       	movw	r22, r16
    1538:	7c c0       	rjmp	.+248    	; 0x1632 <__divsf3+0x14a>
    153a:	8a 85       	ldd	r24, Y+10	; 0x0a
    153c:	9a 89       	ldd	r25, Y+18	; 0x12
    153e:	89 27       	eor	r24, r25
    1540:	8a 87       	std	Y+10, r24	; 0x0a
    1542:	24 30       	cpi	r18, 0x04	; 4
    1544:	11 f0       	breq	.+4      	; 0x154a <__divsf3+0x62>
    1546:	22 30       	cpi	r18, 0x02	; 2
    1548:	31 f4       	brne	.+12     	; 0x1556 <__divsf3+0x6e>
    154a:	23 17       	cp	r18, r19
    154c:	09 f0       	breq	.+2      	; 0x1550 <__divsf3+0x68>
    154e:	6e c0       	rjmp	.+220    	; 0x162c <__divsf3+0x144>
    1550:	6a e7       	ldi	r22, 0x7A	; 122
    1552:	70 e0       	ldi	r23, 0x00	; 0
    1554:	6e c0       	rjmp	.+220    	; 0x1632 <__divsf3+0x14a>
    1556:	34 30       	cpi	r19, 0x04	; 4
    1558:	39 f4       	brne	.+14     	; 0x1568 <__divsf3+0x80>
    155a:	1d 86       	std	Y+13, r1	; 0x0d
    155c:	1e 86       	std	Y+14, r1	; 0x0e
    155e:	1f 86       	std	Y+15, r1	; 0x0f
    1560:	18 8a       	std	Y+16, r1	; 0x10
    1562:	1c 86       	std	Y+12, r1	; 0x0c
    1564:	1b 86       	std	Y+11, r1	; 0x0b
    1566:	04 c0       	rjmp	.+8      	; 0x1570 <__divsf3+0x88>
    1568:	32 30       	cpi	r19, 0x02	; 2
    156a:	21 f4       	brne	.+8      	; 0x1574 <__divsf3+0x8c>
    156c:	84 e0       	ldi	r24, 0x04	; 4
    156e:	89 87       	std	Y+9, r24	; 0x09
    1570:	b7 01       	movw	r22, r14
    1572:	5f c0       	rjmp	.+190    	; 0x1632 <__divsf3+0x14a>
    1574:	2b 85       	ldd	r18, Y+11	; 0x0b
    1576:	3c 85       	ldd	r19, Y+12	; 0x0c
    1578:	8b 89       	ldd	r24, Y+19	; 0x13
    157a:	9c 89       	ldd	r25, Y+20	; 0x14
    157c:	28 1b       	sub	r18, r24
    157e:	39 0b       	sbc	r19, r25
    1580:	3c 87       	std	Y+12, r19	; 0x0c
    1582:	2b 87       	std	Y+11, r18	; 0x0b
    1584:	ed 84       	ldd	r14, Y+13	; 0x0d
    1586:	fe 84       	ldd	r15, Y+14	; 0x0e
    1588:	0f 85       	ldd	r16, Y+15	; 0x0f
    158a:	18 89       	ldd	r17, Y+16	; 0x10
    158c:	ad 88       	ldd	r10, Y+21	; 0x15
    158e:	be 88       	ldd	r11, Y+22	; 0x16
    1590:	cf 88       	ldd	r12, Y+23	; 0x17
    1592:	d8 8c       	ldd	r13, Y+24	; 0x18
    1594:	ea 14       	cp	r14, r10
    1596:	fb 04       	cpc	r15, r11
    1598:	0c 05       	cpc	r16, r12
    159a:	1d 05       	cpc	r17, r13
    159c:	40 f4       	brcc	.+16     	; 0x15ae <__divsf3+0xc6>
    159e:	ee 0c       	add	r14, r14
    15a0:	ff 1c       	adc	r15, r15
    15a2:	00 1f       	adc	r16, r16
    15a4:	11 1f       	adc	r17, r17
    15a6:	21 50       	subi	r18, 0x01	; 1
    15a8:	30 40       	sbci	r19, 0x00	; 0
    15aa:	3c 87       	std	Y+12, r19	; 0x0c
    15ac:	2b 87       	std	Y+11, r18	; 0x0b
    15ae:	20 e0       	ldi	r18, 0x00	; 0
    15b0:	30 e0       	ldi	r19, 0x00	; 0
    15b2:	40 e0       	ldi	r20, 0x00	; 0
    15b4:	50 e0       	ldi	r21, 0x00	; 0
    15b6:	80 e0       	ldi	r24, 0x00	; 0
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	a0 e0       	ldi	r26, 0x00	; 0
    15bc:	b0 e4       	ldi	r27, 0x40	; 64
    15be:	60 e0       	ldi	r22, 0x00	; 0
    15c0:	70 e0       	ldi	r23, 0x00	; 0
    15c2:	ea 14       	cp	r14, r10
    15c4:	fb 04       	cpc	r15, r11
    15c6:	0c 05       	cpc	r16, r12
    15c8:	1d 05       	cpc	r17, r13
    15ca:	40 f0       	brcs	.+16     	; 0x15dc <__divsf3+0xf4>
    15cc:	28 2b       	or	r18, r24
    15ce:	39 2b       	or	r19, r25
    15d0:	4a 2b       	or	r20, r26
    15d2:	5b 2b       	or	r21, r27
    15d4:	ea 18       	sub	r14, r10
    15d6:	fb 08       	sbc	r15, r11
    15d8:	0c 09       	sbc	r16, r12
    15da:	1d 09       	sbc	r17, r13
    15dc:	b6 95       	lsr	r27
    15de:	a7 95       	ror	r26
    15e0:	97 95       	ror	r25
    15e2:	87 95       	ror	r24
    15e4:	ee 0c       	add	r14, r14
    15e6:	ff 1c       	adc	r15, r15
    15e8:	00 1f       	adc	r16, r16
    15ea:	11 1f       	adc	r17, r17
    15ec:	6f 5f       	subi	r22, 0xFF	; 255
    15ee:	7f 4f       	sbci	r23, 0xFF	; 255
    15f0:	6f 31       	cpi	r22, 0x1F	; 31
    15f2:	71 05       	cpc	r23, r1
    15f4:	31 f7       	brne	.-52     	; 0x15c2 <__divsf3+0xda>
    15f6:	da 01       	movw	r26, r20
    15f8:	c9 01       	movw	r24, r18
    15fa:	8f 77       	andi	r24, 0x7F	; 127
    15fc:	90 70       	andi	r25, 0x00	; 0
    15fe:	a0 70       	andi	r26, 0x00	; 0
    1600:	b0 70       	andi	r27, 0x00	; 0
    1602:	80 34       	cpi	r24, 0x40	; 64
    1604:	91 05       	cpc	r25, r1
    1606:	a1 05       	cpc	r26, r1
    1608:	b1 05       	cpc	r27, r1
    160a:	61 f4       	brne	.+24     	; 0x1624 <__divsf3+0x13c>
    160c:	27 fd       	sbrc	r18, 7
    160e:	0a c0       	rjmp	.+20     	; 0x1624 <__divsf3+0x13c>
    1610:	e1 14       	cp	r14, r1
    1612:	f1 04       	cpc	r15, r1
    1614:	01 05       	cpc	r16, r1
    1616:	11 05       	cpc	r17, r1
    1618:	29 f0       	breq	.+10     	; 0x1624 <__divsf3+0x13c>
    161a:	20 5c       	subi	r18, 0xC0	; 192
    161c:	3f 4f       	sbci	r19, 0xFF	; 255
    161e:	4f 4f       	sbci	r20, 0xFF	; 255
    1620:	5f 4f       	sbci	r21, 0xFF	; 255
    1622:	20 78       	andi	r18, 0x80	; 128
    1624:	2d 87       	std	Y+13, r18	; 0x0d
    1626:	3e 87       	std	Y+14, r19	; 0x0e
    1628:	4f 87       	std	Y+15, r20	; 0x0f
    162a:	58 8b       	std	Y+16, r21	; 0x10
    162c:	be 01       	movw	r22, r28
    162e:	67 5f       	subi	r22, 0xF7	; 247
    1630:	7f 4f       	sbci	r23, 0xFF	; 255
    1632:	cb 01       	movw	r24, r22
    1634:	0e 94 5a 0d 	call	0x1ab4	; 0x1ab4 <__pack_f>
    1638:	68 96       	adiw	r28, 0x18	; 24
    163a:	ea e0       	ldi	r30, 0x0A	; 10
    163c:	0c 94 24 0f 	jmp	0x1e48	; 0x1e48 <__epilogue_restores__+0x10>

00001640 <__gtsf2>:
    1640:	a8 e1       	ldi	r26, 0x18	; 24
    1642:	b0 e0       	ldi	r27, 0x00	; 0
    1644:	e6 e2       	ldi	r30, 0x26	; 38
    1646:	fb e0       	ldi	r31, 0x0B	; 11
    1648:	0c 94 0c 0f 	jmp	0x1e18	; 0x1e18 <__prologue_saves__+0x18>
    164c:	69 83       	std	Y+1, r22	; 0x01
    164e:	7a 83       	std	Y+2, r23	; 0x02
    1650:	8b 83       	std	Y+3, r24	; 0x03
    1652:	9c 83       	std	Y+4, r25	; 0x04
    1654:	2d 83       	std	Y+5, r18	; 0x05
    1656:	3e 83       	std	Y+6, r19	; 0x06
    1658:	4f 83       	std	Y+7, r20	; 0x07
    165a:	58 87       	std	Y+8, r21	; 0x08
    165c:	89 e0       	ldi	r24, 0x09	; 9
    165e:	e8 2e       	mov	r14, r24
    1660:	f1 2c       	mov	r15, r1
    1662:	ec 0e       	add	r14, r28
    1664:	fd 1e       	adc	r15, r29
    1666:	ce 01       	movw	r24, r28
    1668:	01 96       	adiw	r24, 0x01	; 1
    166a:	b7 01       	movw	r22, r14
    166c:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__unpack_f>
    1670:	8e 01       	movw	r16, r28
    1672:	0f 5e       	subi	r16, 0xEF	; 239
    1674:	1f 4f       	sbci	r17, 0xFF	; 255
    1676:	ce 01       	movw	r24, r28
    1678:	05 96       	adiw	r24, 0x05	; 5
    167a:	b8 01       	movw	r22, r16
    167c:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__unpack_f>
    1680:	89 85       	ldd	r24, Y+9	; 0x09
    1682:	82 30       	cpi	r24, 0x02	; 2
    1684:	40 f0       	brcs	.+16     	; 0x1696 <__gtsf2+0x56>
    1686:	89 89       	ldd	r24, Y+17	; 0x11
    1688:	82 30       	cpi	r24, 0x02	; 2
    168a:	28 f0       	brcs	.+10     	; 0x1696 <__gtsf2+0x56>
    168c:	c7 01       	movw	r24, r14
    168e:	b8 01       	movw	r22, r16
    1690:	0e 94 a7 0e 	call	0x1d4e	; 0x1d4e <__fpcmp_parts_f>
    1694:	01 c0       	rjmp	.+2      	; 0x1698 <__gtsf2+0x58>
    1696:	8f ef       	ldi	r24, 0xFF	; 255
    1698:	68 96       	adiw	r28, 0x18	; 24
    169a:	e6 e0       	ldi	r30, 0x06	; 6
    169c:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <__epilogue_restores__+0x18>

000016a0 <__gesf2>:
    16a0:	a8 e1       	ldi	r26, 0x18	; 24
    16a2:	b0 e0       	ldi	r27, 0x00	; 0
    16a4:	e6 e5       	ldi	r30, 0x56	; 86
    16a6:	fb e0       	ldi	r31, 0x0B	; 11
    16a8:	0c 94 0c 0f 	jmp	0x1e18	; 0x1e18 <__prologue_saves__+0x18>
    16ac:	69 83       	std	Y+1, r22	; 0x01
    16ae:	7a 83       	std	Y+2, r23	; 0x02
    16b0:	8b 83       	std	Y+3, r24	; 0x03
    16b2:	9c 83       	std	Y+4, r25	; 0x04
    16b4:	2d 83       	std	Y+5, r18	; 0x05
    16b6:	3e 83       	std	Y+6, r19	; 0x06
    16b8:	4f 83       	std	Y+7, r20	; 0x07
    16ba:	58 87       	std	Y+8, r21	; 0x08
    16bc:	89 e0       	ldi	r24, 0x09	; 9
    16be:	e8 2e       	mov	r14, r24
    16c0:	f1 2c       	mov	r15, r1
    16c2:	ec 0e       	add	r14, r28
    16c4:	fd 1e       	adc	r15, r29
    16c6:	ce 01       	movw	r24, r28
    16c8:	01 96       	adiw	r24, 0x01	; 1
    16ca:	b7 01       	movw	r22, r14
    16cc:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__unpack_f>
    16d0:	8e 01       	movw	r16, r28
    16d2:	0f 5e       	subi	r16, 0xEF	; 239
    16d4:	1f 4f       	sbci	r17, 0xFF	; 255
    16d6:	ce 01       	movw	r24, r28
    16d8:	05 96       	adiw	r24, 0x05	; 5
    16da:	b8 01       	movw	r22, r16
    16dc:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__unpack_f>
    16e0:	89 85       	ldd	r24, Y+9	; 0x09
    16e2:	82 30       	cpi	r24, 0x02	; 2
    16e4:	40 f0       	brcs	.+16     	; 0x16f6 <__gesf2+0x56>
    16e6:	89 89       	ldd	r24, Y+17	; 0x11
    16e8:	82 30       	cpi	r24, 0x02	; 2
    16ea:	28 f0       	brcs	.+10     	; 0x16f6 <__gesf2+0x56>
    16ec:	c7 01       	movw	r24, r14
    16ee:	b8 01       	movw	r22, r16
    16f0:	0e 94 a7 0e 	call	0x1d4e	; 0x1d4e <__fpcmp_parts_f>
    16f4:	01 c0       	rjmp	.+2      	; 0x16f8 <__gesf2+0x58>
    16f6:	8f ef       	ldi	r24, 0xFF	; 255
    16f8:	68 96       	adiw	r28, 0x18	; 24
    16fa:	e6 e0       	ldi	r30, 0x06	; 6
    16fc:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <__epilogue_restores__+0x18>

00001700 <__ltsf2>:
    1700:	a8 e1       	ldi	r26, 0x18	; 24
    1702:	b0 e0       	ldi	r27, 0x00	; 0
    1704:	e6 e8       	ldi	r30, 0x86	; 134
    1706:	fb e0       	ldi	r31, 0x0B	; 11
    1708:	0c 94 0c 0f 	jmp	0x1e18	; 0x1e18 <__prologue_saves__+0x18>
    170c:	69 83       	std	Y+1, r22	; 0x01
    170e:	7a 83       	std	Y+2, r23	; 0x02
    1710:	8b 83       	std	Y+3, r24	; 0x03
    1712:	9c 83       	std	Y+4, r25	; 0x04
    1714:	2d 83       	std	Y+5, r18	; 0x05
    1716:	3e 83       	std	Y+6, r19	; 0x06
    1718:	4f 83       	std	Y+7, r20	; 0x07
    171a:	58 87       	std	Y+8, r21	; 0x08
    171c:	89 e0       	ldi	r24, 0x09	; 9
    171e:	e8 2e       	mov	r14, r24
    1720:	f1 2c       	mov	r15, r1
    1722:	ec 0e       	add	r14, r28
    1724:	fd 1e       	adc	r15, r29
    1726:	ce 01       	movw	r24, r28
    1728:	01 96       	adiw	r24, 0x01	; 1
    172a:	b7 01       	movw	r22, r14
    172c:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__unpack_f>
    1730:	8e 01       	movw	r16, r28
    1732:	0f 5e       	subi	r16, 0xEF	; 239
    1734:	1f 4f       	sbci	r17, 0xFF	; 255
    1736:	ce 01       	movw	r24, r28
    1738:	05 96       	adiw	r24, 0x05	; 5
    173a:	b8 01       	movw	r22, r16
    173c:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__unpack_f>
    1740:	89 85       	ldd	r24, Y+9	; 0x09
    1742:	82 30       	cpi	r24, 0x02	; 2
    1744:	40 f0       	brcs	.+16     	; 0x1756 <__ltsf2+0x56>
    1746:	89 89       	ldd	r24, Y+17	; 0x11
    1748:	82 30       	cpi	r24, 0x02	; 2
    174a:	28 f0       	brcs	.+10     	; 0x1756 <__ltsf2+0x56>
    174c:	c7 01       	movw	r24, r14
    174e:	b8 01       	movw	r22, r16
    1750:	0e 94 a7 0e 	call	0x1d4e	; 0x1d4e <__fpcmp_parts_f>
    1754:	01 c0       	rjmp	.+2      	; 0x1758 <__ltsf2+0x58>
    1756:	81 e0       	ldi	r24, 0x01	; 1
    1758:	68 96       	adiw	r28, 0x18	; 24
    175a:	e6 e0       	ldi	r30, 0x06	; 6
    175c:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <__epilogue_restores__+0x18>

00001760 <__lesf2>:
    1760:	a8 e1       	ldi	r26, 0x18	; 24
    1762:	b0 e0       	ldi	r27, 0x00	; 0
    1764:	e6 eb       	ldi	r30, 0xB6	; 182
    1766:	fb e0       	ldi	r31, 0x0B	; 11
    1768:	0c 94 0c 0f 	jmp	0x1e18	; 0x1e18 <__prologue_saves__+0x18>
    176c:	69 83       	std	Y+1, r22	; 0x01
    176e:	7a 83       	std	Y+2, r23	; 0x02
    1770:	8b 83       	std	Y+3, r24	; 0x03
    1772:	9c 83       	std	Y+4, r25	; 0x04
    1774:	2d 83       	std	Y+5, r18	; 0x05
    1776:	3e 83       	std	Y+6, r19	; 0x06
    1778:	4f 83       	std	Y+7, r20	; 0x07
    177a:	58 87       	std	Y+8, r21	; 0x08
    177c:	89 e0       	ldi	r24, 0x09	; 9
    177e:	e8 2e       	mov	r14, r24
    1780:	f1 2c       	mov	r15, r1
    1782:	ec 0e       	add	r14, r28
    1784:	fd 1e       	adc	r15, r29
    1786:	ce 01       	movw	r24, r28
    1788:	01 96       	adiw	r24, 0x01	; 1
    178a:	b7 01       	movw	r22, r14
    178c:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__unpack_f>
    1790:	8e 01       	movw	r16, r28
    1792:	0f 5e       	subi	r16, 0xEF	; 239
    1794:	1f 4f       	sbci	r17, 0xFF	; 255
    1796:	ce 01       	movw	r24, r28
    1798:	05 96       	adiw	r24, 0x05	; 5
    179a:	b8 01       	movw	r22, r16
    179c:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__unpack_f>
    17a0:	89 85       	ldd	r24, Y+9	; 0x09
    17a2:	82 30       	cpi	r24, 0x02	; 2
    17a4:	40 f0       	brcs	.+16     	; 0x17b6 <__lesf2+0x56>
    17a6:	89 89       	ldd	r24, Y+17	; 0x11
    17a8:	82 30       	cpi	r24, 0x02	; 2
    17aa:	28 f0       	brcs	.+10     	; 0x17b6 <__lesf2+0x56>
    17ac:	c7 01       	movw	r24, r14
    17ae:	b8 01       	movw	r22, r16
    17b0:	0e 94 a7 0e 	call	0x1d4e	; 0x1d4e <__fpcmp_parts_f>
    17b4:	01 c0       	rjmp	.+2      	; 0x17b8 <__lesf2+0x58>
    17b6:	81 e0       	ldi	r24, 0x01	; 1
    17b8:	68 96       	adiw	r28, 0x18	; 24
    17ba:	e6 e0       	ldi	r30, 0x06	; 6
    17bc:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <__epilogue_restores__+0x18>

000017c0 <__floatsisf>:
    17c0:	a8 e0       	ldi	r26, 0x08	; 8
    17c2:	b0 e0       	ldi	r27, 0x00	; 0
    17c4:	e6 ee       	ldi	r30, 0xE6	; 230
    17c6:	fb e0       	ldi	r31, 0x0B	; 11
    17c8:	0c 94 09 0f 	jmp	0x1e12	; 0x1e12 <__prologue_saves__+0x12>
    17cc:	9b 01       	movw	r18, r22
    17ce:	ac 01       	movw	r20, r24
    17d0:	83 e0       	ldi	r24, 0x03	; 3
    17d2:	89 83       	std	Y+1, r24	; 0x01
    17d4:	da 01       	movw	r26, r20
    17d6:	c9 01       	movw	r24, r18
    17d8:	88 27       	eor	r24, r24
    17da:	b7 fd       	sbrc	r27, 7
    17dc:	83 95       	inc	r24
    17de:	99 27       	eor	r25, r25
    17e0:	aa 27       	eor	r26, r26
    17e2:	bb 27       	eor	r27, r27
    17e4:	b8 2e       	mov	r11, r24
    17e6:	21 15       	cp	r18, r1
    17e8:	31 05       	cpc	r19, r1
    17ea:	41 05       	cpc	r20, r1
    17ec:	51 05       	cpc	r21, r1
    17ee:	19 f4       	brne	.+6      	; 0x17f6 <__floatsisf+0x36>
    17f0:	82 e0       	ldi	r24, 0x02	; 2
    17f2:	89 83       	std	Y+1, r24	; 0x01
    17f4:	3a c0       	rjmp	.+116    	; 0x186a <__floatsisf+0xaa>
    17f6:	88 23       	and	r24, r24
    17f8:	a9 f0       	breq	.+42     	; 0x1824 <__floatsisf+0x64>
    17fa:	20 30       	cpi	r18, 0x00	; 0
    17fc:	80 e0       	ldi	r24, 0x00	; 0
    17fe:	38 07       	cpc	r19, r24
    1800:	80 e0       	ldi	r24, 0x00	; 0
    1802:	48 07       	cpc	r20, r24
    1804:	80 e8       	ldi	r24, 0x80	; 128
    1806:	58 07       	cpc	r21, r24
    1808:	29 f4       	brne	.+10     	; 0x1814 <__floatsisf+0x54>
    180a:	60 e0       	ldi	r22, 0x00	; 0
    180c:	70 e0       	ldi	r23, 0x00	; 0
    180e:	80 e0       	ldi	r24, 0x00	; 0
    1810:	9f ec       	ldi	r25, 0xCF	; 207
    1812:	30 c0       	rjmp	.+96     	; 0x1874 <__floatsisf+0xb4>
    1814:	ee 24       	eor	r14, r14
    1816:	ff 24       	eor	r15, r15
    1818:	87 01       	movw	r16, r14
    181a:	e2 1a       	sub	r14, r18
    181c:	f3 0a       	sbc	r15, r19
    181e:	04 0b       	sbc	r16, r20
    1820:	15 0b       	sbc	r17, r21
    1822:	02 c0       	rjmp	.+4      	; 0x1828 <__floatsisf+0x68>
    1824:	79 01       	movw	r14, r18
    1826:	8a 01       	movw	r16, r20
    1828:	8e e1       	ldi	r24, 0x1E	; 30
    182a:	c8 2e       	mov	r12, r24
    182c:	d1 2c       	mov	r13, r1
    182e:	dc 82       	std	Y+4, r13	; 0x04
    1830:	cb 82       	std	Y+3, r12	; 0x03
    1832:	ed 82       	std	Y+5, r14	; 0x05
    1834:	fe 82       	std	Y+6, r15	; 0x06
    1836:	0f 83       	std	Y+7, r16	; 0x07
    1838:	18 87       	std	Y+8, r17	; 0x08
    183a:	c8 01       	movw	r24, r16
    183c:	b7 01       	movw	r22, r14
    183e:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <__clzsi2>
    1842:	01 97       	sbiw	r24, 0x01	; 1
    1844:	18 16       	cp	r1, r24
    1846:	19 06       	cpc	r1, r25
    1848:	84 f4       	brge	.+32     	; 0x186a <__floatsisf+0xaa>
    184a:	08 2e       	mov	r0, r24
    184c:	04 c0       	rjmp	.+8      	; 0x1856 <__floatsisf+0x96>
    184e:	ee 0c       	add	r14, r14
    1850:	ff 1c       	adc	r15, r15
    1852:	00 1f       	adc	r16, r16
    1854:	11 1f       	adc	r17, r17
    1856:	0a 94       	dec	r0
    1858:	d2 f7       	brpl	.-12     	; 0x184e <__floatsisf+0x8e>
    185a:	ed 82       	std	Y+5, r14	; 0x05
    185c:	fe 82       	std	Y+6, r15	; 0x06
    185e:	0f 83       	std	Y+7, r16	; 0x07
    1860:	18 87       	std	Y+8, r17	; 0x08
    1862:	c8 1a       	sub	r12, r24
    1864:	d9 0a       	sbc	r13, r25
    1866:	dc 82       	std	Y+4, r13	; 0x04
    1868:	cb 82       	std	Y+3, r12	; 0x03
    186a:	ba 82       	std	Y+2, r11	; 0x02
    186c:	ce 01       	movw	r24, r28
    186e:	01 96       	adiw	r24, 0x01	; 1
    1870:	0e 94 5a 0d 	call	0x1ab4	; 0x1ab4 <__pack_f>
    1874:	28 96       	adiw	r28, 0x08	; 8
    1876:	e9 e0       	ldi	r30, 0x09	; 9
    1878:	0c 94 25 0f 	jmp	0x1e4a	; 0x1e4a <__epilogue_restores__+0x12>

0000187c <__fixsfsi>:
    187c:	ac e0       	ldi	r26, 0x0C	; 12
    187e:	b0 e0       	ldi	r27, 0x00	; 0
    1880:	e4 e4       	ldi	r30, 0x44	; 68
    1882:	fc e0       	ldi	r31, 0x0C	; 12
    1884:	0c 94 10 0f 	jmp	0x1e20	; 0x1e20 <__prologue_saves__+0x20>
    1888:	69 83       	std	Y+1, r22	; 0x01
    188a:	7a 83       	std	Y+2, r23	; 0x02
    188c:	8b 83       	std	Y+3, r24	; 0x03
    188e:	9c 83       	std	Y+4, r25	; 0x04
    1890:	ce 01       	movw	r24, r28
    1892:	01 96       	adiw	r24, 0x01	; 1
    1894:	be 01       	movw	r22, r28
    1896:	6b 5f       	subi	r22, 0xFB	; 251
    1898:	7f 4f       	sbci	r23, 0xFF	; 255
    189a:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <__unpack_f>
    189e:	8d 81       	ldd	r24, Y+5	; 0x05
    18a0:	82 30       	cpi	r24, 0x02	; 2
    18a2:	61 f1       	breq	.+88     	; 0x18fc <__fixsfsi+0x80>
    18a4:	82 30       	cpi	r24, 0x02	; 2
    18a6:	50 f1       	brcs	.+84     	; 0x18fc <__fixsfsi+0x80>
    18a8:	84 30       	cpi	r24, 0x04	; 4
    18aa:	21 f4       	brne	.+8      	; 0x18b4 <__fixsfsi+0x38>
    18ac:	8e 81       	ldd	r24, Y+6	; 0x06
    18ae:	88 23       	and	r24, r24
    18b0:	51 f1       	breq	.+84     	; 0x1906 <__fixsfsi+0x8a>
    18b2:	2e c0       	rjmp	.+92     	; 0x1910 <__fixsfsi+0x94>
    18b4:	2f 81       	ldd	r18, Y+7	; 0x07
    18b6:	38 85       	ldd	r19, Y+8	; 0x08
    18b8:	37 fd       	sbrc	r19, 7
    18ba:	20 c0       	rjmp	.+64     	; 0x18fc <__fixsfsi+0x80>
    18bc:	6e 81       	ldd	r22, Y+6	; 0x06
    18be:	2f 31       	cpi	r18, 0x1F	; 31
    18c0:	31 05       	cpc	r19, r1
    18c2:	1c f0       	brlt	.+6      	; 0x18ca <__fixsfsi+0x4e>
    18c4:	66 23       	and	r22, r22
    18c6:	f9 f0       	breq	.+62     	; 0x1906 <__fixsfsi+0x8a>
    18c8:	23 c0       	rjmp	.+70     	; 0x1910 <__fixsfsi+0x94>
    18ca:	8e e1       	ldi	r24, 0x1E	; 30
    18cc:	90 e0       	ldi	r25, 0x00	; 0
    18ce:	82 1b       	sub	r24, r18
    18d0:	93 0b       	sbc	r25, r19
    18d2:	29 85       	ldd	r18, Y+9	; 0x09
    18d4:	3a 85       	ldd	r19, Y+10	; 0x0a
    18d6:	4b 85       	ldd	r20, Y+11	; 0x0b
    18d8:	5c 85       	ldd	r21, Y+12	; 0x0c
    18da:	04 c0       	rjmp	.+8      	; 0x18e4 <__fixsfsi+0x68>
    18dc:	56 95       	lsr	r21
    18de:	47 95       	ror	r20
    18e0:	37 95       	ror	r19
    18e2:	27 95       	ror	r18
    18e4:	8a 95       	dec	r24
    18e6:	d2 f7       	brpl	.-12     	; 0x18dc <__fixsfsi+0x60>
    18e8:	66 23       	and	r22, r22
    18ea:	b1 f0       	breq	.+44     	; 0x1918 <__fixsfsi+0x9c>
    18ec:	50 95       	com	r21
    18ee:	40 95       	com	r20
    18f0:	30 95       	com	r19
    18f2:	21 95       	neg	r18
    18f4:	3f 4f       	sbci	r19, 0xFF	; 255
    18f6:	4f 4f       	sbci	r20, 0xFF	; 255
    18f8:	5f 4f       	sbci	r21, 0xFF	; 255
    18fa:	0e c0       	rjmp	.+28     	; 0x1918 <__fixsfsi+0x9c>
    18fc:	20 e0       	ldi	r18, 0x00	; 0
    18fe:	30 e0       	ldi	r19, 0x00	; 0
    1900:	40 e0       	ldi	r20, 0x00	; 0
    1902:	50 e0       	ldi	r21, 0x00	; 0
    1904:	09 c0       	rjmp	.+18     	; 0x1918 <__fixsfsi+0x9c>
    1906:	2f ef       	ldi	r18, 0xFF	; 255
    1908:	3f ef       	ldi	r19, 0xFF	; 255
    190a:	4f ef       	ldi	r20, 0xFF	; 255
    190c:	5f e7       	ldi	r21, 0x7F	; 127
    190e:	04 c0       	rjmp	.+8      	; 0x1918 <__fixsfsi+0x9c>
    1910:	20 e0       	ldi	r18, 0x00	; 0
    1912:	30 e0       	ldi	r19, 0x00	; 0
    1914:	40 e0       	ldi	r20, 0x00	; 0
    1916:	50 e8       	ldi	r21, 0x80	; 128
    1918:	b9 01       	movw	r22, r18
    191a:	ca 01       	movw	r24, r20
    191c:	2c 96       	adiw	r28, 0x0c	; 12
    191e:	e2 e0       	ldi	r30, 0x02	; 2
    1920:	0c 94 2c 0f 	jmp	0x1e58	; 0x1e58 <__epilogue_restores__+0x20>

00001924 <__floatunsisf>:
    1924:	a8 e0       	ldi	r26, 0x08	; 8
    1926:	b0 e0       	ldi	r27, 0x00	; 0
    1928:	e8 e9       	ldi	r30, 0x98	; 152
    192a:	fc e0       	ldi	r31, 0x0C	; 12
    192c:	0c 94 08 0f 	jmp	0x1e10	; 0x1e10 <__prologue_saves__+0x10>
    1930:	7b 01       	movw	r14, r22
    1932:	8c 01       	movw	r16, r24
    1934:	61 15       	cp	r22, r1
    1936:	71 05       	cpc	r23, r1
    1938:	81 05       	cpc	r24, r1
    193a:	91 05       	cpc	r25, r1
    193c:	19 f4       	brne	.+6      	; 0x1944 <__floatunsisf+0x20>
    193e:	82 e0       	ldi	r24, 0x02	; 2
    1940:	89 83       	std	Y+1, r24	; 0x01
    1942:	60 c0       	rjmp	.+192    	; 0x1a04 <__floatunsisf+0xe0>
    1944:	83 e0       	ldi	r24, 0x03	; 3
    1946:	89 83       	std	Y+1, r24	; 0x01
    1948:	8e e1       	ldi	r24, 0x1E	; 30
    194a:	c8 2e       	mov	r12, r24
    194c:	d1 2c       	mov	r13, r1
    194e:	dc 82       	std	Y+4, r13	; 0x04
    1950:	cb 82       	std	Y+3, r12	; 0x03
    1952:	ed 82       	std	Y+5, r14	; 0x05
    1954:	fe 82       	std	Y+6, r15	; 0x06
    1956:	0f 83       	std	Y+7, r16	; 0x07
    1958:	18 87       	std	Y+8, r17	; 0x08
    195a:	c8 01       	movw	r24, r16
    195c:	b7 01       	movw	r22, r14
    195e:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <__clzsi2>
    1962:	fc 01       	movw	r30, r24
    1964:	31 97       	sbiw	r30, 0x01	; 1
    1966:	f7 ff       	sbrs	r31, 7
    1968:	3b c0       	rjmp	.+118    	; 0x19e0 <__floatunsisf+0xbc>
    196a:	22 27       	eor	r18, r18
    196c:	33 27       	eor	r19, r19
    196e:	2e 1b       	sub	r18, r30
    1970:	3f 0b       	sbc	r19, r31
    1972:	57 01       	movw	r10, r14
    1974:	68 01       	movw	r12, r16
    1976:	02 2e       	mov	r0, r18
    1978:	04 c0       	rjmp	.+8      	; 0x1982 <__floatunsisf+0x5e>
    197a:	d6 94       	lsr	r13
    197c:	c7 94       	ror	r12
    197e:	b7 94       	ror	r11
    1980:	a7 94       	ror	r10
    1982:	0a 94       	dec	r0
    1984:	d2 f7       	brpl	.-12     	; 0x197a <__floatunsisf+0x56>
    1986:	40 e0       	ldi	r20, 0x00	; 0
    1988:	50 e0       	ldi	r21, 0x00	; 0
    198a:	60 e0       	ldi	r22, 0x00	; 0
    198c:	70 e0       	ldi	r23, 0x00	; 0
    198e:	81 e0       	ldi	r24, 0x01	; 1
    1990:	90 e0       	ldi	r25, 0x00	; 0
    1992:	a0 e0       	ldi	r26, 0x00	; 0
    1994:	b0 e0       	ldi	r27, 0x00	; 0
    1996:	04 c0       	rjmp	.+8      	; 0x19a0 <__floatunsisf+0x7c>
    1998:	88 0f       	add	r24, r24
    199a:	99 1f       	adc	r25, r25
    199c:	aa 1f       	adc	r26, r26
    199e:	bb 1f       	adc	r27, r27
    19a0:	2a 95       	dec	r18
    19a2:	d2 f7       	brpl	.-12     	; 0x1998 <__floatunsisf+0x74>
    19a4:	01 97       	sbiw	r24, 0x01	; 1
    19a6:	a1 09       	sbc	r26, r1
    19a8:	b1 09       	sbc	r27, r1
    19aa:	8e 21       	and	r24, r14
    19ac:	9f 21       	and	r25, r15
    19ae:	a0 23       	and	r26, r16
    19b0:	b1 23       	and	r27, r17
    19b2:	00 97       	sbiw	r24, 0x00	; 0
    19b4:	a1 05       	cpc	r26, r1
    19b6:	b1 05       	cpc	r27, r1
    19b8:	21 f0       	breq	.+8      	; 0x19c2 <__floatunsisf+0x9e>
    19ba:	41 e0       	ldi	r20, 0x01	; 1
    19bc:	50 e0       	ldi	r21, 0x00	; 0
    19be:	60 e0       	ldi	r22, 0x00	; 0
    19c0:	70 e0       	ldi	r23, 0x00	; 0
    19c2:	4a 29       	or	r20, r10
    19c4:	5b 29       	or	r21, r11
    19c6:	6c 29       	or	r22, r12
    19c8:	7d 29       	or	r23, r13
    19ca:	4d 83       	std	Y+5, r20	; 0x05
    19cc:	5e 83       	std	Y+6, r21	; 0x06
    19ce:	6f 83       	std	Y+7, r22	; 0x07
    19d0:	78 87       	std	Y+8, r23	; 0x08
    19d2:	8e e1       	ldi	r24, 0x1E	; 30
    19d4:	90 e0       	ldi	r25, 0x00	; 0
    19d6:	8e 1b       	sub	r24, r30
    19d8:	9f 0b       	sbc	r25, r31
    19da:	9c 83       	std	Y+4, r25	; 0x04
    19dc:	8b 83       	std	Y+3, r24	; 0x03
    19de:	12 c0       	rjmp	.+36     	; 0x1a04 <__floatunsisf+0xe0>
    19e0:	30 97       	sbiw	r30, 0x00	; 0
    19e2:	81 f0       	breq	.+32     	; 0x1a04 <__floatunsisf+0xe0>
    19e4:	0e 2e       	mov	r0, r30
    19e6:	04 c0       	rjmp	.+8      	; 0x19f0 <__floatunsisf+0xcc>
    19e8:	ee 0c       	add	r14, r14
    19ea:	ff 1c       	adc	r15, r15
    19ec:	00 1f       	adc	r16, r16
    19ee:	11 1f       	adc	r17, r17
    19f0:	0a 94       	dec	r0
    19f2:	d2 f7       	brpl	.-12     	; 0x19e8 <__floatunsisf+0xc4>
    19f4:	ed 82       	std	Y+5, r14	; 0x05
    19f6:	fe 82       	std	Y+6, r15	; 0x06
    19f8:	0f 83       	std	Y+7, r16	; 0x07
    19fa:	18 87       	std	Y+8, r17	; 0x08
    19fc:	ce 1a       	sub	r12, r30
    19fe:	df 0a       	sbc	r13, r31
    1a00:	dc 82       	std	Y+4, r13	; 0x04
    1a02:	cb 82       	std	Y+3, r12	; 0x03
    1a04:	1a 82       	std	Y+2, r1	; 0x02
    1a06:	ce 01       	movw	r24, r28
    1a08:	01 96       	adiw	r24, 0x01	; 1
    1a0a:	0e 94 5a 0d 	call	0x1ab4	; 0x1ab4 <__pack_f>
    1a0e:	28 96       	adiw	r28, 0x08	; 8
    1a10:	ea e0       	ldi	r30, 0x0A	; 10
    1a12:	0c 94 24 0f 	jmp	0x1e48	; 0x1e48 <__epilogue_restores__+0x10>

00001a16 <__clzsi2>:
    1a16:	ef 92       	push	r14
    1a18:	ff 92       	push	r15
    1a1a:	0f 93       	push	r16
    1a1c:	1f 93       	push	r17
    1a1e:	7b 01       	movw	r14, r22
    1a20:	8c 01       	movw	r16, r24
    1a22:	80 e0       	ldi	r24, 0x00	; 0
    1a24:	e8 16       	cp	r14, r24
    1a26:	80 e0       	ldi	r24, 0x00	; 0
    1a28:	f8 06       	cpc	r15, r24
    1a2a:	81 e0       	ldi	r24, 0x01	; 1
    1a2c:	08 07       	cpc	r16, r24
    1a2e:	80 e0       	ldi	r24, 0x00	; 0
    1a30:	18 07       	cpc	r17, r24
    1a32:	88 f4       	brcc	.+34     	; 0x1a56 <__clzsi2+0x40>
    1a34:	8f ef       	ldi	r24, 0xFF	; 255
    1a36:	e8 16       	cp	r14, r24
    1a38:	f1 04       	cpc	r15, r1
    1a3a:	01 05       	cpc	r16, r1
    1a3c:	11 05       	cpc	r17, r1
    1a3e:	31 f0       	breq	.+12     	; 0x1a4c <__clzsi2+0x36>
    1a40:	28 f0       	brcs	.+10     	; 0x1a4c <__clzsi2+0x36>
    1a42:	88 e0       	ldi	r24, 0x08	; 8
    1a44:	90 e0       	ldi	r25, 0x00	; 0
    1a46:	a0 e0       	ldi	r26, 0x00	; 0
    1a48:	b0 e0       	ldi	r27, 0x00	; 0
    1a4a:	17 c0       	rjmp	.+46     	; 0x1a7a <__clzsi2+0x64>
    1a4c:	80 e0       	ldi	r24, 0x00	; 0
    1a4e:	90 e0       	ldi	r25, 0x00	; 0
    1a50:	a0 e0       	ldi	r26, 0x00	; 0
    1a52:	b0 e0       	ldi	r27, 0x00	; 0
    1a54:	12 c0       	rjmp	.+36     	; 0x1a7a <__clzsi2+0x64>
    1a56:	80 e0       	ldi	r24, 0x00	; 0
    1a58:	e8 16       	cp	r14, r24
    1a5a:	80 e0       	ldi	r24, 0x00	; 0
    1a5c:	f8 06       	cpc	r15, r24
    1a5e:	80 e0       	ldi	r24, 0x00	; 0
    1a60:	08 07       	cpc	r16, r24
    1a62:	81 e0       	ldi	r24, 0x01	; 1
    1a64:	18 07       	cpc	r17, r24
    1a66:	28 f0       	brcs	.+10     	; 0x1a72 <__clzsi2+0x5c>
    1a68:	88 e1       	ldi	r24, 0x18	; 24
    1a6a:	90 e0       	ldi	r25, 0x00	; 0
    1a6c:	a0 e0       	ldi	r26, 0x00	; 0
    1a6e:	b0 e0       	ldi	r27, 0x00	; 0
    1a70:	04 c0       	rjmp	.+8      	; 0x1a7a <__clzsi2+0x64>
    1a72:	80 e1       	ldi	r24, 0x10	; 16
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	a0 e0       	ldi	r26, 0x00	; 0
    1a78:	b0 e0       	ldi	r27, 0x00	; 0
    1a7a:	20 e2       	ldi	r18, 0x20	; 32
    1a7c:	30 e0       	ldi	r19, 0x00	; 0
    1a7e:	40 e0       	ldi	r20, 0x00	; 0
    1a80:	50 e0       	ldi	r21, 0x00	; 0
    1a82:	28 1b       	sub	r18, r24
    1a84:	39 0b       	sbc	r19, r25
    1a86:	4a 0b       	sbc	r20, r26
    1a88:	5b 0b       	sbc	r21, r27
    1a8a:	04 c0       	rjmp	.+8      	; 0x1a94 <__clzsi2+0x7e>
    1a8c:	16 95       	lsr	r17
    1a8e:	07 95       	ror	r16
    1a90:	f7 94       	ror	r15
    1a92:	e7 94       	ror	r14
    1a94:	8a 95       	dec	r24
    1a96:	d2 f7       	brpl	.-12     	; 0x1a8c <__clzsi2+0x76>
    1a98:	f7 01       	movw	r30, r14
    1a9a:	ee 57       	subi	r30, 0x7E	; 126
    1a9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a9e:	80 81       	ld	r24, Z
    1aa0:	28 1b       	sub	r18, r24
    1aa2:	31 09       	sbc	r19, r1
    1aa4:	41 09       	sbc	r20, r1
    1aa6:	51 09       	sbc	r21, r1
    1aa8:	c9 01       	movw	r24, r18
    1aaa:	1f 91       	pop	r17
    1aac:	0f 91       	pop	r16
    1aae:	ff 90       	pop	r15
    1ab0:	ef 90       	pop	r14
    1ab2:	08 95       	ret

00001ab4 <__pack_f>:
    1ab4:	df 92       	push	r13
    1ab6:	ef 92       	push	r14
    1ab8:	ff 92       	push	r15
    1aba:	0f 93       	push	r16
    1abc:	1f 93       	push	r17
    1abe:	fc 01       	movw	r30, r24
    1ac0:	e4 80       	ldd	r14, Z+4	; 0x04
    1ac2:	f5 80       	ldd	r15, Z+5	; 0x05
    1ac4:	06 81       	ldd	r16, Z+6	; 0x06
    1ac6:	17 81       	ldd	r17, Z+7	; 0x07
    1ac8:	d1 80       	ldd	r13, Z+1	; 0x01
    1aca:	80 81       	ld	r24, Z
    1acc:	82 30       	cpi	r24, 0x02	; 2
    1ace:	48 f4       	brcc	.+18     	; 0x1ae2 <__pack_f+0x2e>
    1ad0:	80 e0       	ldi	r24, 0x00	; 0
    1ad2:	90 e0       	ldi	r25, 0x00	; 0
    1ad4:	a0 e1       	ldi	r26, 0x10	; 16
    1ad6:	b0 e0       	ldi	r27, 0x00	; 0
    1ad8:	e8 2a       	or	r14, r24
    1ada:	f9 2a       	or	r15, r25
    1adc:	0a 2b       	or	r16, r26
    1ade:	1b 2b       	or	r17, r27
    1ae0:	a5 c0       	rjmp	.+330    	; 0x1c2c <__pack_f+0x178>
    1ae2:	84 30       	cpi	r24, 0x04	; 4
    1ae4:	09 f4       	brne	.+2      	; 0x1ae8 <__pack_f+0x34>
    1ae6:	9f c0       	rjmp	.+318    	; 0x1c26 <__pack_f+0x172>
    1ae8:	82 30       	cpi	r24, 0x02	; 2
    1aea:	21 f4       	brne	.+8      	; 0x1af4 <__pack_f+0x40>
    1aec:	ee 24       	eor	r14, r14
    1aee:	ff 24       	eor	r15, r15
    1af0:	87 01       	movw	r16, r14
    1af2:	05 c0       	rjmp	.+10     	; 0x1afe <__pack_f+0x4a>
    1af4:	e1 14       	cp	r14, r1
    1af6:	f1 04       	cpc	r15, r1
    1af8:	01 05       	cpc	r16, r1
    1afa:	11 05       	cpc	r17, r1
    1afc:	19 f4       	brne	.+6      	; 0x1b04 <__pack_f+0x50>
    1afe:	e0 e0       	ldi	r30, 0x00	; 0
    1b00:	f0 e0       	ldi	r31, 0x00	; 0
    1b02:	96 c0       	rjmp	.+300    	; 0x1c30 <__pack_f+0x17c>
    1b04:	62 81       	ldd	r22, Z+2	; 0x02
    1b06:	73 81       	ldd	r23, Z+3	; 0x03
    1b08:	9f ef       	ldi	r25, 0xFF	; 255
    1b0a:	62 38       	cpi	r22, 0x82	; 130
    1b0c:	79 07       	cpc	r23, r25
    1b0e:	0c f0       	brlt	.+2      	; 0x1b12 <__pack_f+0x5e>
    1b10:	5b c0       	rjmp	.+182    	; 0x1bc8 <__pack_f+0x114>
    1b12:	22 e8       	ldi	r18, 0x82	; 130
    1b14:	3f ef       	ldi	r19, 0xFF	; 255
    1b16:	26 1b       	sub	r18, r22
    1b18:	37 0b       	sbc	r19, r23
    1b1a:	2a 31       	cpi	r18, 0x1A	; 26
    1b1c:	31 05       	cpc	r19, r1
    1b1e:	2c f0       	brlt	.+10     	; 0x1b2a <__pack_f+0x76>
    1b20:	20 e0       	ldi	r18, 0x00	; 0
    1b22:	30 e0       	ldi	r19, 0x00	; 0
    1b24:	40 e0       	ldi	r20, 0x00	; 0
    1b26:	50 e0       	ldi	r21, 0x00	; 0
    1b28:	2a c0       	rjmp	.+84     	; 0x1b7e <__pack_f+0xca>
    1b2a:	b8 01       	movw	r22, r16
    1b2c:	a7 01       	movw	r20, r14
    1b2e:	02 2e       	mov	r0, r18
    1b30:	04 c0       	rjmp	.+8      	; 0x1b3a <__pack_f+0x86>
    1b32:	76 95       	lsr	r23
    1b34:	67 95       	ror	r22
    1b36:	57 95       	ror	r21
    1b38:	47 95       	ror	r20
    1b3a:	0a 94       	dec	r0
    1b3c:	d2 f7       	brpl	.-12     	; 0x1b32 <__pack_f+0x7e>
    1b3e:	81 e0       	ldi	r24, 0x01	; 1
    1b40:	90 e0       	ldi	r25, 0x00	; 0
    1b42:	a0 e0       	ldi	r26, 0x00	; 0
    1b44:	b0 e0       	ldi	r27, 0x00	; 0
    1b46:	04 c0       	rjmp	.+8      	; 0x1b50 <__pack_f+0x9c>
    1b48:	88 0f       	add	r24, r24
    1b4a:	99 1f       	adc	r25, r25
    1b4c:	aa 1f       	adc	r26, r26
    1b4e:	bb 1f       	adc	r27, r27
    1b50:	2a 95       	dec	r18
    1b52:	d2 f7       	brpl	.-12     	; 0x1b48 <__pack_f+0x94>
    1b54:	01 97       	sbiw	r24, 0x01	; 1
    1b56:	a1 09       	sbc	r26, r1
    1b58:	b1 09       	sbc	r27, r1
    1b5a:	8e 21       	and	r24, r14
    1b5c:	9f 21       	and	r25, r15
    1b5e:	a0 23       	and	r26, r16
    1b60:	b1 23       	and	r27, r17
    1b62:	00 97       	sbiw	r24, 0x00	; 0
    1b64:	a1 05       	cpc	r26, r1
    1b66:	b1 05       	cpc	r27, r1
    1b68:	21 f0       	breq	.+8      	; 0x1b72 <__pack_f+0xbe>
    1b6a:	81 e0       	ldi	r24, 0x01	; 1
    1b6c:	90 e0       	ldi	r25, 0x00	; 0
    1b6e:	a0 e0       	ldi	r26, 0x00	; 0
    1b70:	b0 e0       	ldi	r27, 0x00	; 0
    1b72:	9a 01       	movw	r18, r20
    1b74:	ab 01       	movw	r20, r22
    1b76:	28 2b       	or	r18, r24
    1b78:	39 2b       	or	r19, r25
    1b7a:	4a 2b       	or	r20, r26
    1b7c:	5b 2b       	or	r21, r27
    1b7e:	da 01       	movw	r26, r20
    1b80:	c9 01       	movw	r24, r18
    1b82:	8f 77       	andi	r24, 0x7F	; 127
    1b84:	90 70       	andi	r25, 0x00	; 0
    1b86:	a0 70       	andi	r26, 0x00	; 0
    1b88:	b0 70       	andi	r27, 0x00	; 0
    1b8a:	80 34       	cpi	r24, 0x40	; 64
    1b8c:	91 05       	cpc	r25, r1
    1b8e:	a1 05       	cpc	r26, r1
    1b90:	b1 05       	cpc	r27, r1
    1b92:	39 f4       	brne	.+14     	; 0x1ba2 <__pack_f+0xee>
    1b94:	27 ff       	sbrs	r18, 7
    1b96:	09 c0       	rjmp	.+18     	; 0x1baa <__pack_f+0xf6>
    1b98:	20 5c       	subi	r18, 0xC0	; 192
    1b9a:	3f 4f       	sbci	r19, 0xFF	; 255
    1b9c:	4f 4f       	sbci	r20, 0xFF	; 255
    1b9e:	5f 4f       	sbci	r21, 0xFF	; 255
    1ba0:	04 c0       	rjmp	.+8      	; 0x1baa <__pack_f+0xf6>
    1ba2:	21 5c       	subi	r18, 0xC1	; 193
    1ba4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ba6:	4f 4f       	sbci	r20, 0xFF	; 255
    1ba8:	5f 4f       	sbci	r21, 0xFF	; 255
    1baa:	e0 e0       	ldi	r30, 0x00	; 0
    1bac:	f0 e0       	ldi	r31, 0x00	; 0
    1bae:	20 30       	cpi	r18, 0x00	; 0
    1bb0:	a0 e0       	ldi	r26, 0x00	; 0
    1bb2:	3a 07       	cpc	r19, r26
    1bb4:	a0 e0       	ldi	r26, 0x00	; 0
    1bb6:	4a 07       	cpc	r20, r26
    1bb8:	a0 e4       	ldi	r26, 0x40	; 64
    1bba:	5a 07       	cpc	r21, r26
    1bbc:	10 f0       	brcs	.+4      	; 0x1bc2 <__pack_f+0x10e>
    1bbe:	e1 e0       	ldi	r30, 0x01	; 1
    1bc0:	f0 e0       	ldi	r31, 0x00	; 0
    1bc2:	79 01       	movw	r14, r18
    1bc4:	8a 01       	movw	r16, r20
    1bc6:	27 c0       	rjmp	.+78     	; 0x1c16 <__pack_f+0x162>
    1bc8:	60 38       	cpi	r22, 0x80	; 128
    1bca:	71 05       	cpc	r23, r1
    1bcc:	64 f5       	brge	.+88     	; 0x1c26 <__pack_f+0x172>
    1bce:	fb 01       	movw	r30, r22
    1bd0:	e1 58       	subi	r30, 0x81	; 129
    1bd2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd4:	d8 01       	movw	r26, r16
    1bd6:	c7 01       	movw	r24, r14
    1bd8:	8f 77       	andi	r24, 0x7F	; 127
    1bda:	90 70       	andi	r25, 0x00	; 0
    1bdc:	a0 70       	andi	r26, 0x00	; 0
    1bde:	b0 70       	andi	r27, 0x00	; 0
    1be0:	80 34       	cpi	r24, 0x40	; 64
    1be2:	91 05       	cpc	r25, r1
    1be4:	a1 05       	cpc	r26, r1
    1be6:	b1 05       	cpc	r27, r1
    1be8:	39 f4       	brne	.+14     	; 0x1bf8 <__pack_f+0x144>
    1bea:	e7 fe       	sbrs	r14, 7
    1bec:	0d c0       	rjmp	.+26     	; 0x1c08 <__pack_f+0x154>
    1bee:	80 e4       	ldi	r24, 0x40	; 64
    1bf0:	90 e0       	ldi	r25, 0x00	; 0
    1bf2:	a0 e0       	ldi	r26, 0x00	; 0
    1bf4:	b0 e0       	ldi	r27, 0x00	; 0
    1bf6:	04 c0       	rjmp	.+8      	; 0x1c00 <__pack_f+0x14c>
    1bf8:	8f e3       	ldi	r24, 0x3F	; 63
    1bfa:	90 e0       	ldi	r25, 0x00	; 0
    1bfc:	a0 e0       	ldi	r26, 0x00	; 0
    1bfe:	b0 e0       	ldi	r27, 0x00	; 0
    1c00:	e8 0e       	add	r14, r24
    1c02:	f9 1e       	adc	r15, r25
    1c04:	0a 1f       	adc	r16, r26
    1c06:	1b 1f       	adc	r17, r27
    1c08:	17 ff       	sbrs	r17, 7
    1c0a:	05 c0       	rjmp	.+10     	; 0x1c16 <__pack_f+0x162>
    1c0c:	16 95       	lsr	r17
    1c0e:	07 95       	ror	r16
    1c10:	f7 94       	ror	r15
    1c12:	e7 94       	ror	r14
    1c14:	31 96       	adiw	r30, 0x01	; 1
    1c16:	87 e0       	ldi	r24, 0x07	; 7
    1c18:	16 95       	lsr	r17
    1c1a:	07 95       	ror	r16
    1c1c:	f7 94       	ror	r15
    1c1e:	e7 94       	ror	r14
    1c20:	8a 95       	dec	r24
    1c22:	d1 f7       	brne	.-12     	; 0x1c18 <__pack_f+0x164>
    1c24:	05 c0       	rjmp	.+10     	; 0x1c30 <__pack_f+0x17c>
    1c26:	ee 24       	eor	r14, r14
    1c28:	ff 24       	eor	r15, r15
    1c2a:	87 01       	movw	r16, r14
    1c2c:	ef ef       	ldi	r30, 0xFF	; 255
    1c2e:	f0 e0       	ldi	r31, 0x00	; 0
    1c30:	6e 2f       	mov	r22, r30
    1c32:	67 95       	ror	r22
    1c34:	66 27       	eor	r22, r22
    1c36:	67 95       	ror	r22
    1c38:	90 2f       	mov	r25, r16
    1c3a:	9f 77       	andi	r25, 0x7F	; 127
    1c3c:	d7 94       	ror	r13
    1c3e:	dd 24       	eor	r13, r13
    1c40:	d7 94       	ror	r13
    1c42:	8e 2f       	mov	r24, r30
    1c44:	86 95       	lsr	r24
    1c46:	49 2f       	mov	r20, r25
    1c48:	46 2b       	or	r20, r22
    1c4a:	58 2f       	mov	r21, r24
    1c4c:	5d 29       	or	r21, r13
    1c4e:	b7 01       	movw	r22, r14
    1c50:	ca 01       	movw	r24, r20
    1c52:	1f 91       	pop	r17
    1c54:	0f 91       	pop	r16
    1c56:	ff 90       	pop	r15
    1c58:	ef 90       	pop	r14
    1c5a:	df 90       	pop	r13
    1c5c:	08 95       	ret

00001c5e <__unpack_f>:
    1c5e:	fc 01       	movw	r30, r24
    1c60:	db 01       	movw	r26, r22
    1c62:	40 81       	ld	r20, Z
    1c64:	51 81       	ldd	r21, Z+1	; 0x01
    1c66:	22 81       	ldd	r18, Z+2	; 0x02
    1c68:	62 2f       	mov	r22, r18
    1c6a:	6f 77       	andi	r22, 0x7F	; 127
    1c6c:	70 e0       	ldi	r23, 0x00	; 0
    1c6e:	22 1f       	adc	r18, r18
    1c70:	22 27       	eor	r18, r18
    1c72:	22 1f       	adc	r18, r18
    1c74:	93 81       	ldd	r25, Z+3	; 0x03
    1c76:	89 2f       	mov	r24, r25
    1c78:	88 0f       	add	r24, r24
    1c7a:	82 2b       	or	r24, r18
    1c7c:	28 2f       	mov	r18, r24
    1c7e:	30 e0       	ldi	r19, 0x00	; 0
    1c80:	99 1f       	adc	r25, r25
    1c82:	99 27       	eor	r25, r25
    1c84:	99 1f       	adc	r25, r25
    1c86:	11 96       	adiw	r26, 0x01	; 1
    1c88:	9c 93       	st	X, r25
    1c8a:	11 97       	sbiw	r26, 0x01	; 1
    1c8c:	21 15       	cp	r18, r1
    1c8e:	31 05       	cpc	r19, r1
    1c90:	a9 f5       	brne	.+106    	; 0x1cfc <__unpack_f+0x9e>
    1c92:	41 15       	cp	r20, r1
    1c94:	51 05       	cpc	r21, r1
    1c96:	61 05       	cpc	r22, r1
    1c98:	71 05       	cpc	r23, r1
    1c9a:	11 f4       	brne	.+4      	; 0x1ca0 <__unpack_f+0x42>
    1c9c:	82 e0       	ldi	r24, 0x02	; 2
    1c9e:	37 c0       	rjmp	.+110    	; 0x1d0e <__unpack_f+0xb0>
    1ca0:	82 e8       	ldi	r24, 0x82	; 130
    1ca2:	9f ef       	ldi	r25, 0xFF	; 255
    1ca4:	13 96       	adiw	r26, 0x03	; 3
    1ca6:	9c 93       	st	X, r25
    1ca8:	8e 93       	st	-X, r24
    1caa:	12 97       	sbiw	r26, 0x02	; 2
    1cac:	9a 01       	movw	r18, r20
    1cae:	ab 01       	movw	r20, r22
    1cb0:	67 e0       	ldi	r22, 0x07	; 7
    1cb2:	22 0f       	add	r18, r18
    1cb4:	33 1f       	adc	r19, r19
    1cb6:	44 1f       	adc	r20, r20
    1cb8:	55 1f       	adc	r21, r21
    1cba:	6a 95       	dec	r22
    1cbc:	d1 f7       	brne	.-12     	; 0x1cb2 <__unpack_f+0x54>
    1cbe:	83 e0       	ldi	r24, 0x03	; 3
    1cc0:	8c 93       	st	X, r24
    1cc2:	0d c0       	rjmp	.+26     	; 0x1cde <__unpack_f+0x80>
    1cc4:	22 0f       	add	r18, r18
    1cc6:	33 1f       	adc	r19, r19
    1cc8:	44 1f       	adc	r20, r20
    1cca:	55 1f       	adc	r21, r21
    1ccc:	12 96       	adiw	r26, 0x02	; 2
    1cce:	8d 91       	ld	r24, X+
    1cd0:	9c 91       	ld	r25, X
    1cd2:	13 97       	sbiw	r26, 0x03	; 3
    1cd4:	01 97       	sbiw	r24, 0x01	; 1
    1cd6:	13 96       	adiw	r26, 0x03	; 3
    1cd8:	9c 93       	st	X, r25
    1cda:	8e 93       	st	-X, r24
    1cdc:	12 97       	sbiw	r26, 0x02	; 2
    1cde:	20 30       	cpi	r18, 0x00	; 0
    1ce0:	80 e0       	ldi	r24, 0x00	; 0
    1ce2:	38 07       	cpc	r19, r24
    1ce4:	80 e0       	ldi	r24, 0x00	; 0
    1ce6:	48 07       	cpc	r20, r24
    1ce8:	80 e4       	ldi	r24, 0x40	; 64
    1cea:	58 07       	cpc	r21, r24
    1cec:	58 f3       	brcs	.-42     	; 0x1cc4 <__unpack_f+0x66>
    1cee:	14 96       	adiw	r26, 0x04	; 4
    1cf0:	2d 93       	st	X+, r18
    1cf2:	3d 93       	st	X+, r19
    1cf4:	4d 93       	st	X+, r20
    1cf6:	5c 93       	st	X, r21
    1cf8:	17 97       	sbiw	r26, 0x07	; 7
    1cfa:	08 95       	ret
    1cfc:	2f 3f       	cpi	r18, 0xFF	; 255
    1cfe:	31 05       	cpc	r19, r1
    1d00:	79 f4       	brne	.+30     	; 0x1d20 <__unpack_f+0xc2>
    1d02:	41 15       	cp	r20, r1
    1d04:	51 05       	cpc	r21, r1
    1d06:	61 05       	cpc	r22, r1
    1d08:	71 05       	cpc	r23, r1
    1d0a:	19 f4       	brne	.+6      	; 0x1d12 <__unpack_f+0xb4>
    1d0c:	84 e0       	ldi	r24, 0x04	; 4
    1d0e:	8c 93       	st	X, r24
    1d10:	08 95       	ret
    1d12:	64 ff       	sbrs	r22, 4
    1d14:	03 c0       	rjmp	.+6      	; 0x1d1c <__unpack_f+0xbe>
    1d16:	81 e0       	ldi	r24, 0x01	; 1
    1d18:	8c 93       	st	X, r24
    1d1a:	12 c0       	rjmp	.+36     	; 0x1d40 <__unpack_f+0xe2>
    1d1c:	1c 92       	st	X, r1
    1d1e:	10 c0       	rjmp	.+32     	; 0x1d40 <__unpack_f+0xe2>
    1d20:	2f 57       	subi	r18, 0x7F	; 127
    1d22:	30 40       	sbci	r19, 0x00	; 0
    1d24:	13 96       	adiw	r26, 0x03	; 3
    1d26:	3c 93       	st	X, r19
    1d28:	2e 93       	st	-X, r18
    1d2a:	12 97       	sbiw	r26, 0x02	; 2
    1d2c:	83 e0       	ldi	r24, 0x03	; 3
    1d2e:	8c 93       	st	X, r24
    1d30:	87 e0       	ldi	r24, 0x07	; 7
    1d32:	44 0f       	add	r20, r20
    1d34:	55 1f       	adc	r21, r21
    1d36:	66 1f       	adc	r22, r22
    1d38:	77 1f       	adc	r23, r23
    1d3a:	8a 95       	dec	r24
    1d3c:	d1 f7       	brne	.-12     	; 0x1d32 <__unpack_f+0xd4>
    1d3e:	70 64       	ori	r23, 0x40	; 64
    1d40:	14 96       	adiw	r26, 0x04	; 4
    1d42:	4d 93       	st	X+, r20
    1d44:	5d 93       	st	X+, r21
    1d46:	6d 93       	st	X+, r22
    1d48:	7c 93       	st	X, r23
    1d4a:	17 97       	sbiw	r26, 0x07	; 7
    1d4c:	08 95       	ret

00001d4e <__fpcmp_parts_f>:
    1d4e:	1f 93       	push	r17
    1d50:	dc 01       	movw	r26, r24
    1d52:	fb 01       	movw	r30, r22
    1d54:	9c 91       	ld	r25, X
    1d56:	92 30       	cpi	r25, 0x02	; 2
    1d58:	08 f4       	brcc	.+2      	; 0x1d5c <__fpcmp_parts_f+0xe>
    1d5a:	47 c0       	rjmp	.+142    	; 0x1dea <__fpcmp_parts_f+0x9c>
    1d5c:	80 81       	ld	r24, Z
    1d5e:	82 30       	cpi	r24, 0x02	; 2
    1d60:	08 f4       	brcc	.+2      	; 0x1d64 <__fpcmp_parts_f+0x16>
    1d62:	43 c0       	rjmp	.+134    	; 0x1dea <__fpcmp_parts_f+0x9c>
    1d64:	94 30       	cpi	r25, 0x04	; 4
    1d66:	51 f4       	brne	.+20     	; 0x1d7c <__fpcmp_parts_f+0x2e>
    1d68:	11 96       	adiw	r26, 0x01	; 1
    1d6a:	1c 91       	ld	r17, X
    1d6c:	84 30       	cpi	r24, 0x04	; 4
    1d6e:	99 f5       	brne	.+102    	; 0x1dd6 <__fpcmp_parts_f+0x88>
    1d70:	81 81       	ldd	r24, Z+1	; 0x01
    1d72:	68 2f       	mov	r22, r24
    1d74:	70 e0       	ldi	r23, 0x00	; 0
    1d76:	61 1b       	sub	r22, r17
    1d78:	71 09       	sbc	r23, r1
    1d7a:	3f c0       	rjmp	.+126    	; 0x1dfa <__fpcmp_parts_f+0xac>
    1d7c:	84 30       	cpi	r24, 0x04	; 4
    1d7e:	21 f0       	breq	.+8      	; 0x1d88 <__fpcmp_parts_f+0x3a>
    1d80:	92 30       	cpi	r25, 0x02	; 2
    1d82:	31 f4       	brne	.+12     	; 0x1d90 <__fpcmp_parts_f+0x42>
    1d84:	82 30       	cpi	r24, 0x02	; 2
    1d86:	b9 f1       	breq	.+110    	; 0x1df6 <__fpcmp_parts_f+0xa8>
    1d88:	81 81       	ldd	r24, Z+1	; 0x01
    1d8a:	88 23       	and	r24, r24
    1d8c:	89 f1       	breq	.+98     	; 0x1df0 <__fpcmp_parts_f+0xa2>
    1d8e:	2d c0       	rjmp	.+90     	; 0x1dea <__fpcmp_parts_f+0x9c>
    1d90:	11 96       	adiw	r26, 0x01	; 1
    1d92:	1c 91       	ld	r17, X
    1d94:	11 97       	sbiw	r26, 0x01	; 1
    1d96:	82 30       	cpi	r24, 0x02	; 2
    1d98:	f1 f0       	breq	.+60     	; 0x1dd6 <__fpcmp_parts_f+0x88>
    1d9a:	81 81       	ldd	r24, Z+1	; 0x01
    1d9c:	18 17       	cp	r17, r24
    1d9e:	d9 f4       	brne	.+54     	; 0x1dd6 <__fpcmp_parts_f+0x88>
    1da0:	12 96       	adiw	r26, 0x02	; 2
    1da2:	2d 91       	ld	r18, X+
    1da4:	3c 91       	ld	r19, X
    1da6:	13 97       	sbiw	r26, 0x03	; 3
    1da8:	82 81       	ldd	r24, Z+2	; 0x02
    1daa:	93 81       	ldd	r25, Z+3	; 0x03
    1dac:	82 17       	cp	r24, r18
    1dae:	93 07       	cpc	r25, r19
    1db0:	94 f0       	brlt	.+36     	; 0x1dd6 <__fpcmp_parts_f+0x88>
    1db2:	28 17       	cp	r18, r24
    1db4:	39 07       	cpc	r19, r25
    1db6:	bc f0       	brlt	.+46     	; 0x1de6 <__fpcmp_parts_f+0x98>
    1db8:	14 96       	adiw	r26, 0x04	; 4
    1dba:	8d 91       	ld	r24, X+
    1dbc:	9d 91       	ld	r25, X+
    1dbe:	0d 90       	ld	r0, X+
    1dc0:	bc 91       	ld	r27, X
    1dc2:	a0 2d       	mov	r26, r0
    1dc4:	24 81       	ldd	r18, Z+4	; 0x04
    1dc6:	35 81       	ldd	r19, Z+5	; 0x05
    1dc8:	46 81       	ldd	r20, Z+6	; 0x06
    1dca:	57 81       	ldd	r21, Z+7	; 0x07
    1dcc:	28 17       	cp	r18, r24
    1dce:	39 07       	cpc	r19, r25
    1dd0:	4a 07       	cpc	r20, r26
    1dd2:	5b 07       	cpc	r21, r27
    1dd4:	18 f4       	brcc	.+6      	; 0x1ddc <__fpcmp_parts_f+0x8e>
    1dd6:	11 23       	and	r17, r17
    1dd8:	41 f0       	breq	.+16     	; 0x1dea <__fpcmp_parts_f+0x9c>
    1dda:	0a c0       	rjmp	.+20     	; 0x1df0 <__fpcmp_parts_f+0xa2>
    1ddc:	82 17       	cp	r24, r18
    1dde:	93 07       	cpc	r25, r19
    1de0:	a4 07       	cpc	r26, r20
    1de2:	b5 07       	cpc	r27, r21
    1de4:	40 f4       	brcc	.+16     	; 0x1df6 <__fpcmp_parts_f+0xa8>
    1de6:	11 23       	and	r17, r17
    1de8:	19 f0       	breq	.+6      	; 0x1df0 <__fpcmp_parts_f+0xa2>
    1dea:	61 e0       	ldi	r22, 0x01	; 1
    1dec:	70 e0       	ldi	r23, 0x00	; 0
    1dee:	05 c0       	rjmp	.+10     	; 0x1dfa <__fpcmp_parts_f+0xac>
    1df0:	6f ef       	ldi	r22, 0xFF	; 255
    1df2:	7f ef       	ldi	r23, 0xFF	; 255
    1df4:	02 c0       	rjmp	.+4      	; 0x1dfa <__fpcmp_parts_f+0xac>
    1df6:	60 e0       	ldi	r22, 0x00	; 0
    1df8:	70 e0       	ldi	r23, 0x00	; 0
    1dfa:	cb 01       	movw	r24, r22
    1dfc:	1f 91       	pop	r17
    1dfe:	08 95       	ret

00001e00 <__prologue_saves__>:
    1e00:	2f 92       	push	r2
    1e02:	3f 92       	push	r3
    1e04:	4f 92       	push	r4
    1e06:	5f 92       	push	r5
    1e08:	6f 92       	push	r6
    1e0a:	7f 92       	push	r7
    1e0c:	8f 92       	push	r8
    1e0e:	9f 92       	push	r9
    1e10:	af 92       	push	r10
    1e12:	bf 92       	push	r11
    1e14:	cf 92       	push	r12
    1e16:	df 92       	push	r13
    1e18:	ef 92       	push	r14
    1e1a:	ff 92       	push	r15
    1e1c:	0f 93       	push	r16
    1e1e:	1f 93       	push	r17
    1e20:	cf 93       	push	r28
    1e22:	df 93       	push	r29
    1e24:	cd b7       	in	r28, 0x3d	; 61
    1e26:	de b7       	in	r29, 0x3e	; 62
    1e28:	ca 1b       	sub	r28, r26
    1e2a:	db 0b       	sbc	r29, r27
    1e2c:	0f b6       	in	r0, 0x3f	; 63
    1e2e:	f8 94       	cli
    1e30:	de bf       	out	0x3e, r29	; 62
    1e32:	0f be       	out	0x3f, r0	; 63
    1e34:	cd bf       	out	0x3d, r28	; 61
    1e36:	09 94       	ijmp

00001e38 <__epilogue_restores__>:
    1e38:	2a 88       	ldd	r2, Y+18	; 0x12
    1e3a:	39 88       	ldd	r3, Y+17	; 0x11
    1e3c:	48 88       	ldd	r4, Y+16	; 0x10
    1e3e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1e40:	6e 84       	ldd	r6, Y+14	; 0x0e
    1e42:	7d 84       	ldd	r7, Y+13	; 0x0d
    1e44:	8c 84       	ldd	r8, Y+12	; 0x0c
    1e46:	9b 84       	ldd	r9, Y+11	; 0x0b
    1e48:	aa 84       	ldd	r10, Y+10	; 0x0a
    1e4a:	b9 84       	ldd	r11, Y+9	; 0x09
    1e4c:	c8 84       	ldd	r12, Y+8	; 0x08
    1e4e:	df 80       	ldd	r13, Y+7	; 0x07
    1e50:	ee 80       	ldd	r14, Y+6	; 0x06
    1e52:	fd 80       	ldd	r15, Y+5	; 0x05
    1e54:	0c 81       	ldd	r16, Y+4	; 0x04
    1e56:	1b 81       	ldd	r17, Y+3	; 0x03
    1e58:	aa 81       	ldd	r26, Y+2	; 0x02
    1e5a:	b9 81       	ldd	r27, Y+1	; 0x01
    1e5c:	ce 0f       	add	r28, r30
    1e5e:	d1 1d       	adc	r29, r1
    1e60:	0f b6       	in	r0, 0x3f	; 63
    1e62:	f8 94       	cli
    1e64:	de bf       	out	0x3e, r29	; 62
    1e66:	0f be       	out	0x3f, r0	; 63
    1e68:	cd bf       	out	0x3d, r28	; 61
    1e6a:	ed 01       	movw	r28, r26
    1e6c:	08 95       	ret

00001e6e <_exit>:
    1e6e:	f8 94       	cli

00001e70 <__stop_program>:
    1e70:	ff cf       	rjmp	.-2      	; 0x1e70 <__stop_program>
