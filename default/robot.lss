
robot.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000254c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000126  00800060  0000254c  000025e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000080  00800186  00800186  00002706  2**0
                  ALLOC
  3 .debug_aranges 000002a0  00000000  00000000  00002706  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000004c8  00000000  00000000  000029a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000341f  00000000  00000000  00002e6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001ada  00000000  00000000  0000628d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001ee0  00000000  00000000  00007d67  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000330  00000000  00000000  00009c48  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000614  00000000  00000000  00009f78  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000cf2  00000000  00000000  0000a58c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  0000b27e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 05 04 	jmp	0x80a	; 0x80a <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 a5 07 	jmp	0xf4a	; 0xf4a <__vector_13>
      38:	0c 94 01 08 	jmp	0x1002	; 0x1002 <__vector_14>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_16>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e4       	ldi	r30, 0x4C	; 76
      68:	f5 e2       	ldi	r31, 0x25	; 37
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a6 38       	cpi	r26, 0x86	; 134
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	12 e0       	ldi	r17, 0x02	; 2
      78:	a6 e8       	ldi	r26, 0x86	; 134
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a6 30       	cpi	r26, 0x06	; 6
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <main>
      8a:	0c 94 a4 12 	jmp	0x2548	; 0x2548 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <ADC_Init>:
{
	//- Fréquence de l’horloge de l’ADC = 125 kHz
	//- Mode d’opération = Freerun
	//- Référence de voltage = AREF
	//- Mode de traitement des acquisitions = Interruption
	ADMUX	= (0 << REFS1) | (0 << REFS0) | (0 << ADLAR) | (0 << MUX4) | (0 << MUX3) | (0 << MUX2)	| (0 << MUX1) | (0 << MUX0);
      92:	17 b8       	out	0x07, r1	; 7
	ADCSRA	= (1 << ADEN) | (0 << ADSC) | (1 << ADATE) | (0 << ADIF) | (1 << ADIE) |  (1 << ADPS2)	|  (1 << ADPS1)	 |  (1 << ADPS0); 
      94:	8f ea       	ldi	r24, 0xAF	; 175
      96:	86 b9       	out	0x06, r24	; 6
	SFIOR	= (0 << ADTS2) | (0 << ADTS1) | (0 << ADTS0) | (0 << 4)	   |  (0 << ACME) | (0 << PUD)	| (0 << PSR2)	 | (0 << PSR10);
      98:	10 be       	out	0x30, r1	; 48
	ADCSRA |= (1 << ADSC); //On lance l'aquisition en mode free running
      9a:	36 9a       	sbi	0x06, 6	; 6
	ADMUX  = (1 << MUX0); //On change immédiatement de canal pour la prochaine conversion
      9c:	81 e0       	ldi	r24, 0x01	; 1
      9e:	87 b9       	out	0x07, r24	; 7
	DDRA=(1<<CAL);
      a0:	80 e1       	ldi	r24, 0x10	; 16
      a2:	8a bb       	out	0x1a, r24	; 26
//	PORTA = (1 << DIR_G) |(1 << DIR_D);
}
      a4:	08 95       	ret

000000a6 <__vector_16>:


ISR(ADC_vect)
{
      a6:	1f 92       	push	r1
      a8:	0f 92       	push	r0
      aa:	0f b6       	in	r0, 0x3f	; 63
      ac:	0f 92       	push	r0
      ae:	11 24       	eor	r1, r1
      b0:	2f 93       	push	r18
      b2:	3f 93       	push	r19
      b4:	4f 93       	push	r20
      b6:	5f 93       	push	r21
      b8:	8f 93       	push	r24
      ba:	9f 93       	push	r25
	int16_t vitesse_echantillon;
	ADMUX_prev=ADMUX;
      bc:	87 b1       	in	r24, 0x07	; 7
      be:	90 e0       	ldi	r25, 0x00	; 0
      c0:	90 93 87 01 	sts	0x0187, r25
      c4:	80 93 86 01 	sts	0x0186, r24
	ADMUX ^= (1  << MUX0); // le changement de canal débute avant la conversion
      c8:	87 b1       	in	r24, 0x07	; 7
      ca:	91 e0       	ldi	r25, 0x01	; 1
      cc:	89 27       	eor	r24, r25
      ce:	87 b9       	out	0x07, r24	; 7
	vitesse_echantillon=ADC;
      d0:	24 b1       	in	r18, 0x04	; 4
      d2:	35 b1       	in	r19, 0x05	; 5
	//vitesse_echantillon = ADCL;
	//PORTB = ADMUX_prev;
	//vitesse_echantillon |= (ADCH << 8);
	//PORTB=ADMUX_prev;
	
	switch((ADMUX & (1 << MUX0))==0) // ADMUX = 0 --> moteur gauche, ADMUX = 1 --> moteur droit 
      d4:	87 b1       	in	r24, 0x07	; 7
      d6:	90 e0       	ldi	r25, 0x00	; 0
      d8:	80 95       	com	r24
      da:	90 95       	com	r25
      dc:	ac 01       	movw	r20, r24
      de:	41 70       	andi	r20, 0x01	; 1
      e0:	50 70       	andi	r21, 0x00	; 0
      e2:	80 ff       	sbrs	r24, 0
      e4:	04 c0       	rjmp	.+8      	; 0xee <__vector_16+0x48>
      e6:	41 30       	cpi	r20, 0x01	; 1
      e8:	51 05       	cpc	r21, r1
      ea:	d1 f5       	brne	.+116    	; 0x160 <__vector_16+0xba>
      ec:	1d c0       	rjmp	.+58     	; 0x128 <__vector_16+0x82>
	{
		case GAUCHE:
		{
			if ((PINA & (1 << DIR_G)) > 0)
      ee:	ca 9b       	sbis	0x19, 2	; 25
      f0:	0b c0       	rjmp	.+22     	; 0x108 <__vector_16+0x62>
			{
				somme_vitesse[GAUCHE] -= vitesse_echantillon;
      f2:	80 91 ae 01 	lds	r24, 0x01AE
      f6:	90 91 af 01 	lds	r25, 0x01AF
      fa:	82 1b       	sub	r24, r18
      fc:	93 0b       	sbc	r25, r19
      fe:	90 93 af 01 	sts	0x01AF, r25
     102:	80 93 ae 01 	sts	0x01AE, r24
     106:	0a c0       	rjmp	.+20     	; 0x11c <__vector_16+0x76>
//				PORTB|=0b00000001;
				
			}
			else
			{
				somme_vitesse[GAUCHE] += vitesse_echantillon;
     108:	80 91 ae 01 	lds	r24, 0x01AE
     10c:	90 91 af 01 	lds	r25, 0x01AF
     110:	28 0f       	add	r18, r24
     112:	39 1f       	adc	r19, r25
     114:	30 93 af 01 	sts	0x01AF, r19
     118:	20 93 ae 01 	sts	0x01AE, r18
				nombre_echantillon[GAUCHE]++;
     11c:	80 91 b2 01 	lds	r24, 0x01B2
     120:	8f 5f       	subi	r24, 0xFF	; 255
     122:	80 93 b2 01 	sts	0x01B2, r24
     126:	1c c0       	rjmp	.+56     	; 0x160 <__vector_16+0xba>
			}
			break;
		}
		case DROIT:
		{
			if ((PINA & (1 << DIR_D)) > 0)
     128:	cb 9b       	sbis	0x19, 3	; 25
     12a:	0b c0       	rjmp	.+22     	; 0x142 <__vector_16+0x9c>
			{
				somme_vitesse[DROIT] -= vitesse_echantillon;
     12c:	80 91 b0 01 	lds	r24, 0x01B0
     130:	90 91 b1 01 	lds	r25, 0x01B1
     134:	82 1b       	sub	r24, r18
     136:	93 0b       	sbc	r25, r19
     138:	90 93 b1 01 	sts	0x01B1, r25
     13c:	80 93 b0 01 	sts	0x01B0, r24
     140:	0a c0       	rjmp	.+20     	; 0x156 <__vector_16+0xb0>
				nombre_echantillon[DROIT]++;
//				PORTB|=0b00000100;
			}
			else
			{
				somme_vitesse[DROIT] += vitesse_echantillon;
     142:	80 91 b0 01 	lds	r24, 0x01B0
     146:	90 91 b1 01 	lds	r25, 0x01B1
     14a:	28 0f       	add	r18, r24
     14c:	39 1f       	adc	r19, r25
     14e:	30 93 b1 01 	sts	0x01B1, r19
     152:	20 93 b0 01 	sts	0x01B0, r18
				nombre_echantillon[DROIT]++;
     156:	80 91 b3 01 	lds	r24, 0x01B3
     15a:	8f 5f       	subi	r24, 0xFF	; 255
     15c:	80 93 b3 01 	sts	0x01B3, r24
				//PORTB|=0b00000010;
			
		
	}

}
     160:	9f 91       	pop	r25
     162:	8f 91       	pop	r24
     164:	5f 91       	pop	r21
     166:	4f 91       	pop	r20
     168:	3f 91       	pop	r19
     16a:	2f 91       	pop	r18
     16c:	0f 90       	pop	r0
     16e:	0f be       	out	0x3f, r0	; 63
     170:	0f 90       	pop	r0
     172:	1f 90       	pop	r1
     174:	18 95       	reti

00000176 <moyenne_Moteur>:

void moyenne_Moteur(float vitesseMoteur[])
{ int16_t tp_somme_vitesse_G, tp_somme_vitesse_D;
     176:	2f 92       	push	r2
     178:	3f 92       	push	r3
     17a:	4f 92       	push	r4
     17c:	5f 92       	push	r5
     17e:	6f 92       	push	r6
     180:	7f 92       	push	r7
     182:	8f 92       	push	r8
     184:	9f 92       	push	r9
     186:	af 92       	push	r10
     188:	bf 92       	push	r11
     18a:	cf 92       	push	r12
     18c:	df 92       	push	r13
     18e:	ef 92       	push	r14
     190:	ff 92       	push	r15
     192:	0f 93       	push	r16
     194:	1f 93       	push	r17
     196:	cf 93       	push	r28
     198:	df 93       	push	r29
     19a:	ec 01       	movw	r28, r24
		/*
		sprintf(debugChaine, "%d", nombre_echantillon[GAUCHE]);
		debug=1;
		UCSRB|=(1<<UDRIE);
		*/
	cli();
     19c:	f8 94       	cli
	tp_somme_vitesse_G = somme_vitesse[GAUCHE];
     19e:	60 90 ae 01 	lds	r6, 0x01AE
     1a2:	70 90 af 01 	lds	r7, 0x01AF
	tp_somme_vitesse_D = somme_vitesse[DROIT];
     1a6:	60 91 b0 01 	lds	r22, 0x01B0
     1aa:	70 91 b1 01 	lds	r23, 0x01B1
    tp_nombre_ech_G = nombre_echantillon[GAUCHE];
     1ae:	20 90 b2 01 	lds	r2, 0x01B2
	tp_nombre_ech_D = nombre_echantillon[DROIT];
     1b2:	e0 90 b3 01 	lds	r14, 0x01B3
	nombre_echantillon[GAUCHE]=0; //Une fois l'opération de moyenne faite on réinitialise les données à 0
     1b6:	10 92 b2 01 	sts	0x01B2, r1
	somme_vitesse[GAUCHE]=0;
     1ba:	10 92 af 01 	sts	0x01AF, r1
     1be:	10 92 ae 01 	sts	0x01AE, r1
	nombre_echantillon[DROIT]=0;
     1c2:	10 92 b3 01 	sts	0x01B3, r1
	somme_vitesse[DROIT]=0;
     1c6:	10 92 b1 01 	sts	0x01B1, r1
     1ca:	10 92 b0 01 	sts	0x01B0, r1
	sei();	
     1ce:	78 94       	sei

	vitesseMoteur[DROIT]= ((float) tp_somme_vitesse_D)/((float) tp_nombre_ech_D);
     1d0:	88 27       	eor	r24, r24
     1d2:	77 fd       	sbrc	r23, 7
     1d4:	80 95       	com	r24
     1d6:	98 2f       	mov	r25, r24
     1d8:	0e 94 ac 0c 	call	0x1958	; 0x1958 <__floatsisf>
     1dc:	5b 01       	movw	r10, r22
     1de:	6c 01       	movw	r12, r24
     1e0:	ff 24       	eor	r15, r15
     1e2:	00 e0       	ldi	r16, 0x00	; 0
     1e4:	10 e0       	ldi	r17, 0x00	; 0
     1e6:	c8 01       	movw	r24, r16
     1e8:	b7 01       	movw	r22, r14
     1ea:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__floatunsisf>
     1ee:	9b 01       	movw	r18, r22
     1f0:	ac 01       	movw	r20, r24
     1f2:	c6 01       	movw	r24, r12
     1f4:	b5 01       	movw	r22, r10
     1f6:	0e 94 10 0b 	call	0x1620	; 0x1620 <__divsf3>
     1fa:	6c 83       	std	Y+4, r22	; 0x04
     1fc:	7d 83       	std	Y+5, r23	; 0x05
     1fe:	8e 83       	std	Y+6, r24	; 0x06
     200:	9f 83       	std	Y+7, r25	; 0x07
		sprintf(debugChaine, "%d", somme_vitesse[GAUCHE]);
		debug=1;
		UCSRB|=(1<<UDRIE);
		*/
	
	vitesseMoteur[GAUCHE]=((float) tp_somme_vitesse_G)/((float) tp_nombre_ech_G);
     202:	88 24       	eor	r8, r8
     204:	77 fc       	sbrc	r7, 7
     206:	80 94       	com	r8
     208:	98 2c       	mov	r9, r8
     20a:	c4 01       	movw	r24, r8
     20c:	b3 01       	movw	r22, r6
     20e:	0e 94 ac 0c 	call	0x1958	; 0x1958 <__floatsisf>
     212:	7b 01       	movw	r14, r22
     214:	8c 01       	movw	r16, r24
     216:	33 24       	eor	r3, r3
     218:	44 24       	eor	r4, r4
     21a:	55 24       	eor	r5, r5
     21c:	c2 01       	movw	r24, r4
     21e:	b1 01       	movw	r22, r2
     220:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__floatunsisf>
     224:	9b 01       	movw	r18, r22
     226:	ac 01       	movw	r20, r24
     228:	c8 01       	movw	r24, r16
     22a:	b7 01       	movw	r22, r14
     22c:	0e 94 10 0b 	call	0x1620	; 0x1620 <__divsf3>
     230:	68 83       	st	Y, r22
     232:	79 83       	std	Y+1, r23	; 0x01
     234:	8a 83       	std	Y+2, r24	; 0x02
     236:	9b 83       	std	Y+3, r25	; 0x03
}
     238:	df 91       	pop	r29
     23a:	cf 91       	pop	r28
     23c:	1f 91       	pop	r17
     23e:	0f 91       	pop	r16
     240:	ff 90       	pop	r15
     242:	ef 90       	pop	r14
     244:	df 90       	pop	r13
     246:	cf 90       	pop	r12
     248:	bf 90       	pop	r11
     24a:	af 90       	pop	r10
     24c:	9f 90       	pop	r9
     24e:	8f 90       	pop	r8
     250:	7f 90       	pop	r7
     252:	6f 90       	pop	r6
     254:	5f 90       	pop	r5
     256:	4f 90       	pop	r4
     258:	3f 90       	pop	r3
     25a:	2f 90       	pop	r2
     25c:	08 95       	ret

0000025e <CalculPWM>:
#include "moteur.h"


void CalculPWM(float Vitesse_D, float Angle_D, float Vg, float Vd, float *Duty_G, float *Duty_D)
{
     25e:	2f 92       	push	r2
     260:	3f 92       	push	r3
     262:	4f 92       	push	r4
     264:	5f 92       	push	r5
     266:	6f 92       	push	r6
     268:	7f 92       	push	r7
     26a:	8f 92       	push	r8
     26c:	9f 92       	push	r9
     26e:	af 92       	push	r10
     270:	bf 92       	push	r11
     272:	cf 92       	push	r12
     274:	df 92       	push	r13
     276:	ef 92       	push	r14
     278:	ff 92       	push	r15
     27a:	0f 93       	push	r16
     27c:	1f 93       	push	r17
     27e:	df 93       	push	r29
     280:	cf 93       	push	r28
     282:	cd b7       	in	r28, 0x3d	; 61
     284:	de b7       	in	r29, 0x3e	; 62
     286:	60 97       	sbiw	r28, 0x10	; 16
     288:	0f b6       	in	r0, 0x3f	; 63
     28a:	f8 94       	cli
     28c:	de bf       	out	0x3e, r29	; 62
     28e:	0f be       	out	0x3f, r0	; 63
     290:	cd bf       	out	0x3d, r28	; 61
     292:	6f 83       	std	Y+7, r22	; 0x07
     294:	78 87       	std	Y+8, r23	; 0x08
     296:	89 87       	std	Y+9, r24	; 0x09
     298:	9a 87       	std	Y+10, r25	; 0x0a
     29a:	2b 87       	std	Y+11, r18	; 0x0b
     29c:	3c 87       	std	Y+12, r19	; 0x0c
     29e:	4d 87       	std	Y+13, r20	; 0x0d
     2a0:	5e 87       	std	Y+14, r21	; 0x0e
     2a2:	27 01       	movw	r4, r14
     2a4:	38 01       	movw	r6, r16
     2a6:	98 8a       	std	Y+16, r9	; 0x10
     2a8:	8f 86       	std	Y+15, r8	; 0x0f
	static float Ua     = 0.0;
	static int 	 Signe_Ua = 0;
	static int 	 Signe_Ut = 0;


	Vg = (Vg > 1.0) ? 1.0 : ((Vg < -1.0) ? -1.0 : Vg);  /* Regarde les limites (-1.0 à 1.0) */
     2aa:	c8 01       	movw	r24, r16
     2ac:	b7 01       	movw	r22, r14
     2ae:	20 e0       	ldi	r18, 0x00	; 0
     2b0:	30 e0       	ldi	r19, 0x00	; 0
     2b2:	40 e8       	ldi	r20, 0x80	; 128
     2b4:	5f e3       	ldi	r21, 0x3F	; 63
     2b6:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <__gtsf2>
     2ba:	18 16       	cp	r1, r24
     2bc:	5c f4       	brge	.+22     	; 0x2d4 <CalculPWM+0x76>
     2be:	0f 2e       	mov	r0, r31
     2c0:	f0 e0       	ldi	r31, 0x00	; 0
     2c2:	4f 2e       	mov	r4, r31
     2c4:	f0 e0       	ldi	r31, 0x00	; 0
     2c6:	5f 2e       	mov	r5, r31
     2c8:	f0 e8       	ldi	r31, 0x80	; 128
     2ca:	6f 2e       	mov	r6, r31
     2cc:	ff e3       	ldi	r31, 0x3F	; 63
     2ce:	7f 2e       	mov	r7, r31
     2d0:	f0 2d       	mov	r31, r0
     2d2:	14 c0       	rjmp	.+40     	; 0x2fc <CalculPWM+0x9e>
     2d4:	c8 01       	movw	r24, r16
     2d6:	b7 01       	movw	r22, r14
     2d8:	20 e0       	ldi	r18, 0x00	; 0
     2da:	30 e0       	ldi	r19, 0x00	; 0
     2dc:	40 e8       	ldi	r20, 0x80	; 128
     2de:	5f eb       	ldi	r21, 0xBF	; 191
     2e0:	0e 94 4c 0c 	call	0x1898	; 0x1898 <__ltsf2>
     2e4:	88 23       	and	r24, r24
     2e6:	54 f4       	brge	.+20     	; 0x2fc <CalculPWM+0x9e>
     2e8:	0f 2e       	mov	r0, r31
     2ea:	f0 e0       	ldi	r31, 0x00	; 0
     2ec:	4f 2e       	mov	r4, r31
     2ee:	f0 e0       	ldi	r31, 0x00	; 0
     2f0:	5f 2e       	mov	r5, r31
     2f2:	f0 e8       	ldi	r31, 0x80	; 128
     2f4:	6f 2e       	mov	r6, r31
     2f6:	ff eb       	ldi	r31, 0xBF	; 191
     2f8:	7f 2e       	mov	r7, r31
     2fa:	f0 2d       	mov	r31, r0
	Vd = (Vd > 1.0) ? 1.0 : ((Vd < -1.0) ? -1.0 : Vd);  /* Regarde les limites (-1.0 à 1.0) */
     2fc:	c6 01       	movw	r24, r12
     2fe:	b5 01       	movw	r22, r10
     300:	20 e0       	ldi	r18, 0x00	; 0
     302:	30 e0       	ldi	r19, 0x00	; 0
     304:	40 e8       	ldi	r20, 0x80	; 128
     306:	5f e3       	ldi	r21, 0x3F	; 63
     308:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <__gtsf2>
     30c:	18 16       	cp	r1, r24
     30e:	5c f4       	brge	.+22     	; 0x326 <CalculPWM+0xc8>
     310:	0f 2e       	mov	r0, r31
     312:	f0 e0       	ldi	r31, 0x00	; 0
     314:	af 2e       	mov	r10, r31
     316:	f0 e0       	ldi	r31, 0x00	; 0
     318:	bf 2e       	mov	r11, r31
     31a:	f0 e8       	ldi	r31, 0x80	; 128
     31c:	cf 2e       	mov	r12, r31
     31e:	ff e3       	ldi	r31, 0x3F	; 63
     320:	df 2e       	mov	r13, r31
     322:	f0 2d       	mov	r31, r0
     324:	14 c0       	rjmp	.+40     	; 0x34e <CalculPWM+0xf0>
     326:	c6 01       	movw	r24, r12
     328:	b5 01       	movw	r22, r10
     32a:	20 e0       	ldi	r18, 0x00	; 0
     32c:	30 e0       	ldi	r19, 0x00	; 0
     32e:	40 e8       	ldi	r20, 0x80	; 128
     330:	5f eb       	ldi	r21, 0xBF	; 191
     332:	0e 94 4c 0c 	call	0x1898	; 0x1898 <__ltsf2>
     336:	88 23       	and	r24, r24
     338:	54 f4       	brge	.+20     	; 0x34e <CalculPWM+0xf0>
     33a:	0f 2e       	mov	r0, r31
     33c:	f0 e0       	ldi	r31, 0x00	; 0
     33e:	af 2e       	mov	r10, r31
     340:	f0 e0       	ldi	r31, 0x00	; 0
     342:	bf 2e       	mov	r11, r31
     344:	f0 e8       	ldi	r31, 0x80	; 128
     346:	cf 2e       	mov	r12, r31
     348:	ff eb       	ldi	r31, 0xBF	; 191
     34a:	df 2e       	mov	r13, r31
     34c:	f0 2d       	mov	r31, r0
		
	Old_W = W;
     34e:	e0 90 9c 01 	lds	r14, 0x019C
     352:	f0 90 9d 01 	lds	r15, 0x019D
     356:	00 91 9e 01 	lds	r16, 0x019E
     35a:	10 91 9f 01 	lds	r17, 0x019F
     35e:	e0 92 98 01 	sts	0x0198, r14
     362:	f0 92 99 01 	sts	0x0199, r15
     366:	00 93 9a 01 	sts	0x019A, r16
     36a:	10 93 9b 01 	sts	0x019B, r17
	W     = 0.5*(Vmax/RAYON)*(Vd-Vg);
     36e:	c6 01       	movw	r24, r12
     370:	b5 01       	movw	r22, r10
     372:	a3 01       	movw	r20, r6
     374:	92 01       	movw	r18, r4
     376:	0e 94 b8 09 	call	0x1370	; 0x1370 <__subsf3>
     37a:	2a e1       	ldi	r18, 0x1A	; 26
     37c:	32 e6       	ldi	r19, 0x62	; 98
     37e:	46 e8       	ldi	r20, 0x86	; 134
     380:	50 e4       	ldi	r21, 0x40	; 64
     382:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     386:	6b 83       	std	Y+3, r22	; 0x03
     388:	7c 83       	std	Y+4, r23	; 0x04
     38a:	8d 83       	std	Y+5, r24	; 0x05
     38c:	9e 83       	std	Y+6, r25	; 0x06
     38e:	60 93 9c 01 	sts	0x019C, r22
     392:	70 93 9d 01 	sts	0x019D, r23
     396:	80 93 9e 01 	sts	0x019E, r24
     39a:	90 93 9f 01 	sts	0x019F, r25
	Vt    = 0.5*(Vd+Vg);
     39e:	c6 01       	movw	r24, r12
     3a0:	b5 01       	movw	r22, r10
     3a2:	a3 01       	movw	r20, r6
     3a4:	92 01       	movw	r18, r4
     3a6:	0e 94 e9 09 	call	0x13d2	; 0x13d2 <__addsf3>
     3aa:	20 e0       	ldi	r18, 0x00	; 0
     3ac:	30 e0       	ldi	r19, 0x00	; 0
     3ae:	40 e0       	ldi	r20, 0x00	; 0
     3b0:	5f e3       	ldi	r21, 0x3F	; 63
     3b2:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     3b6:	3b 01       	movw	r6, r22
     3b8:	4c 01       	movw	r8, r24
     3ba:	60 93 94 01 	sts	0x0194, r22
     3be:	70 93 95 01 	sts	0x0195, r23
     3c2:	80 93 96 01 	sts	0x0196, r24
     3c6:	90 93 97 01 	sts	0x0197, r25

	Angle = Angle + (0.5)*TS*(W+Old_W);
     3ca:	6b 81       	ldd	r22, Y+3	; 0x03
     3cc:	7c 81       	ldd	r23, Y+4	; 0x04
     3ce:	8d 81       	ldd	r24, Y+5	; 0x05
     3d0:	9e 81       	ldd	r25, Y+6	; 0x06
     3d2:	a8 01       	movw	r20, r16
     3d4:	97 01       	movw	r18, r14
     3d6:	0e 94 e9 09 	call	0x13d2	; 0x13d2 <__addsf3>
     3da:	2a e0       	ldi	r18, 0x0A	; 10
     3dc:	37 ed       	ldi	r19, 0xD7	; 215
     3de:	43 e2       	ldi	r20, 0x23	; 35
     3e0:	5b e3       	ldi	r21, 0x3B	; 59
     3e2:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     3e6:	20 91 a4 01 	lds	r18, 0x01A4
     3ea:	30 91 a5 01 	lds	r19, 0x01A5
     3ee:	40 91 a6 01 	lds	r20, 0x01A6
     3f2:	50 91 a7 01 	lds	r21, 0x01A7
     3f6:	0e 94 e9 09 	call	0x13d2	; 0x13d2 <__addsf3>
     3fa:	7b 01       	movw	r14, r22
     3fc:	8c 01       	movw	r16, r24
	Angle = (Angle > 2.0*Pi) ? Angle - 2*Pi : ((Angle < 0.0) ? Angle + 2*Pi : Angle); /* Angle entre 0 et 2 pi */
     3fe:	2b ed       	ldi	r18, 0xDB	; 219
     400:	3f e0       	ldi	r19, 0x0F	; 15
     402:	49 ec       	ldi	r20, 0xC9	; 201
     404:	50 e4       	ldi	r21, 0x40	; 64
     406:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <__gtsf2>
     40a:	18 16       	cp	r1, r24
     40c:	4c f4       	brge	.+18     	; 0x420 <CalculPWM+0x1c2>
     40e:	c8 01       	movw	r24, r16
     410:	b7 01       	movw	r22, r14
     412:	2b ed       	ldi	r18, 0xDB	; 219
     414:	3f e0       	ldi	r19, 0x0F	; 15
     416:	49 ec       	ldi	r20, 0xC9	; 201
     418:	50 e4       	ldi	r21, 0x40	; 64
     41a:	0e 94 b8 09 	call	0x1370	; 0x1370 <__subsf3>
     41e:	12 c0       	rjmp	.+36     	; 0x444 <CalculPWM+0x1e6>
     420:	c8 01       	movw	r24, r16
     422:	b7 01       	movw	r22, r14
     424:	20 e0       	ldi	r18, 0x00	; 0
     426:	30 e0       	ldi	r19, 0x00	; 0
     428:	40 e0       	ldi	r20, 0x00	; 0
     42a:	50 e0       	ldi	r21, 0x00	; 0
     42c:	0e 94 4c 0c 	call	0x1898	; 0x1898 <__ltsf2>
     430:	88 23       	and	r24, r24
     432:	54 f4       	brge	.+20     	; 0x448 <CalculPWM+0x1ea>
     434:	c8 01       	movw	r24, r16
     436:	b7 01       	movw	r22, r14
     438:	2b ed       	ldi	r18, 0xDB	; 219
     43a:	3f e0       	ldi	r19, 0x0F	; 15
     43c:	49 ec       	ldi	r20, 0xC9	; 201
     43e:	50 e4       	ldi	r21, 0x40	; 64
     440:	0e 94 e9 09 	call	0x13d2	; 0x13d2 <__addsf3>
     444:	7b 01       	movw	r14, r22
     446:	8c 01       	movw	r16, r24
     448:	e0 92 a4 01 	sts	0x01A4, r14
     44c:	f0 92 a5 01 	sts	0x01A5, r15
     450:	00 93 a6 01 	sts	0x01A6, r16
     454:	10 93 a7 01 	sts	0x01A7, r17
	ErreurAngle = ((Angle_D >= Pi + Angle) ? Angle_D - 2*Pi : ((Angle_D <= -Pi + Angle) ? Angle_D + 2*Pi : Angle_D))-Angle;
     458:	c8 01       	movw	r24, r16
     45a:	b7 01       	movw	r22, r14
     45c:	2b ed       	ldi	r18, 0xDB	; 219
     45e:	3f e0       	ldi	r19, 0x0F	; 15
     460:	49 e4       	ldi	r20, 0x49	; 73
     462:	50 e4       	ldi	r21, 0x40	; 64
     464:	0e 94 e9 09 	call	0x13d2	; 0x13d2 <__addsf3>
     468:	9b 01       	movw	r18, r22
     46a:	ac 01       	movw	r20, r24
     46c:	6b 85       	ldd	r22, Y+11	; 0x0b
     46e:	7c 85       	ldd	r23, Y+12	; 0x0c
     470:	8d 85       	ldd	r24, Y+13	; 0x0d
     472:	9e 85       	ldd	r25, Y+14	; 0x0e
     474:	0e 94 1c 0c 	call	0x1838	; 0x1838 <__gesf2>
     478:	88 23       	and	r24, r24
     47a:	5c f0       	brlt	.+22     	; 0x492 <CalculPWM+0x234>
     47c:	6b 85       	ldd	r22, Y+11	; 0x0b
     47e:	7c 85       	ldd	r23, Y+12	; 0x0c
     480:	8d 85       	ldd	r24, Y+13	; 0x0d
     482:	9e 85       	ldd	r25, Y+14	; 0x0e
     484:	2b ed       	ldi	r18, 0xDB	; 219
     486:	3f e0       	ldi	r19, 0x0F	; 15
     488:	49 ec       	ldi	r20, 0xC9	; 201
     48a:	50 e4       	ldi	r21, 0x40	; 64
     48c:	0e 94 b8 09 	call	0x1370	; 0x1370 <__subsf3>
     490:	1c c0       	rjmp	.+56     	; 0x4ca <CalculPWM+0x26c>
     492:	c8 01       	movw	r24, r16
     494:	b7 01       	movw	r22, r14
     496:	2b ed       	ldi	r18, 0xDB	; 219
     498:	3f e0       	ldi	r19, 0x0F	; 15
     49a:	49 e4       	ldi	r20, 0x49	; 73
     49c:	50 e4       	ldi	r21, 0x40	; 64
     49e:	0e 94 b8 09 	call	0x1370	; 0x1370 <__subsf3>
     4a2:	9b 01       	movw	r18, r22
     4a4:	ac 01       	movw	r20, r24
     4a6:	6b 85       	ldd	r22, Y+11	; 0x0b
     4a8:	7c 85       	ldd	r23, Y+12	; 0x0c
     4aa:	8d 85       	ldd	r24, Y+13	; 0x0d
     4ac:	9e 85       	ldd	r25, Y+14	; 0x0e
     4ae:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <__lesf2>
     4b2:	18 16       	cp	r1, r24
     4b4:	74 f0       	brlt	.+28     	; 0x4d2 <CalculPWM+0x274>
     4b6:	6b 85       	ldd	r22, Y+11	; 0x0b
     4b8:	7c 85       	ldd	r23, Y+12	; 0x0c
     4ba:	8d 85       	ldd	r24, Y+13	; 0x0d
     4bc:	9e 85       	ldd	r25, Y+14	; 0x0e
     4be:	2b ed       	ldi	r18, 0xDB	; 219
     4c0:	3f e0       	ldi	r19, 0x0F	; 15
     4c2:	49 ec       	ldi	r20, 0xC9	; 201
     4c4:	50 e4       	ldi	r21, 0x40	; 64
     4c6:	0e 94 e9 09 	call	0x13d2	; 0x13d2 <__addsf3>
     4ca:	6b 87       	std	Y+11, r22	; 0x0b
     4cc:	7c 87       	std	Y+12, r23	; 0x0c
     4ce:	8d 87       	std	Y+13, r24	; 0x0d
     4d0:	9e 87       	std	Y+14, r25	; 0x0e
     4d2:	6b 85       	ldd	r22, Y+11	; 0x0b
     4d4:	7c 85       	ldd	r23, Y+12	; 0x0c
     4d6:	8d 85       	ldd	r24, Y+13	; 0x0d
     4d8:	9e 85       	ldd	r25, Y+14	; 0x0e
     4da:	a8 01       	movw	r20, r16
     4dc:	97 01       	movw	r18, r14
     4de:	0e 94 b8 09 	call	0x1370	; 0x1370 <__subsf3>
     4e2:	5b 01       	movw	r10, r22
     4e4:	6c 01       	movw	r12, r24
     4e6:	60 93 a0 01 	sts	0x01A0, r22
     4ea:	70 93 a1 01 	sts	0x01A1, r23
     4ee:	80 93 a2 01 	sts	0x01A2, r24
     4f2:	90 93 a3 01 	sts	0x01A3, r25

	Ut = -H11*Vt + H12*Vitesse_D;
     4f6:	c4 01       	movw	r24, r8
     4f8:	b3 01       	movw	r22, r6
     4fa:	28 ee       	ldi	r18, 0xE8	; 232
     4fc:	31 eb       	ldi	r19, 0xB1	; 177
     4fe:	49 e7       	ldi	r20, 0x79	; 121
     500:	50 ec       	ldi	r21, 0xC0	; 192
     502:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     506:	7b 01       	movw	r14, r22
     508:	8c 01       	movw	r16, r24
     50a:	6f 81       	ldd	r22, Y+7	; 0x07
     50c:	78 85       	ldd	r23, Y+8	; 0x08
     50e:	89 85       	ldd	r24, Y+9	; 0x09
     510:	9a 85       	ldd	r25, Y+10	; 0x0a
     512:	24 ef       	ldi	r18, 0xF4	; 244
     514:	38 ed       	ldi	r19, 0xD8	; 216
     516:	4c e9       	ldi	r20, 0x9C	; 156
     518:	50 e4       	ldi	r21, 0x40	; 64
     51a:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     51e:	9b 01       	movw	r18, r22
     520:	ac 01       	movw	r20, r24
     522:	c8 01       	movw	r24, r16
     524:	b7 01       	movw	r22, r14
     526:	0e 94 e9 09 	call	0x13d2	; 0x13d2 <__addsf3>
     52a:	3b 01       	movw	r6, r22
     52c:	4c 01       	movw	r8, r24
	Ua = H21*ErreurAngle - H22*W;
     52e:	c6 01       	movw	r24, r12
     530:	b5 01       	movw	r22, r10
     532:	21 e2       	ldi	r18, 0x21	; 33
     534:	37 ea       	ldi	r19, 0xA7	; 167
     536:	44 e9       	ldi	r20, 0x94	; 148
     538:	5f e3       	ldi	r21, 0x3F	; 63
     53a:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     53e:	7b 01       	movw	r14, r22
     540:	8c 01       	movw	r16, r24
     542:	6b 81       	ldd	r22, Y+3	; 0x03
     544:	7c 81       	ldd	r23, Y+4	; 0x04
     546:	8d 81       	ldd	r24, Y+5	; 0x05
     548:	9e 81       	ldd	r25, Y+6	; 0x06
     54a:	28 e1       	ldi	r18, 0x18	; 24
     54c:	37 ea       	ldi	r19, 0xA7	; 167
     54e:	44 e1       	ldi	r20, 0x14	; 20
     550:	5f eb       	ldi	r21, 0xBF	; 191
     552:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     556:	9b 01       	movw	r18, r22
     558:	ac 01       	movw	r20, r24
     55a:	c8 01       	movw	r24, r16
     55c:	b7 01       	movw	r22, r14
     55e:	0e 94 e9 09 	call	0x13d2	; 0x13d2 <__addsf3>
     562:	5b 01       	movw	r10, r22
     564:	6c 01       	movw	r12, r24
			
	Signe_Ua = (Ua >= 0.0)   ? 1 : -1;
     566:	20 e0       	ldi	r18, 0x00	; 0
     568:	30 e0       	ldi	r19, 0x00	; 0
     56a:	40 e0       	ldi	r20, 0x00	; 0
     56c:	50 e0       	ldi	r21, 0x00	; 0
     56e:	0e 94 1c 0c 	call	0x1838	; 0x1838 <__gesf2>
     572:	87 ff       	sbrs	r24, 7
     574:	03 c0       	rjmp	.+6      	; 0x57c <CalculPWM+0x31e>
     576:	0f ef       	ldi	r16, 0xFF	; 255
     578:	1f ef       	ldi	r17, 0xFF	; 255
     57a:	02 c0       	rjmp	.+4      	; 0x580 <CalculPWM+0x322>
     57c:	01 e0       	ldi	r16, 0x01	; 1
     57e:	10 e0       	ldi	r17, 0x00	; 0
     580:	10 93 8b 01 	sts	0x018B, r17
     584:	00 93 8a 01 	sts	0x018A, r16
	Signe_Ut = (Ut >= 0.0) ? 1 : -1;
     588:	c4 01       	movw	r24, r8
     58a:	b3 01       	movw	r22, r6
     58c:	20 e0       	ldi	r18, 0x00	; 0
     58e:	30 e0       	ldi	r19, 0x00	; 0
     590:	40 e0       	ldi	r20, 0x00	; 0
     592:	50 e0       	ldi	r21, 0x00	; 0
     594:	0e 94 1c 0c 	call	0x1838	; 0x1838 <__gesf2>
     598:	87 ff       	sbrs	r24, 7
     59a:	05 c0       	rjmp	.+10     	; 0x5a6 <CalculPWM+0x348>
     59c:	2f ef       	ldi	r18, 0xFF	; 255
     59e:	3f ef       	ldi	r19, 0xFF	; 255
     5a0:	3a 83       	std	Y+2, r19	; 0x02
     5a2:	29 83       	std	Y+1, r18	; 0x01
     5a4:	04 c0       	rjmp	.+8      	; 0x5ae <CalculPWM+0x350>
     5a6:	81 e0       	ldi	r24, 0x01	; 1
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	9a 83       	std	Y+2, r25	; 0x02
     5ac:	89 83       	std	Y+1, r24	; 0x01
     5ae:	a9 81       	ldd	r26, Y+1	; 0x01
     5b0:	ba 81       	ldd	r27, Y+2	; 0x02
     5b2:	b0 93 89 01 	sts	0x0189, r27
     5b6:	a0 93 88 01 	sts	0x0188, r26
	
	Ua = (Signe_Ua*Ua > 1.0) ? Signe_Ua*1.0 : ((Signe_Ua*Ua <= 0.05) ? 0.0 : Ua);
     5ba:	b8 01       	movw	r22, r16
     5bc:	88 27       	eor	r24, r24
     5be:	77 fd       	sbrc	r23, 7
     5c0:	80 95       	com	r24
     5c2:	98 2f       	mov	r25, r24
     5c4:	0e 94 ac 0c 	call	0x1958	; 0x1958 <__floatsisf>
     5c8:	1b 01       	movw	r2, r22
     5ca:	2c 01       	movw	r4, r24
     5cc:	a6 01       	movw	r20, r12
     5ce:	95 01       	movw	r18, r10
     5d0:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     5d4:	7b 01       	movw	r14, r22
     5d6:	8c 01       	movw	r16, r24
     5d8:	20 e0       	ldi	r18, 0x00	; 0
     5da:	30 e0       	ldi	r19, 0x00	; 0
     5dc:	40 e8       	ldi	r20, 0x80	; 128
     5de:	5f e3       	ldi	r21, 0x3F	; 63
     5e0:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <__gtsf2>
     5e4:	18 16       	cp	r1, r24
     5e6:	1c f4       	brge	.+6      	; 0x5ee <CalculPWM+0x390>
     5e8:	62 01       	movw	r12, r4
     5ea:	51 01       	movw	r10, r2
     5ec:	14 c0       	rjmp	.+40     	; 0x616 <CalculPWM+0x3b8>
     5ee:	c8 01       	movw	r24, r16
     5f0:	b7 01       	movw	r22, r14
     5f2:	2d ec       	ldi	r18, 0xCD	; 205
     5f4:	3c ec       	ldi	r19, 0xCC	; 204
     5f6:	4c e4       	ldi	r20, 0x4C	; 76
     5f8:	5d e3       	ldi	r21, 0x3D	; 61
     5fa:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <__lesf2>
     5fe:	18 16       	cp	r1, r24
     600:	54 f0       	brlt	.+20     	; 0x616 <CalculPWM+0x3b8>
     602:	0f 2e       	mov	r0, r31
     604:	f0 e0       	ldi	r31, 0x00	; 0
     606:	af 2e       	mov	r10, r31
     608:	f0 e0       	ldi	r31, 0x00	; 0
     60a:	bf 2e       	mov	r11, r31
     60c:	f0 e0       	ldi	r31, 0x00	; 0
     60e:	cf 2e       	mov	r12, r31
     610:	f0 e0       	ldi	r31, 0x00	; 0
     612:	df 2e       	mov	r13, r31
     614:	f0 2d       	mov	r31, r0
     616:	a0 92 8c 01 	sts	0x018C, r10
     61a:	b0 92 8d 01 	sts	0x018D, r11
     61e:	c0 92 8e 01 	sts	0x018E, r12
     622:	d0 92 8f 01 	sts	0x018F, r13
	Ut = (Signe_Ut*Ut > 1.0) ? Signe_Ut*1.0 : Ut;
     626:	e9 81       	ldd	r30, Y+1	; 0x01
     628:	fa 81       	ldd	r31, Y+2	; 0x02
     62a:	bf 01       	movw	r22, r30
     62c:	88 27       	eor	r24, r24
     62e:	77 fd       	sbrc	r23, 7
     630:	80 95       	com	r24
     632:	98 2f       	mov	r25, r24
     634:	0e 94 ac 0c 	call	0x1958	; 0x1958 <__floatsisf>
     638:	7b 01       	movw	r14, r22
     63a:	8c 01       	movw	r16, r24
     63c:	a4 01       	movw	r20, r8
     63e:	93 01       	movw	r18, r6
     640:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     644:	20 e0       	ldi	r18, 0x00	; 0
     646:	30 e0       	ldi	r19, 0x00	; 0
     648:	40 e8       	ldi	r20, 0x80	; 128
     64a:	5f e3       	ldi	r21, 0x3F	; 63
     64c:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <__gtsf2>
     650:	18 16       	cp	r1, r24
     652:	14 f4       	brge	.+4      	; 0x658 <CalculPWM+0x3fa>
     654:	37 01       	movw	r6, r14
     656:	48 01       	movw	r8, r16
	Ut = ((Signe_Ut*Ut) > (1.0 - Signe_Ua*Ua)) ? Signe_Ut*(1.0 - Signe_Ua*Ua) : Ut;
     658:	c2 01       	movw	r24, r4
     65a:	b1 01       	movw	r22, r2
     65c:	a6 01       	movw	r20, r12
     65e:	95 01       	movw	r18, r10
     660:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     664:	9b 01       	movw	r18, r22
     666:	ac 01       	movw	r20, r24
     668:	60 e0       	ldi	r22, 0x00	; 0
     66a:	70 e0       	ldi	r23, 0x00	; 0
     66c:	80 e8       	ldi	r24, 0x80	; 128
     66e:	9f e3       	ldi	r25, 0x3F	; 63
     670:	0e 94 b8 09 	call	0x1370	; 0x1370 <__subsf3>
     674:	1b 01       	movw	r2, r22
     676:	2c 01       	movw	r4, r24
     678:	c8 01       	movw	r24, r16
     67a:	b7 01       	movw	r22, r14
     67c:	a4 01       	movw	r20, r8
     67e:	93 01       	movw	r18, r6
     680:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     684:	a2 01       	movw	r20, r4
     686:	91 01       	movw	r18, r2
     688:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <__gtsf2>
     68c:	18 16       	cp	r1, r24
     68e:	44 f4       	brge	.+16     	; 0x6a0 <CalculPWM+0x442>
     690:	c8 01       	movw	r24, r16
     692:	b7 01       	movw	r22, r14
     694:	a2 01       	movw	r20, r4
     696:	91 01       	movw	r18, r2
     698:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     69c:	3b 01       	movw	r6, r22
     69e:	4c 01       	movw	r8, r24
     6a0:	60 92 90 01 	sts	0x0190, r6
     6a4:	70 92 91 01 	sts	0x0191, r7
     6a8:	80 92 92 01 	sts	0x0192, r8
     6ac:	90 92 93 01 	sts	0x0193, r9


	*Duty_D = (Ut+Ua);
     6b0:	c4 01       	movw	r24, r8
     6b2:	b3 01       	movw	r22, r6
     6b4:	a6 01       	movw	r20, r12
     6b6:	95 01       	movw	r18, r10
     6b8:	0e 94 e9 09 	call	0x13d2	; 0x13d2 <__addsf3>
     6bc:	ad a1       	ldd	r26, Y+37	; 0x25
     6be:	be a1       	ldd	r27, Y+38	; 0x26
     6c0:	6d 93       	st	X+, r22
     6c2:	7d 93       	st	X+, r23
     6c4:	8d 93       	st	X+, r24
     6c6:	9c 93       	st	X, r25
     6c8:	13 97       	sbiw	r26, 0x03	; 3
	*Duty_G = (Ut-Ua);
     6ca:	c4 01       	movw	r24, r8
     6cc:	b3 01       	movw	r22, r6
     6ce:	a6 01       	movw	r20, r12
     6d0:	95 01       	movw	r18, r10
     6d2:	0e 94 b8 09 	call	0x1370	; 0x1370 <__subsf3>
     6d6:	ef 85       	ldd	r30, Y+15	; 0x0f
     6d8:	f8 89       	ldd	r31, Y+16	; 0x10
     6da:	60 83       	st	Z, r22
     6dc:	71 83       	std	Z+1, r23	; 0x01
     6de:	82 83       	std	Z+2, r24	; 0x02
     6e0:	93 83       	std	Z+3, r25	; 0x03

	*Duty_D = (*Duty_D > 0.99) ? 0.99 : ((*Duty_D < -0.99) ? -0.99 : *Duty_D);
     6e2:	ad a1       	ldd	r26, Y+37	; 0x25
     6e4:	be a1       	ldd	r27, Y+38	; 0x26
     6e6:	ed 90       	ld	r14, X+
     6e8:	fd 90       	ld	r15, X+
     6ea:	0d 91       	ld	r16, X+
     6ec:	1c 91       	ld	r17, X
     6ee:	c8 01       	movw	r24, r16
     6f0:	b7 01       	movw	r22, r14
     6f2:	24 ea       	ldi	r18, 0xA4	; 164
     6f4:	30 e7       	ldi	r19, 0x70	; 112
     6f6:	4d e7       	ldi	r20, 0x7D	; 125
     6f8:	5f e3       	ldi	r21, 0x3F	; 63
     6fa:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <__gtsf2>
     6fe:	18 16       	cp	r1, r24
     700:	5c f4       	brge	.+22     	; 0x718 <CalculPWM+0x4ba>
     702:	0f 2e       	mov	r0, r31
     704:	f4 ea       	ldi	r31, 0xA4	; 164
     706:	ef 2e       	mov	r14, r31
     708:	f0 e7       	ldi	r31, 0x70	; 112
     70a:	ff 2e       	mov	r15, r31
     70c:	fd e7       	ldi	r31, 0x7D	; 125
     70e:	0f 2f       	mov	r16, r31
     710:	ff e3       	ldi	r31, 0x3F	; 63
     712:	1f 2f       	mov	r17, r31
     714:	f0 2d       	mov	r31, r0
     716:	14 c0       	rjmp	.+40     	; 0x740 <CalculPWM+0x4e2>
     718:	c8 01       	movw	r24, r16
     71a:	b7 01       	movw	r22, r14
     71c:	24 ea       	ldi	r18, 0xA4	; 164
     71e:	30 e7       	ldi	r19, 0x70	; 112
     720:	4d e7       	ldi	r20, 0x7D	; 125
     722:	5f eb       	ldi	r21, 0xBF	; 191
     724:	0e 94 4c 0c 	call	0x1898	; 0x1898 <__ltsf2>
     728:	88 23       	and	r24, r24
     72a:	54 f4       	brge	.+20     	; 0x740 <CalculPWM+0x4e2>
     72c:	0f 2e       	mov	r0, r31
     72e:	f4 ea       	ldi	r31, 0xA4	; 164
     730:	ef 2e       	mov	r14, r31
     732:	f0 e7       	ldi	r31, 0x70	; 112
     734:	ff 2e       	mov	r15, r31
     736:	fd e7       	ldi	r31, 0x7D	; 125
     738:	0f 2f       	mov	r16, r31
     73a:	ff eb       	ldi	r31, 0xBF	; 191
     73c:	1f 2f       	mov	r17, r31
     73e:	f0 2d       	mov	r31, r0
     740:	ed a1       	ldd	r30, Y+37	; 0x25
     742:	fe a1       	ldd	r31, Y+38	; 0x26
     744:	e0 82       	st	Z, r14
     746:	f1 82       	std	Z+1, r15	; 0x01
     748:	02 83       	std	Z+2, r16	; 0x02
     74a:	13 83       	std	Z+3, r17	; 0x03
	*Duty_G = (*Duty_G > 0.99) ? 0.99 : ((*Duty_G < -0.99) ? -0.99 : *Duty_G);	
     74c:	af 85       	ldd	r26, Y+15	; 0x0f
     74e:	b8 89       	ldd	r27, Y+16	; 0x10
     750:	ed 90       	ld	r14, X+
     752:	fd 90       	ld	r15, X+
     754:	0d 91       	ld	r16, X+
     756:	1c 91       	ld	r17, X
     758:	c8 01       	movw	r24, r16
     75a:	b7 01       	movw	r22, r14
     75c:	24 ea       	ldi	r18, 0xA4	; 164
     75e:	30 e7       	ldi	r19, 0x70	; 112
     760:	4d e7       	ldi	r20, 0x7D	; 125
     762:	5f e3       	ldi	r21, 0x3F	; 63
     764:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <__gtsf2>
     768:	18 16       	cp	r1, r24
     76a:	5c f4       	brge	.+22     	; 0x782 <CalculPWM+0x524>
     76c:	0f 2e       	mov	r0, r31
     76e:	f4 ea       	ldi	r31, 0xA4	; 164
     770:	ef 2e       	mov	r14, r31
     772:	f0 e7       	ldi	r31, 0x70	; 112
     774:	ff 2e       	mov	r15, r31
     776:	fd e7       	ldi	r31, 0x7D	; 125
     778:	0f 2f       	mov	r16, r31
     77a:	ff e3       	ldi	r31, 0x3F	; 63
     77c:	1f 2f       	mov	r17, r31
     77e:	f0 2d       	mov	r31, r0
     780:	14 c0       	rjmp	.+40     	; 0x7aa <CalculPWM+0x54c>
     782:	c8 01       	movw	r24, r16
     784:	b7 01       	movw	r22, r14
     786:	24 ea       	ldi	r18, 0xA4	; 164
     788:	30 e7       	ldi	r19, 0x70	; 112
     78a:	4d e7       	ldi	r20, 0x7D	; 125
     78c:	5f eb       	ldi	r21, 0xBF	; 191
     78e:	0e 94 4c 0c 	call	0x1898	; 0x1898 <__ltsf2>
     792:	88 23       	and	r24, r24
     794:	54 f4       	brge	.+20     	; 0x7aa <CalculPWM+0x54c>
     796:	0f 2e       	mov	r0, r31
     798:	f4 ea       	ldi	r31, 0xA4	; 164
     79a:	ef 2e       	mov	r14, r31
     79c:	f0 e7       	ldi	r31, 0x70	; 112
     79e:	ff 2e       	mov	r15, r31
     7a0:	fd e7       	ldi	r31, 0x7D	; 125
     7a2:	0f 2f       	mov	r16, r31
     7a4:	ff eb       	ldi	r31, 0xBF	; 191
     7a6:	1f 2f       	mov	r17, r31
     7a8:	f0 2d       	mov	r31, r0
     7aa:	ef 85       	ldd	r30, Y+15	; 0x0f
     7ac:	f8 89       	ldd	r31, Y+16	; 0x10
     7ae:	e0 82       	st	Z, r14
     7b0:	f1 82       	std	Z+1, r15	; 0x01
     7b2:	02 83       	std	Z+2, r16	; 0x02
     7b4:	13 83       	std	Z+3, r17	; 0x03
}
     7b6:	60 96       	adiw	r28, 0x10	; 16
     7b8:	0f b6       	in	r0, 0x3f	; 63
     7ba:	f8 94       	cli
     7bc:	de bf       	out	0x3e, r29	; 62
     7be:	0f be       	out	0x3f, r0	; 63
     7c0:	cd bf       	out	0x3d, r28	; 61
     7c2:	cf 91       	pop	r28
     7c4:	df 91       	pop	r29
     7c6:	1f 91       	pop	r17
     7c8:	0f 91       	pop	r16
     7ca:	ff 90       	pop	r15
     7cc:	ef 90       	pop	r14
     7ce:	df 90       	pop	r13
     7d0:	cf 90       	pop	r12
     7d2:	bf 90       	pop	r11
     7d4:	af 90       	pop	r10
     7d6:	9f 90       	pop	r9
     7d8:	8f 90       	pop	r8
     7da:	7f 90       	pop	r7
     7dc:	6f 90       	pop	r6
     7de:	5f 90       	pop	r5
     7e0:	4f 90       	pop	r4
     7e2:	3f 90       	pop	r3
     7e4:	2f 90       	pop	r2
     7e6:	08 95       	ret

000007e8 <PWM_Init>:
	//- Fast PWM
	//PWMA = moteur droit - Interruption de débordement
	//- Niveau haut au débordement
	//- Niveau bas à la comparaison
	// Configuration mode 14 (Fast PWM avec ICR1)
	DDRD =0b11111100; //(1 << PIND4) | (1 << PIND5);  //Pin 4 et 5 configurées en sortie
     7e8:	8c ef       	ldi	r24, 0xFC	; 252
     7ea:	81 bb       	out	0x11, r24	; 17
	TCCR1A =  (1 << COM1A1) | (0 << COM1A0) | (1 << COM1B1)  | (0 << COM1B0)   |  (0 << FOC1A)  |  (0 << FOC1B) |  (1 << WGM11) | (0 << WGM10);
     7ec:	82 ea       	ldi	r24, 0xA2	; 162
     7ee:	8f bd       	out	0x2f, r24	; 47
	TCCR1B =  (0 << ICNC1)  | (0 << ICES1)  | (0 << 5)      |  (1 << WGM13)    |  (1 << WGM12)  | ( 0 << CS12)  |  (1 << CS11)  | (0 << CS10);
     7f0:	8a e1       	ldi	r24, 0x1A	; 26
     7f2:	8e bd       	out	0x2e, r24	; 46
	OCR1A = 0;                                                                                                                                                                                                                                                                  
     7f4:	1b bc       	out	0x2b, r1	; 43
     7f6:	1a bc       	out	0x2a, r1	; 42
	OCR1B = 0;
     7f8:	19 bc       	out	0x29, r1	; 41
     7fa:	18 bc       	out	0x28, r1	; 40
	ICR1 = PWM_TOP;
     7fc:	8f e0       	ldi	r24, 0x0F	; 15
     7fe:	97 e2       	ldi	r25, 0x27	; 39
     800:	97 bd       	out	0x27, r25	; 39
     802:	86 bd       	out	0x26, r24	; 38
	TIMSK = (0 << OCIE2)  | (0 << TOIE2)  | (0 << TICIE1) |   (0 << OCIE1A) | (0 << OCIE1B) |  (1 << TOIE1) | (0 << OCIE0) | (0 << TOIE0);
     804:	84 e0       	ldi	r24, 0x04	; 4
     806:	89 bf       	out	0x39, r24	; 57
	
}
     808:	08 95       	ret

0000080a <__vector_9>:



ISR(TIMER1_OVF_vect){
     80a:	1f 92       	push	r1
     80c:	0f 92       	push	r0
     80e:	0f b6       	in	r0, 0x3f	; 63
     810:	0f 92       	push	r0
     812:	11 24       	eor	r1, r1
     814:	2f 93       	push	r18
     816:	3f 93       	push	r19
     818:	8f 93       	push	r24
     81a:	9f 93       	push	r25
	
	// Déclenché à chaque 5 ms en conformité est avec les paramètres d'initialisation 
	// de la fonction PWM_init().
	flag5ms=1;
     81c:	81 e0       	ldi	r24, 0x01	; 1
     81e:	80 93 ad 01 	sts	0x01AD, r24
	//PORTB ^= 1;
	//compteur1=(compteur1+1)%250;
	
	if (calibration_req == 1)
     822:	20 91 ab 01 	lds	r18, 0x01AB
     826:	21 30       	cpi	r18, 0x01	; 1
     828:	c1 f4       	brne	.+48     	; 0x85a <__vector_9+0x50>
	{
		compteur1++;
     82a:	80 91 a8 01 	lds	r24, 0x01A8
     82e:	90 91 a9 01 	lds	r25, 0x01A9
     832:	01 96       	adiw	r24, 0x01	; 1
     834:	90 93 a9 01 	sts	0x01A9, r25
     838:	80 93 a8 01 	sts	0x01A8, r24
		if (compteur1 >= REGIME_TRANSITOIRE)
     83c:	80 91 a8 01 	lds	r24, 0x01A8
     840:	90 91 a9 01 	lds	r25, 0x01A9
     844:	84 5f       	subi	r24, 0xF4	; 244
     846:	91 40       	sbci	r25, 0x01	; 1
     848:	40 f0       	brcs	.+16     	; 0x85a <__vector_9+0x50>
		{
		    //PORTB ^= 1;
			calibration_req = 0;
     84a:	10 92 ab 01 	sts	0x01AB, r1
			compteur1 = 0;
     84e:	10 92 a9 01 	sts	0x01A9, r1
     852:	10 92 a8 01 	sts	0x01A8, r1
			calibration_rdy = 1;
     856:	20 93 aa 01 	sts	0x01AA, r18
		
	}

	
	
}
     85a:	9f 91       	pop	r25
     85c:	8f 91       	pop	r24
     85e:	3f 91       	pop	r19
     860:	2f 91       	pop	r18
     862:	0f 90       	pop	r0
     864:	0f be       	out	0x3f, r0	; 63
     866:	0f 90       	pop	r0
     868:	1f 90       	pop	r1
     86a:	18 95       	reti

0000086c <ordre_Moteur>:

void ordre_Moteur(Ordre ordreG,Ordre ordreD )
{
	
	
	switch (ordreG)
     86c:	81 30       	cpi	r24, 0x01	; 1
     86e:	51 f0       	breq	.+20     	; 0x884 <ordre_Moteur+0x18>
     870:	81 30       	cpi	r24, 0x01	; 1
     872:	28 f0       	brcs	.+10     	; 0x87e <ordre_Moteur+0x12>
     874:	82 30       	cpi	r24, 0x02	; 2
     876:	41 f0       	breq	.+16     	; 0x888 <ordre_Moteur+0x1c>
     878:	83 30       	cpi	r24, 0x03	; 3
     87a:	61 f4       	brne	.+24     	; 0x894 <ordre_Moteur+0x28>
     87c:	08 c0       	rjmp	.+16     	; 0x88e <ordre_Moteur+0x22>
	{
		case avant:
		{
			PORTD |= (1 << DIR_G1);
     87e:	92 9a       	sbi	0x12, 2	; 18
			PORTD &= ~(1 << DIR_G2);
     880:	93 98       	cbi	0x12, 3	; 18
     882:	08 c0       	rjmp	.+16     	; 0x894 <ordre_Moteur+0x28>
			break;
		}
		case arriere:
		{
			PORTD |= (1 << DIR_G2);
     884:	93 9a       	sbi	0x12, 3	; 18
     886:	01 c0       	rjmp	.+2      	; 0x88a <ordre_Moteur+0x1e>
			PORTD &= ~(1 << DIR_G1);
			break;
		}
		case neutre:
		{
			PORTD &= ~(1 << DIR_G2);
     888:	93 98       	cbi	0x12, 3	; 18
			PORTD &= ~(1 << DIR_G1);
     88a:	92 98       	cbi	0x12, 2	; 18
     88c:	03 c0       	rjmp	.+6      	; 0x894 <ordre_Moteur+0x28>
			break;
		}
		case frein:
		{
			PORTD |= (1 << DIR_G2) | (1 << DIR_G1) ;
     88e:	82 b3       	in	r24, 0x12	; 18
     890:	8c 60       	ori	r24, 0x0C	; 12
     892:	82 bb       	out	0x12, r24	; 18
			break;
		}
	}

	switch (ordreD)
     894:	61 30       	cpi	r22, 0x01	; 1
     896:	51 f0       	breq	.+20     	; 0x8ac <ordre_Moteur+0x40>
     898:	61 30       	cpi	r22, 0x01	; 1
     89a:	28 f0       	brcs	.+10     	; 0x8a6 <ordre_Moteur+0x3a>
     89c:	62 30       	cpi	r22, 0x02	; 2
     89e:	41 f0       	breq	.+16     	; 0x8b0 <ordre_Moteur+0x44>
     8a0:	63 30       	cpi	r22, 0x03	; 3
     8a2:	61 f4       	brne	.+24     	; 0x8bc <ordre_Moteur+0x50>
     8a4:	08 c0       	rjmp	.+16     	; 0x8b6 <ordre_Moteur+0x4a>
	{
		case avant:
		{
			PORTD |= (1 << DIR_D1);
     8a6:	96 9a       	sbi	0x12, 6	; 18
			PORTD &= ~(1 << DIR_D2);
     8a8:	97 98       	cbi	0x12, 7	; 18
     8aa:	08 95       	ret
			break;
		}
		case arriere:
		{
			PORTD |= (1 << DIR_D2);
     8ac:	97 9a       	sbi	0x12, 7	; 18
     8ae:	01 c0       	rjmp	.+2      	; 0x8b2 <ordre_Moteur+0x46>
			PORTD &= ~(1 << DIR_D1);
			break;
		}
		case neutre:
		{
			PORTD &= ~(1 << DIR_D2);
     8b0:	97 98       	cbi	0x12, 7	; 18
			PORTD &= ~(1 << DIR_D1);
     8b2:	96 98       	cbi	0x12, 6	; 18
     8b4:	08 95       	ret
			break;
		}
		case frein:
		{
			PORTD |= (1 << DIR_D2) | (1 << DIR_D1) ;
     8b6:	82 b3       	in	r24, 0x12	; 18
     8b8:	80 6c       	ori	r24, 0xC0	; 192
     8ba:	82 bb       	out	0x12, r24	; 18
     8bc:	08 95       	ret

000008be <PWM_calibrer>:
	
}


void PWM_calibrer(void)
{
     8be:	ef 92       	push	r14
     8c0:	ff 92       	push	r15
     8c2:	0f 93       	push	r16
     8c4:	1f 93       	push	r17
	//Calibration de Vmax+
	OCR1A=0;
     8c6:	1b bc       	out	0x2b, r1	; 43
     8c8:	1a bc       	out	0x2a, r1	; 42
	OCR1B=0;
     8ca:	19 bc       	out	0x29, r1	; 41
     8cc:	18 bc       	out	0x28, r1	; 40
	PORTD |= (1 << DIR_G1) | (0<<DIR_G2) | (1 << DIR_D1)| (0 << DIR_D2); //conf V+
     8ce:	82 b3       	in	r24, 0x12	; 18
     8d0:	84 64       	ori	r24, 0x44	; 68
     8d2:	82 bb       	out	0x12, r24	; 18
	PORTA |= (1 << CAL);
     8d4:	dc 9a       	sbi	0x1b, 4	; 27

	//Lancer aquisition
	compteur1=0;
     8d6:	10 92 a9 01 	sts	0x01A9, r1
     8da:	10 92 a8 01 	sts	0x01A8, r1
	calibration_req=1;
     8de:	81 e0       	ldi	r24, 0x01	; 1
     8e0:	80 93 ab 01 	sts	0x01AB, r24
	calibration_rdy = 0;
     8e4:	10 92 aa 01 	sts	0x01AA, r1
	while (calibration_rdy!=1) // On attend que le moteur soit en régime permanent (2.5s)
     8e8:	80 91 aa 01 	lds	r24, 0x01AA
     8ec:	81 30       	cpi	r24, 0x01	; 1
     8ee:	e1 f7       	brne	.-8      	; 0x8e8 <PWM_calibrer+0x2a>
	;
	PORTB=0x01;
     8f0:	88 bb       	out	0x18, r24	; 24

	calibration_rdy=0;
     8f2:	10 92 aa 01 	sts	0x01AA, r1
	nombre_echantillon[GAUCHE]=0;
     8f6:	10 92 b2 01 	sts	0x01B2, r1
	nombre_echantillon[DROIT]=0;
     8fa:	10 92 b3 01 	sts	0x01B3, r1
	somme_vitesse[GAUCHE]=0;
     8fe:	10 92 af 01 	sts	0x01AF, r1
     902:	10 92 ae 01 	sts	0x01AE, r1
	somme_vitesse[DROIT]=0;
     906:	10 92 b1 01 	sts	0x01B1, r1
     90a:	10 92 b0 01 	sts	0x01B0, r1
	while(nombre_echantillon[GAUCHE]<ECHANTILLON_INIT && nombre_echantillon[DROIT]<ECHANTILLON_INIT)
     90e:	80 91 b2 01 	lds	r24, 0x01B2
     912:	89 31       	cpi	r24, 0x19	; 25
     914:	20 f4       	brcc	.+8      	; 0x91e <PWM_calibrer+0x60>
     916:	80 91 b3 01 	lds	r24, 0x01B3
     91a:	89 31       	cpi	r24, 0x19	; 25
     91c:	c0 f3       	brcs	.-16     	; 0x90e <PWM_calibrer+0x50>
	;//On attend que l'ADC est recolté assez d'échantillons
	
	moyenne_Moteur(vMaxPlus);
     91e:	8c ec       	ldi	r24, 0xCC	; 204
     920:	91 e0       	ldi	r25, 0x01	; 1
     922:	0e 94 bb 00 	call	0x176	; 0x176 <moyenne_Moteur>
	sprintf(debugChaine, "%d", vMaxPlus[GAUCHE]);
     926:	00 d0       	rcall	.+0      	; 0x928 <PWM_calibrer+0x6a>
     928:	00 d0       	rcall	.+0      	; 0x92a <PWM_calibrer+0x6c>
     92a:	00 d0       	rcall	.+0      	; 0x92c <PWM_calibrer+0x6e>
     92c:	ed b7       	in	r30, 0x3d	; 61
     92e:	fe b7       	in	r31, 0x3e	; 62
     930:	31 96       	adiw	r30, 0x01	; 1
     932:	8e ee       	ldi	r24, 0xEE	; 238
     934:	91 e0       	ldi	r25, 0x01	; 1
     936:	ad b7       	in	r26, 0x3d	; 61
     938:	be b7       	in	r27, 0x3e	; 62
     93a:	12 96       	adiw	r26, 0x02	; 2
     93c:	9c 93       	st	X, r25
     93e:	8e 93       	st	-X, r24
     940:	11 97       	sbiw	r26, 0x01	; 1
     942:	80 e6       	ldi	r24, 0x60	; 96
     944:	90 e0       	ldi	r25, 0x00	; 0
     946:	93 83       	std	Z+3, r25	; 0x03
     948:	82 83       	std	Z+2, r24	; 0x02
     94a:	80 91 cc 01 	lds	r24, 0x01CC
     94e:	90 91 cd 01 	lds	r25, 0x01CD
     952:	95 83       	std	Z+5, r25	; 0x05
     954:	84 83       	std	Z+4, r24	; 0x04
     956:	0e 94 03 10 	call	0x2006	; 0x2006 <sprintf>
	debug=1;
     95a:	91 e0       	ldi	r25, 0x01	; 1
     95c:	90 93 ac 01 	sts	0x01AC, r25
	UCSRB|=(1<<UDRIE);
     960:	55 9a       	sbi	0x0a, 5	; 10
	UCSRB|=(1<<UDRIE);
	*/
	
	
	//Calibration de Vzero+
	PORTD |= (1 << DIR_G1)  | (1 << DIR_D1); //conf V+
     962:	82 b3       	in	r24, 0x12	; 18
     964:	84 64       	ori	r24, 0x44	; 68
     966:	82 bb       	out	0x12, r24	; 18
	PORTD &=   ~(1 << DIR_G2) | ~(1 << PWM_G) | ~(1 << PWM_D) |  ~(1 << DIR_D2); //conf V+
     968:	82 b3       	in	r24, 0x12	; 18
     96a:	82 bb       	out	0x12, r24	; 18
	PORTA &= ~(1 << CAL);
     96c:	dc 98       	cbi	0x1b, 4	; 27
	calibration_req = 1;
     96e:	90 93 ab 01 	sts	0x01AB, r25
	calibration_rdy =0;
     972:	10 92 aa 01 	sts	0x01AA, r1
     976:	8d b7       	in	r24, 0x3d	; 61
     978:	9e b7       	in	r25, 0x3e	; 62
     97a:	06 96       	adiw	r24, 0x06	; 6
     97c:	0f b6       	in	r0, 0x3f	; 63
     97e:	f8 94       	cli
     980:	9e bf       	out	0x3e, r25	; 62
     982:	0f be       	out	0x3f, r0	; 63
     984:	8d bf       	out	0x3d, r24	; 61
	while (calibration_rdy!=1)
     986:	80 91 aa 01 	lds	r24, 0x01AA
     98a:	81 30       	cpi	r24, 0x01	; 1
     98c:	e1 f7       	brne	.-8      	; 0x986 <PWM_calibrer+0xc8>
	;
	nombre_echantillon[GAUCHE]=0;
     98e:	10 92 b2 01 	sts	0x01B2, r1
	nombre_echantillon[DROIT]=0;
     992:	10 92 b3 01 	sts	0x01B3, r1
	somme_vitesse[GAUCHE]=0;
     996:	10 92 af 01 	sts	0x01AF, r1
     99a:	10 92 ae 01 	sts	0x01AE, r1
	somme_vitesse[DROIT]=0;
     99e:	10 92 b1 01 	sts	0x01B1, r1
     9a2:	10 92 b0 01 	sts	0x01B0, r1
	calibration_rdy=0;
     9a6:	10 92 aa 01 	sts	0x01AA, r1
	while(nombre_echantillon[GAUCHE]<ECHANTILLON_INIT && nombre_echantillon[DROIT]<ECHANTILLON_INIT)
     9aa:	80 91 b2 01 	lds	r24, 0x01B2
     9ae:	89 31       	cpi	r24, 0x19	; 25
     9b0:	20 f4       	brcc	.+8      	; 0x9ba <PWM_calibrer+0xfc>
     9b2:	80 91 b3 01 	lds	r24, 0x01B3
     9b6:	89 31       	cpi	r24, 0x19	; 25
     9b8:	c0 f3       	brcs	.-16     	; 0x9aa <PWM_calibrer+0xec>
	;//On attend que l'ADC est recolté assez d'échantillons
	moyenne_Moteur(vZeroPlus);
     9ba:	84 e6       	ldi	r24, 0x64	; 100
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	0e 94 bb 00 	call	0x176	; 0x176 <moyenne_Moteur>
	PORTB^=0b00000010;
     9c2:	88 b3       	in	r24, 0x18	; 24
     9c4:	92 e0       	ldi	r25, 0x02	; 2
     9c6:	89 27       	eor	r24, r25
     9c8:	88 bb       	out	0x18, r24	; 24
	sprintf(debugChaine, "%d", vZeroPlus[GAUCHE]);
	debug=1;
	UCSRB|=(1<<UDRIE);
	*/
	//Calibration de Vmax-
	PORTD |= (1 << DIR_G2) | (1 << DIR_D2); //conf V-
     9ca:	82 b3       	in	r24, 0x12	; 18
     9cc:	88 68       	ori	r24, 0x88	; 136
     9ce:	82 bb       	out	0x12, r24	; 18
	PORTD &= ~(1 << DIR_G1) |  ~(1 << PWM_G) | ~(1 << PWM_D) | ~(1 << DIR_D1); //conf V-
     9d0:	82 b3       	in	r24, 0x12	; 18
     9d2:	82 bb       	out	0x12, r24	; 18
	PORTA |= (1 << CAL);
     9d4:	dc 9a       	sbi	0x1b, 4	; 27
	calibration_req = 1;
     9d6:	81 e0       	ldi	r24, 0x01	; 1
     9d8:	80 93 ab 01 	sts	0x01AB, r24
	calibration_rdy =0;
     9dc:	10 92 aa 01 	sts	0x01AA, r1
	while (calibration_rdy!=1)
     9e0:	80 91 aa 01 	lds	r24, 0x01AA
     9e4:	81 30       	cpi	r24, 0x01	; 1
     9e6:	e1 f7       	brne	.-8      	; 0x9e0 <PWM_calibrer+0x122>
	;
	nombre_echantillon[GAUCHE]=0;
     9e8:	10 92 b2 01 	sts	0x01B2, r1
	nombre_echantillon[DROIT]=0;
     9ec:	10 92 b3 01 	sts	0x01B3, r1
	somme_vitesse[GAUCHE]=0;
     9f0:	10 92 af 01 	sts	0x01AF, r1
     9f4:	10 92 ae 01 	sts	0x01AE, r1
	somme_vitesse[DROIT]=0;
     9f8:	10 92 b1 01 	sts	0x01B1, r1
     9fc:	10 92 b0 01 	sts	0x01B0, r1
	calibration_rdy=0;
     a00:	10 92 aa 01 	sts	0x01AA, r1
	while(nombre_echantillon[GAUCHE]<ECHANTILLON_INIT && nombre_echantillon[DROIT]<ECHANTILLON_INIT)
     a04:	80 91 b2 01 	lds	r24, 0x01B2
     a08:	89 31       	cpi	r24, 0x19	; 25
     a0a:	20 f4       	brcc	.+8      	; 0xa14 <PWM_calibrer+0x156>
     a0c:	80 91 b3 01 	lds	r24, 0x01B3
     a10:	89 31       	cpi	r24, 0x19	; 25
     a12:	c0 f3       	brcs	.-16     	; 0xa04 <PWM_calibrer+0x146>
	;//On attend que l'ADC est recolté assez d'échantillons
	moyenne_Moteur(vMaxMoins);
     a14:	80 ed       	ldi	r24, 0xD0	; 208
     a16:	91 e0       	ldi	r25, 0x01	; 1
     a18:	0e 94 bb 00 	call	0x176	; 0x176 <moyenne_Moteur>
	PORTB^=0b00000100;
     a1c:	88 b3       	in	r24, 0x18	; 24
     a1e:	94 e0       	ldi	r25, 0x04	; 4
     a20:	89 27       	eor	r24, r25
     a22:	88 bb       	out	0x18, r24	; 24
	sprintf(debugChaine, "%d", vMaxMoins[GAUCHE]);
	debug=1;
	UCSRB|=(1<<UDRIE);
	*/
	//Calibration de Vzero-
	PORTD |= (1 << DIR_G2) |  (1 << DIR_D2); //conf V+
     a24:	82 b3       	in	r24, 0x12	; 18
     a26:	88 68       	ori	r24, 0x88	; 136
     a28:	82 bb       	out	0x12, r24	; 18
	PORTD &= ~(1 << DIR_G1) |  ~(1 << PWM_G) | ~(1 << PWM_D) | ~(1 << DIR_D1); //conf V+
     a2a:	82 b3       	in	r24, 0x12	; 18
     a2c:	82 bb       	out	0x12, r24	; 18
	PORTA &= ~(1 << CAL);
     a2e:	dc 98       	cbi	0x1b, 4	; 27
	calibration_req = 1;
     a30:	81 e0       	ldi	r24, 0x01	; 1
     a32:	80 93 ab 01 	sts	0x01AB, r24
	calibration_rdy =0;
     a36:	10 92 aa 01 	sts	0x01AA, r1
	while (calibration_rdy!=1)
     a3a:	80 91 aa 01 	lds	r24, 0x01AA
     a3e:	81 30       	cpi	r24, 0x01	; 1
     a40:	e1 f7       	brne	.-8      	; 0xa3a <PWM_calibrer+0x17c>
	;
	nombre_echantillon[GAUCHE]=0;
     a42:	10 92 b2 01 	sts	0x01B2, r1
	nombre_echantillon[DROIT]=0;
     a46:	10 92 b3 01 	sts	0x01B3, r1
	somme_vitesse[GAUCHE]=0;
     a4a:	10 92 af 01 	sts	0x01AF, r1
     a4e:	10 92 ae 01 	sts	0x01AE, r1
	somme_vitesse[DROIT]=0;
     a52:	10 92 b1 01 	sts	0x01B1, r1
     a56:	10 92 b0 01 	sts	0x01B0, r1
	calibration_rdy=0;
     a5a:	10 92 aa 01 	sts	0x01AA, r1
	while(nombre_echantillon[GAUCHE]<ECHANTILLON_INIT && nombre_echantillon[DROIT]<ECHANTILLON_INIT)
     a5e:	80 91 b2 01 	lds	r24, 0x01B2
     a62:	89 31       	cpi	r24, 0x19	; 25
     a64:	20 f4       	brcc	.+8      	; 0xa6e <PWM_calibrer+0x1b0>
     a66:	80 91 b3 01 	lds	r24, 0x01B3
     a6a:	89 31       	cpi	r24, 0x19	; 25
     a6c:	c0 f3       	brcs	.-16     	; 0xa5e <PWM_calibrer+0x1a0>
	; //On attend que l'ADC est recolté assez d'échantillons
	moyenne_Moteur(vZeroMoins);
     a6e:	88 e6       	ldi	r24, 0x68	; 104
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	0e 94 bb 00 	call	0x176	; 0x176 <moyenne_Moteur>
	PORTB^=0b00001000;
     a76:	88 b3       	in	r24, 0x18	; 24
     a78:	98 e0       	ldi	r25, 0x08	; 8
     a7a:	89 27       	eor	r24, r25
     a7c:	88 bb       	out	0x18, r24	; 24
	sprintf(debugChaine, "%d", vZeroMoins[GAUCHE]);
	debug=1;
	UCSRB|=(1<<UDRIE);
	*/
	//Une fois tous nos échantillons récupérés, on calcul les termes des fonctions de correction (y=a.x+b)
	aPlus[GAUCHE] = (float)(((float)1023) / ((float)vMaxPlus[GAUCHE] - (float)vZeroPlus[GAUCHE]));
     a7e:	60 91 cc 01 	lds	r22, 0x01CC
     a82:	70 91 cd 01 	lds	r23, 0x01CD
     a86:	80 e0       	ldi	r24, 0x00	; 0
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__floatunsisf>
     a8e:	7b 01       	movw	r14, r22
     a90:	8c 01       	movw	r16, r24
     a92:	60 91 64 00 	lds	r22, 0x0064
     a96:	70 91 65 00 	lds	r23, 0x0065
     a9a:	80 e0       	ldi	r24, 0x00	; 0
     a9c:	90 e0       	ldi	r25, 0x00	; 0
     a9e:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__floatunsisf>
     aa2:	9b 01       	movw	r18, r22
     aa4:	ac 01       	movw	r20, r24
     aa6:	c8 01       	movw	r24, r16
     aa8:	b7 01       	movw	r22, r14
     aaa:	0e 94 b8 09 	call	0x1370	; 0x1370 <__subsf3>
     aae:	9b 01       	movw	r18, r22
     ab0:	ac 01       	movw	r20, r24
     ab2:	60 e0       	ldi	r22, 0x00	; 0
     ab4:	70 ec       	ldi	r23, 0xC0	; 192
     ab6:	8f e7       	ldi	r24, 0x7F	; 127
     ab8:	94 e4       	ldi	r25, 0x44	; 68
     aba:	0e 94 10 0b 	call	0x1620	; 0x1620 <__divsf3>
     abe:	60 93 6c 00 	sts	0x006C, r22
     ac2:	70 93 6d 00 	sts	0x006D, r23
     ac6:	80 93 6e 00 	sts	0x006E, r24
     aca:	90 93 6f 00 	sts	0x006F, r25
	aPlus[DROIT]  = (float)(((float)1023) / ((float)vMaxPlus[DROIT] - (float)vZeroPlus[DROIT]));
     ace:	60 91 ce 01 	lds	r22, 0x01CE
     ad2:	70 91 cf 01 	lds	r23, 0x01CF
     ad6:	80 e0       	ldi	r24, 0x00	; 0
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__floatunsisf>
     ade:	7b 01       	movw	r14, r22
     ae0:	8c 01       	movw	r16, r24
     ae2:	60 91 66 00 	lds	r22, 0x0066
     ae6:	70 91 67 00 	lds	r23, 0x0067
     aea:	80 e0       	ldi	r24, 0x00	; 0
     aec:	90 e0       	ldi	r25, 0x00	; 0
     aee:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__floatunsisf>
     af2:	9b 01       	movw	r18, r22
     af4:	ac 01       	movw	r20, r24
     af6:	c8 01       	movw	r24, r16
     af8:	b7 01       	movw	r22, r14
     afa:	0e 94 b8 09 	call	0x1370	; 0x1370 <__subsf3>
     afe:	9b 01       	movw	r18, r22
     b00:	ac 01       	movw	r20, r24
     b02:	60 e0       	ldi	r22, 0x00	; 0
     b04:	70 ec       	ldi	r23, 0xC0	; 192
     b06:	8f e7       	ldi	r24, 0x7F	; 127
     b08:	94 e4       	ldi	r25, 0x44	; 68
     b0a:	0e 94 10 0b 	call	0x1620	; 0x1620 <__divsf3>
     b0e:	60 93 70 00 	sts	0x0070, r22
     b12:	70 93 71 00 	sts	0x0071, r23
     b16:	80 93 72 00 	sts	0x0072, r24
     b1a:	90 93 73 00 	sts	0x0073, r25
	//bPlus[GAUCHE] = (float)(-aPlus[GAUCHE]*vZeroPlus[GAUCHE]/1024); //On divise ici le coef b par 1024 afin d'éviter une division de float
	//bPlus[DROIT]  = (float)(-aPlus[DROIT]*vZeroPlus[DROIT]/1024); //

	aMoins[GAUCHE]= (float)(((float)1023) / ((float)vMaxMoins[GAUCHE] - (float)vZeroMoins[GAUCHE]));
     b1e:	60 91 d0 01 	lds	r22, 0x01D0
     b22:	70 91 d1 01 	lds	r23, 0x01D1
     b26:	80 e0       	ldi	r24, 0x00	; 0
     b28:	90 e0       	ldi	r25, 0x00	; 0
     b2a:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__floatunsisf>
     b2e:	7b 01       	movw	r14, r22
     b30:	8c 01       	movw	r16, r24
     b32:	60 91 68 00 	lds	r22, 0x0068
     b36:	70 91 69 00 	lds	r23, 0x0069
     b3a:	80 e0       	ldi	r24, 0x00	; 0
     b3c:	90 e0       	ldi	r25, 0x00	; 0
     b3e:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__floatunsisf>
     b42:	9b 01       	movw	r18, r22
     b44:	ac 01       	movw	r20, r24
     b46:	c8 01       	movw	r24, r16
     b48:	b7 01       	movw	r22, r14
     b4a:	0e 94 b8 09 	call	0x1370	; 0x1370 <__subsf3>
     b4e:	9b 01       	movw	r18, r22
     b50:	ac 01       	movw	r20, r24
     b52:	60 e0       	ldi	r22, 0x00	; 0
     b54:	70 ec       	ldi	r23, 0xC0	; 192
     b56:	8f e7       	ldi	r24, 0x7F	; 127
     b58:	94 e4       	ldi	r25, 0x44	; 68
     b5a:	0e 94 10 0b 	call	0x1620	; 0x1620 <__divsf3>
     b5e:	60 93 74 00 	sts	0x0074, r22
     b62:	70 93 75 00 	sts	0x0075, r23
     b66:	80 93 76 00 	sts	0x0076, r24
     b6a:	90 93 77 00 	sts	0x0077, r25
	aMoins[DROIT] = (float)(((float)1023) / ((float)vMaxMoins[DROIT] - (float)vZeroMoins[DROIT]));
     b6e:	60 91 d2 01 	lds	r22, 0x01D2
     b72:	70 91 d3 01 	lds	r23, 0x01D3
     b76:	80 e0       	ldi	r24, 0x00	; 0
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__floatunsisf>
     b7e:	7b 01       	movw	r14, r22
     b80:	8c 01       	movw	r16, r24
     b82:	60 91 6a 00 	lds	r22, 0x006A
     b86:	70 91 6b 00 	lds	r23, 0x006B
     b8a:	80 e0       	ldi	r24, 0x00	; 0
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__floatunsisf>
     b92:	9b 01       	movw	r18, r22
     b94:	ac 01       	movw	r20, r24
     b96:	c8 01       	movw	r24, r16
     b98:	b7 01       	movw	r22, r14
     b9a:	0e 94 b8 09 	call	0x1370	; 0x1370 <__subsf3>
     b9e:	9b 01       	movw	r18, r22
     ba0:	ac 01       	movw	r20, r24
     ba2:	60 e0       	ldi	r22, 0x00	; 0
     ba4:	70 ec       	ldi	r23, 0xC0	; 192
     ba6:	8f e7       	ldi	r24, 0x7F	; 127
     ba8:	94 e4       	ldi	r25, 0x44	; 68
     baa:	0e 94 10 0b 	call	0x1620	; 0x1620 <__divsf3>
     bae:	60 93 78 00 	sts	0x0078, r22
     bb2:	70 93 79 00 	sts	0x0079, r23
     bb6:	80 93 7a 00 	sts	0x007A, r24
     bba:	90 93 7b 00 	sts	0x007B, r25
	_delay_ms(100);
	*/
	//DDRA=0;
	

}
     bbe:	1f 91       	pop	r17
     bc0:	0f 91       	pop	r16
     bc2:	ff 90       	pop	r15
     bc4:	ef 90       	pop	r14
     bc6:	08 95       	ret

00000bc8 <main>:
//volatile int8_t calibration_rdy=0;
//volatile uint8_t calibration_req=1;
Ordre ordreG;
Ordre ordreD;
int main(void)
{
     bc8:	5f 92       	push	r5
     bca:	6f 92       	push	r6
     bcc:	7f 92       	push	r7
     bce:	8f 92       	push	r8
     bd0:	9f 92       	push	r9
     bd2:	af 92       	push	r10
     bd4:	bf 92       	push	r11
     bd6:	cf 92       	push	r12
     bd8:	df 92       	push	r13
     bda:	ef 92       	push	r14
     bdc:	ff 92       	push	r15
     bde:	0f 93       	push	r16
     be0:	1f 93       	push	r17
     be2:	cf 93       	push	r28
     be4:	df 93       	push	r29
	sei();   
     be6:	78 94       	sei
	DDRB=0xFF;
     be8:	8f ef       	ldi	r24, 0xFF	; 255
     bea:	87 bb       	out	0x17, r24	; 23
	PORTB=0x00;
     bec:	18 ba       	out	0x18, r1	; 24
	USART_Init();
     bee:	0e 94 9b 07 	call	0xf36	; 0xf36 <USART_Init>
	
	ADC_Init();
     bf2:	0e 94 49 00 	call	0x92	; 0x92 <ADC_Init>
	PWM_Init();
     bf6:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <PWM_Init>
	PWM_calibrer();
     bfa:	0e 94 5f 04 	call	0x8be	; 0x8be <PWM_calibrer>
	PORTB^=0b00010000;
     bfe:	88 b3       	in	r24, 0x18	; 24
     c00:	90 e1       	ldi	r25, 0x10	; 16
     c02:	89 27       	eor	r24, r25
     c04:	88 bb       	out	0x18, r24	; 24
	flag5ms=0;
     c06:	10 92 ad 01 	sts	0x01AD, r1
	PORTD=0b01100100;
     c0a:	84 e6       	ldi	r24, 0x64	; 100
     c0c:	82 bb       	out	0x12, r24	; 18
	//PORTD=0b10101000;
	//PORTA|=0b00001000;
	//PIND=0b01100100;
	OCR1A=2000;
     c0e:	80 ed       	ldi	r24, 0xD0	; 208
     c10:	97 e0       	ldi	r25, 0x07	; 7
     c12:	9b bd       	out	0x2b, r25	; 43
     c14:	8a bd       	out	0x2a, r24	; 42
	OCR1B=2000;
     c16:	99 bd       	out	0x29, r25	; 41
     c18:	88 bd       	out	0x28, r24	; 40
		//Reception de la commande

		if (etat == 0)
		{

			etat = 1;
     c1a:	77 24       	eor	r7, r7
     c1c:	73 94       	inc	r7
			}
			

			//Calcul du duty cycle 

			CalculPWM(vitesseCommande, angleCommande, vitesseMoteurCorr[GAUCHE], vitesseMoteurCorr[DROIT], &dutyCycle[GAUCHE], &dutyCycle[DROIT]);
     c1e:	c8 ec       	ldi	r28, 0xC8	; 200
     c20:	d1 e0       	ldi	r29, 0x01	; 1
				ordreD = avant;
				OCR1A = (uint16_t)((float)ICR1 * dutyCycle[GAUCHE]);
			}
			else
			{
				ordreD = neutre;
     c22:	a2 e0       	ldi	r26, 0x02	; 2
     c24:	5a 2e       	mov	r5, r26
			}
		
			if (dutyCycle[DROIT] == 0.0)
			{
				OCR1A = 0;
				ordreD = frein;
     c26:	f3 e0       	ldi	r31, 0x03	; 3
     c28:	6f 2e       	mov	r6, r31
	while(1)
    {
	
		//Reception de la commande

		if (etat == 0)
     c2a:	80 91 63 00 	lds	r24, 0x0063
     c2e:	88 23       	and	r24, r24
     c30:	a1 f5       	brne	.+104    	; 0xc9a <main+0xd2>
		{

			etat = 1;
     c32:	70 92 63 00 	sts	0x0063, r7
			vitesseCommande = (vitesseCommande - (float)100)*0.01;
     c36:	60 91 e4 01 	lds	r22, 0x01E4
     c3a:	70 91 e5 01 	lds	r23, 0x01E5
     c3e:	80 91 e6 01 	lds	r24, 0x01E6
     c42:	90 91 e7 01 	lds	r25, 0x01E7
     c46:	20 e0       	ldi	r18, 0x00	; 0
     c48:	30 e0       	ldi	r19, 0x00	; 0
     c4a:	48 ec       	ldi	r20, 0xC8	; 200
     c4c:	52 e4       	ldi	r21, 0x42	; 66
     c4e:	0e 94 b8 09 	call	0x1370	; 0x1370 <__subsf3>
     c52:	2a e0       	ldi	r18, 0x0A	; 10
     c54:	37 ed       	ldi	r19, 0xD7	; 215
     c56:	43 e2       	ldi	r20, 0x23	; 35
     c58:	5c e3       	ldi	r21, 0x3C	; 60
     c5a:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     c5e:	60 93 e4 01 	sts	0x01E4, r22
     c62:	70 93 e5 01 	sts	0x01E5, r23
     c66:	80 93 e6 01 	sts	0x01E6, r24
     c6a:	90 93 e7 01 	sts	0x01E7, r25
			angleCommande *= CST_ROT;
     c6e:	60 91 e8 01 	lds	r22, 0x01E8
     c72:	70 91 e9 01 	lds	r23, 0x01E9
     c76:	80 91 ea 01 	lds	r24, 0x01EA
     c7a:	90 91 eb 01 	lds	r25, 0x01EB
     c7e:	25 e3       	ldi	r18, 0x35	; 53
     c80:	3a ef       	ldi	r19, 0xFA	; 250
     c82:	4e e0       	ldi	r20, 0x0E	; 14
     c84:	5d e3       	ldi	r21, 0x3D	; 61
     c86:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     c8a:	60 93 e8 01 	sts	0x01E8, r22
     c8e:	70 93 e9 01 	sts	0x01E9, r23
     c92:	80 93 ea 01 	sts	0x01EA, r24
     c96:	90 93 eb 01 	sts	0x01EB, r25
		}


	
		if (flag5ms) //Toutes les 5ms on déclanche le calcul du PWM
     c9a:	80 91 ad 01 	lds	r24, 0x01AD
     c9e:	88 23       	and	r24, r24
     ca0:	21 f2       	breq	.-120    	; 0xc2a <main+0x62>
		{
			//Test de diode clignotant toute les 500ms (à supprimer)
			test1++;
     ca2:	80 91 ec 01 	lds	r24, 0x01EC
     ca6:	8f 5f       	subi	r24, 0xFF	; 255
     ca8:	80 93 ec 01 	sts	0x01EC, r24
			if (test1>100)
     cac:	85 36       	cpi	r24, 0x65	; 101
     cae:	28 f0       	brcs	.+10     	; 0xcba <main+0xf2>
			{
				test1=0;
     cb0:	10 92 ec 01 	sts	0x01EC, r1
				PORTB^=0b10000000;
     cb4:	88 b3       	in	r24, 0x18	; 24
     cb6:	80 58       	subi	r24, 0x80	; 128
     cb8:	88 bb       	out	0x18, r24	; 24
			}
			flag5ms=0;
     cba:	10 92 ad 01 	sts	0x01AD, r1
			
			// On calcul la moyenne de la vitesse non corrigé des 5ms prec
			moyenne_Moteur(vitesseMoteur); //Attention vitesse moteur est encore une valeure entre 0 et 1023		
     cbe:	8c eb       	ldi	r24, 0xBC	; 188
     cc0:	91 e0       	ldi	r25, 0x01	; 1
     cc2:	0e 94 bb 00 	call	0x176	; 0x176 <moyenne_Moteur>
			
			//Moteur gauche
			if (vitesseMoteur[GAUCHE] > 0.0)//Si le moteur tourne en marche avant
     cc6:	e0 90 bc 01 	lds	r14, 0x01BC
     cca:	f0 90 bd 01 	lds	r15, 0x01BD
     cce:	00 91 be 01 	lds	r16, 0x01BE
     cd2:	10 91 bf 01 	lds	r17, 0x01BF
     cd6:	c8 01       	movw	r24, r16
     cd8:	b7 01       	movw	r22, r14
     cda:	20 e0       	ldi	r18, 0x00	; 0
     cdc:	30 e0       	ldi	r19, 0x00	; 0
     cde:	40 e0       	ldi	r20, 0x00	; 0
     ce0:	50 e0       	ldi	r21, 0x00	; 0
     ce2:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <__gtsf2>
     ce6:	18 16       	cp	r1, r24
     ce8:	5c f4       	brge	.+22     	; 0xd00 <main+0x138>
			{
				vitesseMoteurCorr[GAUCHE]=(vitesseMoteur[GAUCHE]*aPlus[GAUCHE])/1024.0;		
     cea:	c8 01       	movw	r24, r16
     cec:	b7 01       	movw	r22, r14
     cee:	20 91 6c 00 	lds	r18, 0x006C
     cf2:	30 91 6d 00 	lds	r19, 0x006D
     cf6:	40 91 6e 00 	lds	r20, 0x006E
     cfa:	50 91 6f 00 	lds	r21, 0x006F
     cfe:	0a c0       	rjmp	.+20     	; 0xd14 <main+0x14c>
			}
			else
			{
				vitesseMoteurCorr[GAUCHE]=(vitesseMoteur[GAUCHE]*aMoins[GAUCHE])/1024.0;
     d00:	c8 01       	movw	r24, r16
     d02:	b7 01       	movw	r22, r14
     d04:	20 91 74 00 	lds	r18, 0x0074
     d08:	30 91 75 00 	lds	r19, 0x0075
     d0c:	40 91 76 00 	lds	r20, 0x0076
     d10:	50 91 77 00 	lds	r21, 0x0077
     d14:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     d18:	20 e0       	ldi	r18, 0x00	; 0
     d1a:	30 e0       	ldi	r19, 0x00	; 0
     d1c:	40 e8       	ldi	r20, 0x80	; 128
     d1e:	5a e3       	ldi	r21, 0x3A	; 58
     d20:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     d24:	60 93 b4 01 	sts	0x01B4, r22
     d28:	70 93 b5 01 	sts	0x01B5, r23
     d2c:	80 93 b6 01 	sts	0x01B6, r24
     d30:	90 93 b7 01 	sts	0x01B7, r25
			}			
			
			//Moteur Droit
			if (vitesseMoteur[DROIT] > 0.0)//Si le moteur tourne en marche avant
     d34:	e0 90 c0 01 	lds	r14, 0x01C0
     d38:	f0 90 c1 01 	lds	r15, 0x01C1
     d3c:	00 91 c2 01 	lds	r16, 0x01C2
     d40:	10 91 c3 01 	lds	r17, 0x01C3
     d44:	c8 01       	movw	r24, r16
     d46:	b7 01       	movw	r22, r14
     d48:	20 e0       	ldi	r18, 0x00	; 0
     d4a:	30 e0       	ldi	r19, 0x00	; 0
     d4c:	40 e0       	ldi	r20, 0x00	; 0
     d4e:	50 e0       	ldi	r21, 0x00	; 0
     d50:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <__gtsf2>
     d54:	18 16       	cp	r1, r24
     d56:	5c f4       	brge	.+22     	; 0xd6e <main+0x1a6>
			{
				vitesseMoteurCorr[DROIT]=(vitesseMoteur[DROIT]*aPlus[DROIT])/1024.0;
     d58:	c8 01       	movw	r24, r16
     d5a:	b7 01       	movw	r22, r14
     d5c:	20 91 70 00 	lds	r18, 0x0070
     d60:	30 91 71 00 	lds	r19, 0x0071
     d64:	40 91 72 00 	lds	r20, 0x0072
     d68:	50 91 73 00 	lds	r21, 0x0073
     d6c:	0a c0       	rjmp	.+20     	; 0xd82 <main+0x1ba>
			}
			else
			{
				vitesseMoteurCorr[DROIT]=(vitesseMoteur[DROIT]*aMoins[DROIT])/1024.0;
     d6e:	c8 01       	movw	r24, r16
     d70:	b7 01       	movw	r22, r14
     d72:	20 91 78 00 	lds	r18, 0x0078
     d76:	30 91 79 00 	lds	r19, 0x0079
     d7a:	40 91 7a 00 	lds	r20, 0x007A
     d7e:	50 91 7b 00 	lds	r21, 0x007B
     d82:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     d86:	20 e0       	ldi	r18, 0x00	; 0
     d88:	30 e0       	ldi	r19, 0x00	; 0
     d8a:	40 e8       	ldi	r20, 0x80	; 128
     d8c:	5a e3       	ldi	r21, 0x3A	; 58
     d8e:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     d92:	60 93 b8 01 	sts	0x01B8, r22
     d96:	70 93 b9 01 	sts	0x01B9, r23
     d9a:	80 93 ba 01 	sts	0x01BA, r24
     d9e:	90 93 bb 01 	sts	0x01BB, r25
			}
			

			//Calcul du duty cycle 

			CalculPWM(vitesseCommande, angleCommande, vitesseMoteurCorr[GAUCHE], vitesseMoteurCorr[DROIT], &dutyCycle[GAUCHE], &dutyCycle[DROIT]);
     da2:	60 91 e4 01 	lds	r22, 0x01E4
     da6:	70 91 e5 01 	lds	r23, 0x01E5
     daa:	80 91 e6 01 	lds	r24, 0x01E6
     dae:	90 91 e7 01 	lds	r25, 0x01E7
     db2:	20 91 e8 01 	lds	r18, 0x01E8
     db6:	30 91 e9 01 	lds	r19, 0x01E9
     dba:	40 91 ea 01 	lds	r20, 0x01EA
     dbe:	50 91 eb 01 	lds	r21, 0x01EB
     dc2:	00 d0       	rcall	.+0      	; 0xdc4 <main+0x1fc>
     dc4:	e0 90 b4 01 	lds	r14, 0x01B4
     dc8:	f0 90 b5 01 	lds	r15, 0x01B5
     dcc:	00 91 b6 01 	lds	r16, 0x01B6
     dd0:	10 91 b7 01 	lds	r17, 0x01B7
     dd4:	a0 90 b8 01 	lds	r10, 0x01B8
     dd8:	b0 90 b9 01 	lds	r11, 0x01B9
     ddc:	c0 90 ba 01 	lds	r12, 0x01BA
     de0:	d0 90 bb 01 	lds	r13, 0x01BB
     de4:	ed b7       	in	r30, 0x3d	; 61
     de6:	fe b7       	in	r31, 0x3e	; 62
     de8:	d2 83       	std	Z+2, r29	; 0x02
     dea:	c1 83       	std	Z+1, r28	; 0x01
     dec:	ec ef       	ldi	r30, 0xFC	; 252
     dee:	8e 2e       	mov	r8, r30
     df0:	ef ef       	ldi	r30, 0xFF	; 255
     df2:	9e 2e       	mov	r9, r30
     df4:	8c 0e       	add	r8, r28
     df6:	9d 1e       	adc	r9, r29
     df8:	0e 94 2f 01 	call	0x25e	; 0x25e <CalculPWM>

			if (dutyCycle[GAUCHE] == 0.0)
     dfc:	a0 90 c4 01 	lds	r10, 0x01C4
     e00:	b0 90 c5 01 	lds	r11, 0x01C5
     e04:	c0 90 c6 01 	lds	r12, 0x01C6
     e08:	d0 90 c7 01 	lds	r13, 0x01C7
     e0c:	0f 90       	pop	r0
     e0e:	0f 90       	pop	r0
     e10:	c6 01       	movw	r24, r12
     e12:	b5 01       	movw	r22, r10
     e14:	20 e0       	ldi	r18, 0x00	; 0
     e16:	30 e0       	ldi	r19, 0x00	; 0
     e18:	40 e0       	ldi	r20, 0x00	; 0
     e1a:	50 e0       	ldi	r21, 0x00	; 0
     e1c:	0e 94 bc 0b 	call	0x1778	; 0x1778 <__eqsf2>
     e20:	88 23       	and	r24, r24
     e22:	29 f4       	brne	.+10     	; 0xe2e <main+0x266>
			{
				OCR1A = 0;
     e24:	1b bc       	out	0x2b, r1	; 43
     e26:	1a bc       	out	0x2a, r1	; 42
				ordreG = frein;
     e28:	60 92 04 02 	sts	0x0204, r6
     e2c:	33 c0       	rjmp	.+102    	; 0xe94 <main+0x2cc>
			}
			else if (dutyCycle[GAUCHE] < 0.0)
     e2e:	c6 01       	movw	r24, r12
     e30:	b5 01       	movw	r22, r10
     e32:	20 e0       	ldi	r18, 0x00	; 0
     e34:	30 e0       	ldi	r19, 0x00	; 0
     e36:	40 e0       	ldi	r20, 0x00	; 0
     e38:	50 e0       	ldi	r21, 0x00	; 0
     e3a:	0e 94 4c 0c 	call	0x1898	; 0x1898 <__ltsf2>
     e3e:	88 23       	and	r24, r24
     e40:	64 f4       	brge	.+24     	; 0xe5a <main+0x292>
			{
				ordreG = arriere;
     e42:	70 92 04 02 	sts	0x0204, r7
				OCR1A = (uint16_t)((float)ICR1 * -dutyCycle[GAUCHE]);
     e46:	66 b5       	in	r22, 0x26	; 38
     e48:	77 b5       	in	r23, 0x27	; 39
     e4a:	80 e0       	ldi	r24, 0x00	; 0
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__floatunsisf>
     e52:	a6 01       	movw	r20, r12
     e54:	95 01       	movw	r18, r10
     e56:	50 58       	subi	r21, 0x80	; 128
     e58:	14 c0       	rjmp	.+40     	; 0xe82 <main+0x2ba>
			}
			else if (dutyCycle[GAUCHE] > 0.0)
     e5a:	c6 01       	movw	r24, r12
     e5c:	b5 01       	movw	r22, r10
     e5e:	20 e0       	ldi	r18, 0x00	; 0
     e60:	30 e0       	ldi	r19, 0x00	; 0
     e62:	40 e0       	ldi	r20, 0x00	; 0
     e64:	50 e0       	ldi	r21, 0x00	; 0
     e66:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <__gtsf2>
     e6a:	18 16       	cp	r1, r24
     e6c:	8c f4       	brge	.+34     	; 0xe90 <main+0x2c8>
			{
				ordreG = avant;
     e6e:	10 92 04 02 	sts	0x0204, r1
				OCR1A = (uint16_t)((float)ICR1 * dutyCycle[GAUCHE]);
     e72:	66 b5       	in	r22, 0x26	; 38
     e74:	77 b5       	in	r23, 0x27	; 39
     e76:	80 e0       	ldi	r24, 0x00	; 0
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__floatunsisf>
     e7e:	a6 01       	movw	r20, r12
     e80:	95 01       	movw	r18, r10
     e82:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     e86:	0e 94 40 08 	call	0x1080	; 0x1080 <__fixunssfsi>
     e8a:	7b bd       	out	0x2b, r23	; 43
     e8c:	6a bd       	out	0x2a, r22	; 42
     e8e:	02 c0       	rjmp	.+4      	; 0xe94 <main+0x2cc>
			}
			else
			{
				ordreG = neutre;
     e90:	50 92 04 02 	sts	0x0204, r5

			}
		
			if (dutyCycle[DROIT] == 0.0)
     e94:	e0 90 c8 01 	lds	r14, 0x01C8
     e98:	f0 90 c9 01 	lds	r15, 0x01C9
     e9c:	00 91 ca 01 	lds	r16, 0x01CA
     ea0:	10 91 cb 01 	lds	r17, 0x01CB
     ea4:	c8 01       	movw	r24, r16
     ea6:	b7 01       	movw	r22, r14
     ea8:	20 e0       	ldi	r18, 0x00	; 0
     eaa:	30 e0       	ldi	r19, 0x00	; 0
     eac:	40 e0       	ldi	r20, 0x00	; 0
     eae:	50 e0       	ldi	r21, 0x00	; 0
     eb0:	0e 94 bc 0b 	call	0x1778	; 0x1778 <__eqsf2>
     eb4:	88 23       	and	r24, r24
     eb6:	29 f4       	brne	.+10     	; 0xec2 <main+0x2fa>
			{
				OCR1A = 0;
     eb8:	1b bc       	out	0x2b, r1	; 43
     eba:	1a bc       	out	0x2a, r1	; 42
				ordreD = frein;
     ebc:	60 92 ed 01 	sts	0x01ED, r6
     ec0:	33 c0       	rjmp	.+102    	; 0xf28 <main+0x360>
			}
			else if (dutyCycle[DROIT] < 0.0)
     ec2:	c8 01       	movw	r24, r16
     ec4:	b7 01       	movw	r22, r14
     ec6:	20 e0       	ldi	r18, 0x00	; 0
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	40 e0       	ldi	r20, 0x00	; 0
     ecc:	50 e0       	ldi	r21, 0x00	; 0
     ece:	0e 94 4c 0c 	call	0x1898	; 0x1898 <__ltsf2>
     ed2:	88 23       	and	r24, r24
     ed4:	64 f4       	brge	.+24     	; 0xeee <main+0x326>
			{
				ordreD = arriere;
     ed6:	70 92 ed 01 	sts	0x01ED, r7
				OCR1A = (uint16_t)((float)ICR1 * -dutyCycle[GAUCHE]);
     eda:	66 b5       	in	r22, 0x26	; 38
     edc:	77 b5       	in	r23, 0x27	; 39
     ede:	80 e0       	ldi	r24, 0x00	; 0
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__floatunsisf>
     ee6:	a6 01       	movw	r20, r12
     ee8:	95 01       	movw	r18, r10
     eea:	50 58       	subi	r21, 0x80	; 128
     eec:	14 c0       	rjmp	.+40     	; 0xf16 <main+0x34e>
			}
			else if (dutyCycle[DROIT] > 0.0)
     eee:	c8 01       	movw	r24, r16
     ef0:	b7 01       	movw	r22, r14
     ef2:	20 e0       	ldi	r18, 0x00	; 0
     ef4:	30 e0       	ldi	r19, 0x00	; 0
     ef6:	40 e0       	ldi	r20, 0x00	; 0
     ef8:	50 e0       	ldi	r21, 0x00	; 0
     efa:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <__gtsf2>
     efe:	18 16       	cp	r1, r24
     f00:	8c f4       	brge	.+34     	; 0xf24 <main+0x35c>
			{
				ordreD = avant;
     f02:	10 92 ed 01 	sts	0x01ED, r1
				OCR1A = (uint16_t)((float)ICR1 * dutyCycle[GAUCHE]);
     f06:	66 b5       	in	r22, 0x26	; 38
     f08:	77 b5       	in	r23, 0x27	; 39
     f0a:	80 e0       	ldi	r24, 0x00	; 0
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__floatunsisf>
     f12:	a6 01       	movw	r20, r12
     f14:	95 01       	movw	r18, r10
     f16:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     f1a:	0e 94 40 08 	call	0x1080	; 0x1080 <__fixunssfsi>
     f1e:	7b bd       	out	0x2b, r23	; 43
     f20:	6a bd       	out	0x2a, r22	; 42
     f22:	02 c0       	rjmp	.+4      	; 0xf28 <main+0x360>
			}
			else
			{
				ordreD = neutre;
     f24:	50 92 ed 01 	sts	0x01ED, r5

		    } 
		
			ordre_Moteur(ordreG, ordreD);
     f28:	80 91 04 02 	lds	r24, 0x0204
     f2c:	60 91 ed 01 	lds	r22, 0x01ED
     f30:	0e 94 36 04 	call	0x86c	; 0x86c <ordre_Moteur>
     f34:	7a ce       	rjmp	.-780    	; 0xc2a <main+0x62>

00000f36 <USART_Init>:
extern volatile uint8_t etat;
extern volatile float vitesseCommande;
extern volatile float angleCommande;
void USART_Init()
{
	UBRRH = 0x00;
     f36:	10 bc       	out	0x20, r1	; 32
	UBRRL = UART_BAUD_SELECT; //(uint8_t)(F_CPU / 153600) - (uint8_t)1;
     f38:	87 e6       	ldi	r24, 0x67	; 103
     f3a:	89 b9       	out	0x09, r24	; 9
	//- vitesse = 9600 Baud - 1 bit d’arrêt - Mode : XXXXXXXXXXX
	//- 8 bits de données - pas de parité
	UCSRA = (0 << RXC) | (0 << TXC)	| (1 << UDRE) | (0 << FE) | (0 << DOR) | (0 << PE) | (0 << U2X)	| (0 << MPCM);
     f3c:	80 e2       	ldi	r24, 0x20	; 32
     f3e:	8b b9       	out	0x0b, r24	; 11
	UCSRB = (1 << RXCIE) | (0 << TXCIE) | (0 << UDRIE) | (1 << RXEN)  |  (1 << TXEN) | (0 << UCSZ2)  | (0 << RXB8)	| (0 << TXB8);
     f40:	88 e9       	ldi	r24, 0x98	; 152
     f42:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL) | (0 << UMSEL) | (0 << UPM1) | (0 << UPM0) | (0 << USBS) | (1 << UCSZ1) | (1 << UCSZ0) | (0 << UCPOL);	 
     f44:	86 e8       	ldi	r24, 0x86	; 134
     f46:	80 bd       	out	0x20, r24	; 32
}
     f48:	08 95       	ret

00000f4a <__vector_13>:

//Intéruption pour la reception des trames de commandes
ISR(USART_RXC_vect)
{
     f4a:	1f 92       	push	r1
     f4c:	0f 92       	push	r0
     f4e:	0f b6       	in	r0, 0x3f	; 63
     f50:	0f 92       	push	r0
     f52:	11 24       	eor	r1, r1
     f54:	2f 93       	push	r18
     f56:	3f 93       	push	r19
     f58:	4f 93       	push	r20
     f5a:	5f 93       	push	r21
     f5c:	6f 93       	push	r22
     f5e:	7f 93       	push	r23
     f60:	8f 93       	push	r24
     f62:	9f 93       	push	r25
     f64:	af 93       	push	r26
     f66:	bf 93       	push	r27
     f68:	ef 93       	push	r30
     f6a:	ff 93       	push	r31
	donneRecue=UDR;
     f6c:	8c b1       	in	r24, 0x0c	; 12
     f6e:	80 93 05 02 	sts	0x0205, r24
	//PORTB^=0x01;
	if (debug==0)
     f72:	80 91 ac 01 	lds	r24, 0x01AC
     f76:	88 23       	and	r24, r24
     f78:	09 f4       	brne	.+2      	; 0xf7c <__vector_13+0x32>
	{
		//USART_Envoie(donneRecue);
		UCSRB|=(1<<UDRIE);
     f7a:	55 9a       	sbi	0x0a, 5	; 10
	}
		
	switch (etat)
     f7c:	80 91 63 00 	lds	r24, 0x0063
     f80:	82 30       	cpi	r24, 0x02	; 2
     f82:	51 f0       	breq	.+20     	; 0xf98 <__vector_13+0x4e>
     f84:	83 30       	cpi	r24, 0x03	; 3
     f86:	d9 f0       	breq	.+54     	; 0xfbe <__vector_13+0x74>
     f88:	81 30       	cpi	r24, 0x01	; 1
     f8a:	51 f5       	brne	.+84     	; 0xfe0 <__vector_13+0x96>
		{

		case 1:
			{
				if (donneRecue == 0xF1) // réception d'une commande normale
     f8c:	80 91 05 02 	lds	r24, 0x0205
     f90:	81 3f       	cpi	r24, 0xF1	; 241
     f92:	11 f4       	brne	.+4      	; 0xf98 <__vector_13+0x4e>
				{
					etat = 2;
     f94:	82 e0       	ldi	r24, 0x02	; 2
     f96:	10 c0       	rjmp	.+32     	; 0xfb8 <__vector_13+0x6e>
				}
			}

		case 2:
			{
				vitesseCommande = (float)donneRecue;
     f98:	60 91 05 02 	lds	r22, 0x0205
     f9c:	70 e0       	ldi	r23, 0x00	; 0
     f9e:	80 e0       	ldi	r24, 0x00	; 0
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__floatunsisf>
     fa6:	60 93 e4 01 	sts	0x01E4, r22
     faa:	70 93 e5 01 	sts	0x01E5, r23
     fae:	80 93 e6 01 	sts	0x01E6, r24
     fb2:	90 93 e7 01 	sts	0x01E7, r25
				etat = 3;
     fb6:	83 e0       	ldi	r24, 0x03	; 3
     fb8:	80 93 63 00 	sts	0x0063, r24
     fbc:	11 c0       	rjmp	.+34     	; 0xfe0 <__vector_13+0x96>
			}

		case 3:
			{
			
				angleCommande = (float)donneRecue;
     fbe:	60 91 05 02 	lds	r22, 0x0205
     fc2:	70 e0       	ldi	r23, 0x00	; 0
     fc4:	80 e0       	ldi	r24, 0x00	; 0
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__floatunsisf>
     fcc:	60 93 e8 01 	sts	0x01E8, r22
     fd0:	70 93 e9 01 	sts	0x01E9, r23
     fd4:	80 93 ea 01 	sts	0x01EA, r24
     fd8:	90 93 eb 01 	sts	0x01EB, r25
				etat = 0;
     fdc:	10 92 63 00 	sts	0x0063, r1
				break;
			}
		}
}
     fe0:	ff 91       	pop	r31
     fe2:	ef 91       	pop	r30
     fe4:	bf 91       	pop	r27
     fe6:	af 91       	pop	r26
     fe8:	9f 91       	pop	r25
     fea:	8f 91       	pop	r24
     fec:	7f 91       	pop	r23
     fee:	6f 91       	pop	r22
     ff0:	5f 91       	pop	r21
     ff2:	4f 91       	pop	r20
     ff4:	3f 91       	pop	r19
     ff6:	2f 91       	pop	r18
     ff8:	0f 90       	pop	r0
     ffa:	0f be       	out	0x3f, r0	; 63
     ffc:	0f 90       	pop	r0
     ffe:	1f 90       	pop	r1
    1000:	18 95       	reti

00001002 <__vector_14>:


//Intéruption pour l'envoi des données via l'USART
ISR(USART_UDRE_vect)
{
    1002:	1f 92       	push	r1
    1004:	0f 92       	push	r0
    1006:	0f b6       	in	r0, 0x3f	; 63
    1008:	0f 92       	push	r0
    100a:	11 24       	eor	r1, r1
    100c:	8f 93       	push	r24
    100e:	ef 93       	push	r30
    1010:	ff 93       	push	r31
	if (debug==1)
    1012:	80 91 ac 01 	lds	r24, 0x01AC
    1016:	81 30       	cpi	r24, 0x01	; 1
    1018:	39 f5       	brne	.+78     	; 0x1068 <__vector_14+0x66>
	{
		if (compteur==TAILLE_CHAINE)
    101a:	80 91 7c 00 	lds	r24, 0x007C
    101e:	84 31       	cpi	r24, 0x14	; 20
    1020:	29 f4       	brne	.+10     	; 0x102c <__vector_14+0x2a>
		{
			UDR=DEBUT_DEBUG;
    1022:	8e ef       	ldi	r24, 0xFE	; 254
    1024:	8c b9       	out	0x0c, r24	; 12
			compteur=0;
    1026:	10 92 7c 00 	sts	0x007C, r1
    102a:	22 c0       	rjmp	.+68     	; 0x1070 <__vector_14+0x6e>
		}
		else
		{
			if (debugChaine[compteur]!='\0')
    102c:	e0 91 7c 00 	lds	r30, 0x007C
    1030:	f0 e0       	ldi	r31, 0x00	; 0
    1032:	e2 51       	subi	r30, 0x12	; 18
    1034:	fe 4f       	sbci	r31, 0xFE	; 254
    1036:	80 81       	ld	r24, Z
    1038:	88 23       	and	r24, r24
    103a:	69 f0       	breq	.+26     	; 0x1056 <__vector_14+0x54>
			{
				UDR=debugChaine[compteur];
    103c:	e0 91 7c 00 	lds	r30, 0x007C
    1040:	f0 e0       	ldi	r31, 0x00	; 0
    1042:	e2 51       	subi	r30, 0x12	; 18
    1044:	fe 4f       	sbci	r31, 0xFE	; 254
    1046:	80 81       	ld	r24, Z
    1048:	8c b9       	out	0x0c, r24	; 12
				compteur++;
    104a:	80 91 7c 00 	lds	r24, 0x007C
    104e:	8f 5f       	subi	r24, 0xFF	; 255
    1050:	80 93 7c 00 	sts	0x007C, r24
    1054:	0d c0       	rjmp	.+26     	; 0x1070 <__vector_14+0x6e>
			}
			else
			{
				UDR=FIN_DEBUG;
    1056:	8f ef       	ldi	r24, 0xFF	; 255
    1058:	8c b9       	out	0x0c, r24	; 12
				UCSRB &= ~(1 << UDRIE);
    105a:	55 98       	cbi	0x0a, 5	; 10
				compteur=TAILLE_CHAINE;
    105c:	84 e1       	ldi	r24, 0x14	; 20
    105e:	80 93 7c 00 	sts	0x007C, r24
				debug=0;
    1062:	10 92 ac 01 	sts	0x01AC, r1
    1066:	04 c0       	rjmp	.+8      	; 0x1070 <__vector_14+0x6e>
		}
		
	}
	else
	{
		UDR=donneRecue;
    1068:	80 91 05 02 	lds	r24, 0x0205
    106c:	8c b9       	out	0x0c, r24	; 12
		UCSRB &= ~(1 << UDRIE);
    106e:	55 98       	cbi	0x0a, 5	; 10
	}
	
}
    1070:	ff 91       	pop	r31
    1072:	ef 91       	pop	r30
    1074:	8f 91       	pop	r24
    1076:	0f 90       	pop	r0
    1078:	0f be       	out	0x3f, r0	; 63
    107a:	0f 90       	pop	r0
    107c:	1f 90       	pop	r1
    107e:	18 95       	reti

00001080 <__fixunssfsi>:
    1080:	ef 92       	push	r14
    1082:	ff 92       	push	r15
    1084:	0f 93       	push	r16
    1086:	1f 93       	push	r17
    1088:	7b 01       	movw	r14, r22
    108a:	8c 01       	movw	r16, r24
    108c:	20 e0       	ldi	r18, 0x00	; 0
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	40 e0       	ldi	r20, 0x00	; 0
    1092:	5f e4       	ldi	r21, 0x4F	; 79
    1094:	0e 94 1c 0c 	call	0x1838	; 0x1838 <__gesf2>
    1098:	88 23       	and	r24, r24
    109a:	8c f0       	brlt	.+34     	; 0x10be <__fixunssfsi+0x3e>
    109c:	c8 01       	movw	r24, r16
    109e:	b7 01       	movw	r22, r14
    10a0:	20 e0       	ldi	r18, 0x00	; 0
    10a2:	30 e0       	ldi	r19, 0x00	; 0
    10a4:	40 e0       	ldi	r20, 0x00	; 0
    10a6:	5f e4       	ldi	r21, 0x4F	; 79
    10a8:	0e 94 b8 09 	call	0x1370	; 0x1370 <__subsf3>
    10ac:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <__fixsfsi>
    10b0:	9b 01       	movw	r18, r22
    10b2:	ac 01       	movw	r20, r24
    10b4:	20 50       	subi	r18, 0x00	; 0
    10b6:	30 40       	sbci	r19, 0x00	; 0
    10b8:	40 40       	sbci	r20, 0x00	; 0
    10ba:	50 48       	sbci	r21, 0x80	; 128
    10bc:	06 c0       	rjmp	.+12     	; 0x10ca <__fixunssfsi+0x4a>
    10be:	c8 01       	movw	r24, r16
    10c0:	b7 01       	movw	r22, r14
    10c2:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <__fixsfsi>
    10c6:	9b 01       	movw	r18, r22
    10c8:	ac 01       	movw	r20, r24
    10ca:	b9 01       	movw	r22, r18
    10cc:	ca 01       	movw	r24, r20
    10ce:	1f 91       	pop	r17
    10d0:	0f 91       	pop	r16
    10d2:	ff 90       	pop	r15
    10d4:	ef 90       	pop	r14
    10d6:	08 95       	ret

000010d8 <_fpadd_parts>:
    10d8:	a0 e0       	ldi	r26, 0x00	; 0
    10da:	b0 e0       	ldi	r27, 0x00	; 0
    10dc:	e2 e7       	ldi	r30, 0x72	; 114
    10de:	f8 e0       	ldi	r31, 0x08	; 8
    10e0:	0c 94 cc 0f 	jmp	0x1f98	; 0x1f98 <__prologue_saves__>
    10e4:	dc 01       	movw	r26, r24
    10e6:	2b 01       	movw	r4, r22
    10e8:	fa 01       	movw	r30, r20
    10ea:	9c 91       	ld	r25, X
    10ec:	92 30       	cpi	r25, 0x02	; 2
    10ee:	08 f4       	brcc	.+2      	; 0x10f2 <_fpadd_parts+0x1a>
    10f0:	39 c1       	rjmp	.+626    	; 0x1364 <_fpadd_parts+0x28c>
    10f2:	eb 01       	movw	r28, r22
    10f4:	88 81       	ld	r24, Y
    10f6:	82 30       	cpi	r24, 0x02	; 2
    10f8:	08 f4       	brcc	.+2      	; 0x10fc <_fpadd_parts+0x24>
    10fa:	33 c1       	rjmp	.+614    	; 0x1362 <_fpadd_parts+0x28a>
    10fc:	94 30       	cpi	r25, 0x04	; 4
    10fe:	69 f4       	brne	.+26     	; 0x111a <_fpadd_parts+0x42>
    1100:	84 30       	cpi	r24, 0x04	; 4
    1102:	09 f0       	breq	.+2      	; 0x1106 <_fpadd_parts+0x2e>
    1104:	2f c1       	rjmp	.+606    	; 0x1364 <_fpadd_parts+0x28c>
    1106:	11 96       	adiw	r26, 0x01	; 1
    1108:	9c 91       	ld	r25, X
    110a:	11 97       	sbiw	r26, 0x01	; 1
    110c:	89 81       	ldd	r24, Y+1	; 0x01
    110e:	98 17       	cp	r25, r24
    1110:	09 f4       	brne	.+2      	; 0x1114 <_fpadd_parts+0x3c>
    1112:	28 c1       	rjmp	.+592    	; 0x1364 <_fpadd_parts+0x28c>
    1114:	ad e7       	ldi	r26, 0x7D	; 125
    1116:	b0 e0       	ldi	r27, 0x00	; 0
    1118:	25 c1       	rjmp	.+586    	; 0x1364 <_fpadd_parts+0x28c>
    111a:	84 30       	cpi	r24, 0x04	; 4
    111c:	09 f4       	brne	.+2      	; 0x1120 <_fpadd_parts+0x48>
    111e:	21 c1       	rjmp	.+578    	; 0x1362 <_fpadd_parts+0x28a>
    1120:	82 30       	cpi	r24, 0x02	; 2
    1122:	a9 f4       	brne	.+42     	; 0x114e <_fpadd_parts+0x76>
    1124:	92 30       	cpi	r25, 0x02	; 2
    1126:	09 f0       	breq	.+2      	; 0x112a <_fpadd_parts+0x52>
    1128:	1d c1       	rjmp	.+570    	; 0x1364 <_fpadd_parts+0x28c>
    112a:	9a 01       	movw	r18, r20
    112c:	ad 01       	movw	r20, r26
    112e:	88 e0       	ldi	r24, 0x08	; 8
    1130:	ea 01       	movw	r28, r20
    1132:	09 90       	ld	r0, Y+
    1134:	ae 01       	movw	r20, r28
    1136:	e9 01       	movw	r28, r18
    1138:	09 92       	st	Y+, r0
    113a:	9e 01       	movw	r18, r28
    113c:	81 50       	subi	r24, 0x01	; 1
    113e:	c1 f7       	brne	.-16     	; 0x1130 <_fpadd_parts+0x58>
    1140:	e2 01       	movw	r28, r4
    1142:	89 81       	ldd	r24, Y+1	; 0x01
    1144:	11 96       	adiw	r26, 0x01	; 1
    1146:	9c 91       	ld	r25, X
    1148:	89 23       	and	r24, r25
    114a:	81 83       	std	Z+1, r24	; 0x01
    114c:	08 c1       	rjmp	.+528    	; 0x135e <_fpadd_parts+0x286>
    114e:	92 30       	cpi	r25, 0x02	; 2
    1150:	09 f4       	brne	.+2      	; 0x1154 <_fpadd_parts+0x7c>
    1152:	07 c1       	rjmp	.+526    	; 0x1362 <_fpadd_parts+0x28a>
    1154:	12 96       	adiw	r26, 0x02	; 2
    1156:	2d 90       	ld	r2, X+
    1158:	3c 90       	ld	r3, X
    115a:	13 97       	sbiw	r26, 0x03	; 3
    115c:	eb 01       	movw	r28, r22
    115e:	8a 81       	ldd	r24, Y+2	; 0x02
    1160:	9b 81       	ldd	r25, Y+3	; 0x03
    1162:	14 96       	adiw	r26, 0x04	; 4
    1164:	ad 90       	ld	r10, X+
    1166:	bd 90       	ld	r11, X+
    1168:	cd 90       	ld	r12, X+
    116a:	dc 90       	ld	r13, X
    116c:	17 97       	sbiw	r26, 0x07	; 7
    116e:	ec 80       	ldd	r14, Y+4	; 0x04
    1170:	fd 80       	ldd	r15, Y+5	; 0x05
    1172:	0e 81       	ldd	r16, Y+6	; 0x06
    1174:	1f 81       	ldd	r17, Y+7	; 0x07
    1176:	91 01       	movw	r18, r2
    1178:	28 1b       	sub	r18, r24
    117a:	39 0b       	sbc	r19, r25
    117c:	b9 01       	movw	r22, r18
    117e:	37 ff       	sbrs	r19, 7
    1180:	04 c0       	rjmp	.+8      	; 0x118a <_fpadd_parts+0xb2>
    1182:	66 27       	eor	r22, r22
    1184:	77 27       	eor	r23, r23
    1186:	62 1b       	sub	r22, r18
    1188:	73 0b       	sbc	r23, r19
    118a:	60 32       	cpi	r22, 0x20	; 32
    118c:	71 05       	cpc	r23, r1
    118e:	0c f0       	brlt	.+2      	; 0x1192 <_fpadd_parts+0xba>
    1190:	61 c0       	rjmp	.+194    	; 0x1254 <_fpadd_parts+0x17c>
    1192:	12 16       	cp	r1, r18
    1194:	13 06       	cpc	r1, r19
    1196:	6c f5       	brge	.+90     	; 0x11f2 <_fpadd_parts+0x11a>
    1198:	37 01       	movw	r6, r14
    119a:	48 01       	movw	r8, r16
    119c:	06 2e       	mov	r0, r22
    119e:	04 c0       	rjmp	.+8      	; 0x11a8 <_fpadd_parts+0xd0>
    11a0:	96 94       	lsr	r9
    11a2:	87 94       	ror	r8
    11a4:	77 94       	ror	r7
    11a6:	67 94       	ror	r6
    11a8:	0a 94       	dec	r0
    11aa:	d2 f7       	brpl	.-12     	; 0x11a0 <_fpadd_parts+0xc8>
    11ac:	21 e0       	ldi	r18, 0x01	; 1
    11ae:	30 e0       	ldi	r19, 0x00	; 0
    11b0:	40 e0       	ldi	r20, 0x00	; 0
    11b2:	50 e0       	ldi	r21, 0x00	; 0
    11b4:	04 c0       	rjmp	.+8      	; 0x11be <_fpadd_parts+0xe6>
    11b6:	22 0f       	add	r18, r18
    11b8:	33 1f       	adc	r19, r19
    11ba:	44 1f       	adc	r20, r20
    11bc:	55 1f       	adc	r21, r21
    11be:	6a 95       	dec	r22
    11c0:	d2 f7       	brpl	.-12     	; 0x11b6 <_fpadd_parts+0xde>
    11c2:	21 50       	subi	r18, 0x01	; 1
    11c4:	30 40       	sbci	r19, 0x00	; 0
    11c6:	40 40       	sbci	r20, 0x00	; 0
    11c8:	50 40       	sbci	r21, 0x00	; 0
    11ca:	2e 21       	and	r18, r14
    11cc:	3f 21       	and	r19, r15
    11ce:	40 23       	and	r20, r16
    11d0:	51 23       	and	r21, r17
    11d2:	21 15       	cp	r18, r1
    11d4:	31 05       	cpc	r19, r1
    11d6:	41 05       	cpc	r20, r1
    11d8:	51 05       	cpc	r21, r1
    11da:	21 f0       	breq	.+8      	; 0x11e4 <_fpadd_parts+0x10c>
    11dc:	21 e0       	ldi	r18, 0x01	; 1
    11de:	30 e0       	ldi	r19, 0x00	; 0
    11e0:	40 e0       	ldi	r20, 0x00	; 0
    11e2:	50 e0       	ldi	r21, 0x00	; 0
    11e4:	79 01       	movw	r14, r18
    11e6:	8a 01       	movw	r16, r20
    11e8:	e6 28       	or	r14, r6
    11ea:	f7 28       	or	r15, r7
    11ec:	08 29       	or	r16, r8
    11ee:	19 29       	or	r17, r9
    11f0:	3c c0       	rjmp	.+120    	; 0x126a <_fpadd_parts+0x192>
    11f2:	23 2b       	or	r18, r19
    11f4:	d1 f1       	breq	.+116    	; 0x126a <_fpadd_parts+0x192>
    11f6:	26 0e       	add	r2, r22
    11f8:	37 1e       	adc	r3, r23
    11fa:	35 01       	movw	r6, r10
    11fc:	46 01       	movw	r8, r12
    11fe:	06 2e       	mov	r0, r22
    1200:	04 c0       	rjmp	.+8      	; 0x120a <_fpadd_parts+0x132>
    1202:	96 94       	lsr	r9
    1204:	87 94       	ror	r8
    1206:	77 94       	ror	r7
    1208:	67 94       	ror	r6
    120a:	0a 94       	dec	r0
    120c:	d2 f7       	brpl	.-12     	; 0x1202 <_fpadd_parts+0x12a>
    120e:	21 e0       	ldi	r18, 0x01	; 1
    1210:	30 e0       	ldi	r19, 0x00	; 0
    1212:	40 e0       	ldi	r20, 0x00	; 0
    1214:	50 e0       	ldi	r21, 0x00	; 0
    1216:	04 c0       	rjmp	.+8      	; 0x1220 <_fpadd_parts+0x148>
    1218:	22 0f       	add	r18, r18
    121a:	33 1f       	adc	r19, r19
    121c:	44 1f       	adc	r20, r20
    121e:	55 1f       	adc	r21, r21
    1220:	6a 95       	dec	r22
    1222:	d2 f7       	brpl	.-12     	; 0x1218 <_fpadd_parts+0x140>
    1224:	21 50       	subi	r18, 0x01	; 1
    1226:	30 40       	sbci	r19, 0x00	; 0
    1228:	40 40       	sbci	r20, 0x00	; 0
    122a:	50 40       	sbci	r21, 0x00	; 0
    122c:	2a 21       	and	r18, r10
    122e:	3b 21       	and	r19, r11
    1230:	4c 21       	and	r20, r12
    1232:	5d 21       	and	r21, r13
    1234:	21 15       	cp	r18, r1
    1236:	31 05       	cpc	r19, r1
    1238:	41 05       	cpc	r20, r1
    123a:	51 05       	cpc	r21, r1
    123c:	21 f0       	breq	.+8      	; 0x1246 <_fpadd_parts+0x16e>
    123e:	21 e0       	ldi	r18, 0x01	; 1
    1240:	30 e0       	ldi	r19, 0x00	; 0
    1242:	40 e0       	ldi	r20, 0x00	; 0
    1244:	50 e0       	ldi	r21, 0x00	; 0
    1246:	59 01       	movw	r10, r18
    1248:	6a 01       	movw	r12, r20
    124a:	a6 28       	or	r10, r6
    124c:	b7 28       	or	r11, r7
    124e:	c8 28       	or	r12, r8
    1250:	d9 28       	or	r13, r9
    1252:	0b c0       	rjmp	.+22     	; 0x126a <_fpadd_parts+0x192>
    1254:	82 15       	cp	r24, r2
    1256:	93 05       	cpc	r25, r3
    1258:	2c f0       	brlt	.+10     	; 0x1264 <_fpadd_parts+0x18c>
    125a:	1c 01       	movw	r2, r24
    125c:	aa 24       	eor	r10, r10
    125e:	bb 24       	eor	r11, r11
    1260:	65 01       	movw	r12, r10
    1262:	03 c0       	rjmp	.+6      	; 0x126a <_fpadd_parts+0x192>
    1264:	ee 24       	eor	r14, r14
    1266:	ff 24       	eor	r15, r15
    1268:	87 01       	movw	r16, r14
    126a:	11 96       	adiw	r26, 0x01	; 1
    126c:	9c 91       	ld	r25, X
    126e:	d2 01       	movw	r26, r4
    1270:	11 96       	adiw	r26, 0x01	; 1
    1272:	8c 91       	ld	r24, X
    1274:	98 17       	cp	r25, r24
    1276:	09 f4       	brne	.+2      	; 0x127a <_fpadd_parts+0x1a2>
    1278:	45 c0       	rjmp	.+138    	; 0x1304 <_fpadd_parts+0x22c>
    127a:	99 23       	and	r25, r25
    127c:	39 f0       	breq	.+14     	; 0x128c <_fpadd_parts+0x1b4>
    127e:	a8 01       	movw	r20, r16
    1280:	97 01       	movw	r18, r14
    1282:	2a 19       	sub	r18, r10
    1284:	3b 09       	sbc	r19, r11
    1286:	4c 09       	sbc	r20, r12
    1288:	5d 09       	sbc	r21, r13
    128a:	06 c0       	rjmp	.+12     	; 0x1298 <_fpadd_parts+0x1c0>
    128c:	a6 01       	movw	r20, r12
    128e:	95 01       	movw	r18, r10
    1290:	2e 19       	sub	r18, r14
    1292:	3f 09       	sbc	r19, r15
    1294:	40 0b       	sbc	r20, r16
    1296:	51 0b       	sbc	r21, r17
    1298:	57 fd       	sbrc	r21, 7
    129a:	08 c0       	rjmp	.+16     	; 0x12ac <_fpadd_parts+0x1d4>
    129c:	11 82       	std	Z+1, r1	; 0x01
    129e:	33 82       	std	Z+3, r3	; 0x03
    12a0:	22 82       	std	Z+2, r2	; 0x02
    12a2:	24 83       	std	Z+4, r18	; 0x04
    12a4:	35 83       	std	Z+5, r19	; 0x05
    12a6:	46 83       	std	Z+6, r20	; 0x06
    12a8:	57 83       	std	Z+7, r21	; 0x07
    12aa:	1d c0       	rjmp	.+58     	; 0x12e6 <_fpadd_parts+0x20e>
    12ac:	81 e0       	ldi	r24, 0x01	; 1
    12ae:	81 83       	std	Z+1, r24	; 0x01
    12b0:	33 82       	std	Z+3, r3	; 0x03
    12b2:	22 82       	std	Z+2, r2	; 0x02
    12b4:	88 27       	eor	r24, r24
    12b6:	99 27       	eor	r25, r25
    12b8:	dc 01       	movw	r26, r24
    12ba:	82 1b       	sub	r24, r18
    12bc:	93 0b       	sbc	r25, r19
    12be:	a4 0b       	sbc	r26, r20
    12c0:	b5 0b       	sbc	r27, r21
    12c2:	84 83       	std	Z+4, r24	; 0x04
    12c4:	95 83       	std	Z+5, r25	; 0x05
    12c6:	a6 83       	std	Z+6, r26	; 0x06
    12c8:	b7 83       	std	Z+7, r27	; 0x07
    12ca:	0d c0       	rjmp	.+26     	; 0x12e6 <_fpadd_parts+0x20e>
    12cc:	22 0f       	add	r18, r18
    12ce:	33 1f       	adc	r19, r19
    12d0:	44 1f       	adc	r20, r20
    12d2:	55 1f       	adc	r21, r21
    12d4:	24 83       	std	Z+4, r18	; 0x04
    12d6:	35 83       	std	Z+5, r19	; 0x05
    12d8:	46 83       	std	Z+6, r20	; 0x06
    12da:	57 83       	std	Z+7, r21	; 0x07
    12dc:	82 81       	ldd	r24, Z+2	; 0x02
    12de:	93 81       	ldd	r25, Z+3	; 0x03
    12e0:	01 97       	sbiw	r24, 0x01	; 1
    12e2:	93 83       	std	Z+3, r25	; 0x03
    12e4:	82 83       	std	Z+2, r24	; 0x02
    12e6:	24 81       	ldd	r18, Z+4	; 0x04
    12e8:	35 81       	ldd	r19, Z+5	; 0x05
    12ea:	46 81       	ldd	r20, Z+6	; 0x06
    12ec:	57 81       	ldd	r21, Z+7	; 0x07
    12ee:	da 01       	movw	r26, r20
    12f0:	c9 01       	movw	r24, r18
    12f2:	01 97       	sbiw	r24, 0x01	; 1
    12f4:	a1 09       	sbc	r26, r1
    12f6:	b1 09       	sbc	r27, r1
    12f8:	8f 5f       	subi	r24, 0xFF	; 255
    12fa:	9f 4f       	sbci	r25, 0xFF	; 255
    12fc:	af 4f       	sbci	r26, 0xFF	; 255
    12fe:	bf 43       	sbci	r27, 0x3F	; 63
    1300:	28 f3       	brcs	.-54     	; 0x12cc <_fpadd_parts+0x1f4>
    1302:	0b c0       	rjmp	.+22     	; 0x131a <_fpadd_parts+0x242>
    1304:	91 83       	std	Z+1, r25	; 0x01
    1306:	33 82       	std	Z+3, r3	; 0x03
    1308:	22 82       	std	Z+2, r2	; 0x02
    130a:	ea 0c       	add	r14, r10
    130c:	fb 1c       	adc	r15, r11
    130e:	0c 1d       	adc	r16, r12
    1310:	1d 1d       	adc	r17, r13
    1312:	e4 82       	std	Z+4, r14	; 0x04
    1314:	f5 82       	std	Z+5, r15	; 0x05
    1316:	06 83       	std	Z+6, r16	; 0x06
    1318:	17 83       	std	Z+7, r17	; 0x07
    131a:	83 e0       	ldi	r24, 0x03	; 3
    131c:	80 83       	st	Z, r24
    131e:	24 81       	ldd	r18, Z+4	; 0x04
    1320:	35 81       	ldd	r19, Z+5	; 0x05
    1322:	46 81       	ldd	r20, Z+6	; 0x06
    1324:	57 81       	ldd	r21, Z+7	; 0x07
    1326:	57 ff       	sbrs	r21, 7
    1328:	1a c0       	rjmp	.+52     	; 0x135e <_fpadd_parts+0x286>
    132a:	c9 01       	movw	r24, r18
    132c:	aa 27       	eor	r26, r26
    132e:	97 fd       	sbrc	r25, 7
    1330:	a0 95       	com	r26
    1332:	ba 2f       	mov	r27, r26
    1334:	81 70       	andi	r24, 0x01	; 1
    1336:	90 70       	andi	r25, 0x00	; 0
    1338:	a0 70       	andi	r26, 0x00	; 0
    133a:	b0 70       	andi	r27, 0x00	; 0
    133c:	56 95       	lsr	r21
    133e:	47 95       	ror	r20
    1340:	37 95       	ror	r19
    1342:	27 95       	ror	r18
    1344:	82 2b       	or	r24, r18
    1346:	93 2b       	or	r25, r19
    1348:	a4 2b       	or	r26, r20
    134a:	b5 2b       	or	r27, r21
    134c:	84 83       	std	Z+4, r24	; 0x04
    134e:	95 83       	std	Z+5, r25	; 0x05
    1350:	a6 83       	std	Z+6, r26	; 0x06
    1352:	b7 83       	std	Z+7, r27	; 0x07
    1354:	82 81       	ldd	r24, Z+2	; 0x02
    1356:	93 81       	ldd	r25, Z+3	; 0x03
    1358:	01 96       	adiw	r24, 0x01	; 1
    135a:	93 83       	std	Z+3, r25	; 0x03
    135c:	82 83       	std	Z+2, r24	; 0x02
    135e:	df 01       	movw	r26, r30
    1360:	01 c0       	rjmp	.+2      	; 0x1364 <_fpadd_parts+0x28c>
    1362:	d2 01       	movw	r26, r4
    1364:	cd 01       	movw	r24, r26
    1366:	cd b7       	in	r28, 0x3d	; 61
    1368:	de b7       	in	r29, 0x3e	; 62
    136a:	e2 e1       	ldi	r30, 0x12	; 18
    136c:	0c 94 e8 0f 	jmp	0x1fd0	; 0x1fd0 <__epilogue_restores__>

00001370 <__subsf3>:
    1370:	a0 e2       	ldi	r26, 0x20	; 32
    1372:	b0 e0       	ldi	r27, 0x00	; 0
    1374:	ee eb       	ldi	r30, 0xBE	; 190
    1376:	f9 e0       	ldi	r31, 0x09	; 9
    1378:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__prologue_saves__+0x18>
    137c:	69 83       	std	Y+1, r22	; 0x01
    137e:	7a 83       	std	Y+2, r23	; 0x02
    1380:	8b 83       	std	Y+3, r24	; 0x03
    1382:	9c 83       	std	Y+4, r25	; 0x04
    1384:	2d 83       	std	Y+5, r18	; 0x05
    1386:	3e 83       	std	Y+6, r19	; 0x06
    1388:	4f 83       	std	Y+7, r20	; 0x07
    138a:	58 87       	std	Y+8, r21	; 0x08
    138c:	e9 e0       	ldi	r30, 0x09	; 9
    138e:	ee 2e       	mov	r14, r30
    1390:	f1 2c       	mov	r15, r1
    1392:	ec 0e       	add	r14, r28
    1394:	fd 1e       	adc	r15, r29
    1396:	ce 01       	movw	r24, r28
    1398:	01 96       	adiw	r24, 0x01	; 1
    139a:	b7 01       	movw	r22, r14
    139c:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    13a0:	8e 01       	movw	r16, r28
    13a2:	0f 5e       	subi	r16, 0xEF	; 239
    13a4:	1f 4f       	sbci	r17, 0xFF	; 255
    13a6:	ce 01       	movw	r24, r28
    13a8:	05 96       	adiw	r24, 0x05	; 5
    13aa:	b8 01       	movw	r22, r16
    13ac:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    13b0:	8a 89       	ldd	r24, Y+18	; 0x12
    13b2:	91 e0       	ldi	r25, 0x01	; 1
    13b4:	89 27       	eor	r24, r25
    13b6:	8a 8b       	std	Y+18, r24	; 0x12
    13b8:	c7 01       	movw	r24, r14
    13ba:	b8 01       	movw	r22, r16
    13bc:	ae 01       	movw	r20, r28
    13be:	47 5e       	subi	r20, 0xE7	; 231
    13c0:	5f 4f       	sbci	r21, 0xFF	; 255
    13c2:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <_fpadd_parts>
    13c6:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__pack_f>
    13ca:	a0 96       	adiw	r28, 0x20	; 32
    13cc:	e6 e0       	ldi	r30, 0x06	; 6
    13ce:	0c 94 f4 0f 	jmp	0x1fe8	; 0x1fe8 <__epilogue_restores__+0x18>

000013d2 <__addsf3>:
    13d2:	a0 e2       	ldi	r26, 0x20	; 32
    13d4:	b0 e0       	ldi	r27, 0x00	; 0
    13d6:	ef ee       	ldi	r30, 0xEF	; 239
    13d8:	f9 e0       	ldi	r31, 0x09	; 9
    13da:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__prologue_saves__+0x18>
    13de:	69 83       	std	Y+1, r22	; 0x01
    13e0:	7a 83       	std	Y+2, r23	; 0x02
    13e2:	8b 83       	std	Y+3, r24	; 0x03
    13e4:	9c 83       	std	Y+4, r25	; 0x04
    13e6:	2d 83       	std	Y+5, r18	; 0x05
    13e8:	3e 83       	std	Y+6, r19	; 0x06
    13ea:	4f 83       	std	Y+7, r20	; 0x07
    13ec:	58 87       	std	Y+8, r21	; 0x08
    13ee:	f9 e0       	ldi	r31, 0x09	; 9
    13f0:	ef 2e       	mov	r14, r31
    13f2:	f1 2c       	mov	r15, r1
    13f4:	ec 0e       	add	r14, r28
    13f6:	fd 1e       	adc	r15, r29
    13f8:	ce 01       	movw	r24, r28
    13fa:	01 96       	adiw	r24, 0x01	; 1
    13fc:	b7 01       	movw	r22, r14
    13fe:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    1402:	8e 01       	movw	r16, r28
    1404:	0f 5e       	subi	r16, 0xEF	; 239
    1406:	1f 4f       	sbci	r17, 0xFF	; 255
    1408:	ce 01       	movw	r24, r28
    140a:	05 96       	adiw	r24, 0x05	; 5
    140c:	b8 01       	movw	r22, r16
    140e:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    1412:	c7 01       	movw	r24, r14
    1414:	b8 01       	movw	r22, r16
    1416:	ae 01       	movw	r20, r28
    1418:	47 5e       	subi	r20, 0xE7	; 231
    141a:	5f 4f       	sbci	r21, 0xFF	; 255
    141c:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <_fpadd_parts>
    1420:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__pack_f>
    1424:	a0 96       	adiw	r28, 0x20	; 32
    1426:	e6 e0       	ldi	r30, 0x06	; 6
    1428:	0c 94 f4 0f 	jmp	0x1fe8	; 0x1fe8 <__epilogue_restores__+0x18>

0000142c <__mulsf3>:
    142c:	a0 e2       	ldi	r26, 0x20	; 32
    142e:	b0 e0       	ldi	r27, 0x00	; 0
    1430:	ec e1       	ldi	r30, 0x1C	; 28
    1432:	fa e0       	ldi	r31, 0x0A	; 10
    1434:	0c 94 cc 0f 	jmp	0x1f98	; 0x1f98 <__prologue_saves__>
    1438:	69 83       	std	Y+1, r22	; 0x01
    143a:	7a 83       	std	Y+2, r23	; 0x02
    143c:	8b 83       	std	Y+3, r24	; 0x03
    143e:	9c 83       	std	Y+4, r25	; 0x04
    1440:	2d 83       	std	Y+5, r18	; 0x05
    1442:	3e 83       	std	Y+6, r19	; 0x06
    1444:	4f 83       	std	Y+7, r20	; 0x07
    1446:	58 87       	std	Y+8, r21	; 0x08
    1448:	ce 01       	movw	r24, r28
    144a:	01 96       	adiw	r24, 0x01	; 1
    144c:	be 01       	movw	r22, r28
    144e:	67 5f       	subi	r22, 0xF7	; 247
    1450:	7f 4f       	sbci	r23, 0xFF	; 255
    1452:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    1456:	ce 01       	movw	r24, r28
    1458:	05 96       	adiw	r24, 0x05	; 5
    145a:	be 01       	movw	r22, r28
    145c:	6f 5e       	subi	r22, 0xEF	; 239
    145e:	7f 4f       	sbci	r23, 0xFF	; 255
    1460:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    1464:	99 85       	ldd	r25, Y+9	; 0x09
    1466:	92 30       	cpi	r25, 0x02	; 2
    1468:	88 f0       	brcs	.+34     	; 0x148c <__mulsf3+0x60>
    146a:	89 89       	ldd	r24, Y+17	; 0x11
    146c:	82 30       	cpi	r24, 0x02	; 2
    146e:	c8 f0       	brcs	.+50     	; 0x14a2 <__mulsf3+0x76>
    1470:	94 30       	cpi	r25, 0x04	; 4
    1472:	19 f4       	brne	.+6      	; 0x147a <__mulsf3+0x4e>
    1474:	82 30       	cpi	r24, 0x02	; 2
    1476:	51 f4       	brne	.+20     	; 0x148c <__mulsf3+0x60>
    1478:	04 c0       	rjmp	.+8      	; 0x1482 <__mulsf3+0x56>
    147a:	84 30       	cpi	r24, 0x04	; 4
    147c:	29 f4       	brne	.+10     	; 0x1488 <__mulsf3+0x5c>
    147e:	92 30       	cpi	r25, 0x02	; 2
    1480:	81 f4       	brne	.+32     	; 0x14a2 <__mulsf3+0x76>
    1482:	8d e7       	ldi	r24, 0x7D	; 125
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	c6 c0       	rjmp	.+396    	; 0x1614 <__mulsf3+0x1e8>
    1488:	92 30       	cpi	r25, 0x02	; 2
    148a:	49 f4       	brne	.+18     	; 0x149e <__mulsf3+0x72>
    148c:	20 e0       	ldi	r18, 0x00	; 0
    148e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1490:	8a 89       	ldd	r24, Y+18	; 0x12
    1492:	98 13       	cpse	r25, r24
    1494:	21 e0       	ldi	r18, 0x01	; 1
    1496:	2a 87       	std	Y+10, r18	; 0x0a
    1498:	ce 01       	movw	r24, r28
    149a:	09 96       	adiw	r24, 0x09	; 9
    149c:	bb c0       	rjmp	.+374    	; 0x1614 <__mulsf3+0x1e8>
    149e:	82 30       	cpi	r24, 0x02	; 2
    14a0:	49 f4       	brne	.+18     	; 0x14b4 <__mulsf3+0x88>
    14a2:	20 e0       	ldi	r18, 0x00	; 0
    14a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    14a6:	8a 89       	ldd	r24, Y+18	; 0x12
    14a8:	98 13       	cpse	r25, r24
    14aa:	21 e0       	ldi	r18, 0x01	; 1
    14ac:	2a 8b       	std	Y+18, r18	; 0x12
    14ae:	ce 01       	movw	r24, r28
    14b0:	41 96       	adiw	r24, 0x11	; 17
    14b2:	b0 c0       	rjmp	.+352    	; 0x1614 <__mulsf3+0x1e8>
    14b4:	2d 84       	ldd	r2, Y+13	; 0x0d
    14b6:	3e 84       	ldd	r3, Y+14	; 0x0e
    14b8:	4f 84       	ldd	r4, Y+15	; 0x0f
    14ba:	58 88       	ldd	r5, Y+16	; 0x10
    14bc:	6d 88       	ldd	r6, Y+21	; 0x15
    14be:	7e 88       	ldd	r7, Y+22	; 0x16
    14c0:	8f 88       	ldd	r8, Y+23	; 0x17
    14c2:	98 8c       	ldd	r9, Y+24	; 0x18
    14c4:	ee 24       	eor	r14, r14
    14c6:	ff 24       	eor	r15, r15
    14c8:	87 01       	movw	r16, r14
    14ca:	aa 24       	eor	r10, r10
    14cc:	bb 24       	eor	r11, r11
    14ce:	65 01       	movw	r12, r10
    14d0:	40 e0       	ldi	r20, 0x00	; 0
    14d2:	50 e0       	ldi	r21, 0x00	; 0
    14d4:	60 e0       	ldi	r22, 0x00	; 0
    14d6:	70 e0       	ldi	r23, 0x00	; 0
    14d8:	e0 e0       	ldi	r30, 0x00	; 0
    14da:	f0 e0       	ldi	r31, 0x00	; 0
    14dc:	c1 01       	movw	r24, r2
    14de:	81 70       	andi	r24, 0x01	; 1
    14e0:	90 70       	andi	r25, 0x00	; 0
    14e2:	89 2b       	or	r24, r25
    14e4:	e9 f0       	breq	.+58     	; 0x1520 <__mulsf3+0xf4>
    14e6:	e6 0c       	add	r14, r6
    14e8:	f7 1c       	adc	r15, r7
    14ea:	08 1d       	adc	r16, r8
    14ec:	19 1d       	adc	r17, r9
    14ee:	9a 01       	movw	r18, r20
    14f0:	ab 01       	movw	r20, r22
    14f2:	2a 0d       	add	r18, r10
    14f4:	3b 1d       	adc	r19, r11
    14f6:	4c 1d       	adc	r20, r12
    14f8:	5d 1d       	adc	r21, r13
    14fa:	80 e0       	ldi	r24, 0x00	; 0
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	a0 e0       	ldi	r26, 0x00	; 0
    1500:	b0 e0       	ldi	r27, 0x00	; 0
    1502:	e6 14       	cp	r14, r6
    1504:	f7 04       	cpc	r15, r7
    1506:	08 05       	cpc	r16, r8
    1508:	19 05       	cpc	r17, r9
    150a:	20 f4       	brcc	.+8      	; 0x1514 <__mulsf3+0xe8>
    150c:	81 e0       	ldi	r24, 0x01	; 1
    150e:	90 e0       	ldi	r25, 0x00	; 0
    1510:	a0 e0       	ldi	r26, 0x00	; 0
    1512:	b0 e0       	ldi	r27, 0x00	; 0
    1514:	ba 01       	movw	r22, r20
    1516:	a9 01       	movw	r20, r18
    1518:	48 0f       	add	r20, r24
    151a:	59 1f       	adc	r21, r25
    151c:	6a 1f       	adc	r22, r26
    151e:	7b 1f       	adc	r23, r27
    1520:	aa 0c       	add	r10, r10
    1522:	bb 1c       	adc	r11, r11
    1524:	cc 1c       	adc	r12, r12
    1526:	dd 1c       	adc	r13, r13
    1528:	97 fe       	sbrs	r9, 7
    152a:	08 c0       	rjmp	.+16     	; 0x153c <__mulsf3+0x110>
    152c:	81 e0       	ldi	r24, 0x01	; 1
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	a0 e0       	ldi	r26, 0x00	; 0
    1532:	b0 e0       	ldi	r27, 0x00	; 0
    1534:	a8 2a       	or	r10, r24
    1536:	b9 2a       	or	r11, r25
    1538:	ca 2a       	or	r12, r26
    153a:	db 2a       	or	r13, r27
    153c:	31 96       	adiw	r30, 0x01	; 1
    153e:	e0 32       	cpi	r30, 0x20	; 32
    1540:	f1 05       	cpc	r31, r1
    1542:	49 f0       	breq	.+18     	; 0x1556 <__mulsf3+0x12a>
    1544:	66 0c       	add	r6, r6
    1546:	77 1c       	adc	r7, r7
    1548:	88 1c       	adc	r8, r8
    154a:	99 1c       	adc	r9, r9
    154c:	56 94       	lsr	r5
    154e:	47 94       	ror	r4
    1550:	37 94       	ror	r3
    1552:	27 94       	ror	r2
    1554:	c3 cf       	rjmp	.-122    	; 0x14dc <__mulsf3+0xb0>
    1556:	fa 85       	ldd	r31, Y+10	; 0x0a
    1558:	ea 89       	ldd	r30, Y+18	; 0x12
    155a:	2b 89       	ldd	r18, Y+19	; 0x13
    155c:	3c 89       	ldd	r19, Y+20	; 0x14
    155e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1560:	9c 85       	ldd	r25, Y+12	; 0x0c
    1562:	28 0f       	add	r18, r24
    1564:	39 1f       	adc	r19, r25
    1566:	2e 5f       	subi	r18, 0xFE	; 254
    1568:	3f 4f       	sbci	r19, 0xFF	; 255
    156a:	17 c0       	rjmp	.+46     	; 0x159a <__mulsf3+0x16e>
    156c:	ca 01       	movw	r24, r20
    156e:	81 70       	andi	r24, 0x01	; 1
    1570:	90 70       	andi	r25, 0x00	; 0
    1572:	89 2b       	or	r24, r25
    1574:	61 f0       	breq	.+24     	; 0x158e <__mulsf3+0x162>
    1576:	16 95       	lsr	r17
    1578:	07 95       	ror	r16
    157a:	f7 94       	ror	r15
    157c:	e7 94       	ror	r14
    157e:	80 e0       	ldi	r24, 0x00	; 0
    1580:	90 e0       	ldi	r25, 0x00	; 0
    1582:	a0 e0       	ldi	r26, 0x00	; 0
    1584:	b0 e8       	ldi	r27, 0x80	; 128
    1586:	e8 2a       	or	r14, r24
    1588:	f9 2a       	or	r15, r25
    158a:	0a 2b       	or	r16, r26
    158c:	1b 2b       	or	r17, r27
    158e:	76 95       	lsr	r23
    1590:	67 95       	ror	r22
    1592:	57 95       	ror	r21
    1594:	47 95       	ror	r20
    1596:	2f 5f       	subi	r18, 0xFF	; 255
    1598:	3f 4f       	sbci	r19, 0xFF	; 255
    159a:	77 fd       	sbrc	r23, 7
    159c:	e7 cf       	rjmp	.-50     	; 0x156c <__mulsf3+0x140>
    159e:	0c c0       	rjmp	.+24     	; 0x15b8 <__mulsf3+0x18c>
    15a0:	44 0f       	add	r20, r20
    15a2:	55 1f       	adc	r21, r21
    15a4:	66 1f       	adc	r22, r22
    15a6:	77 1f       	adc	r23, r23
    15a8:	17 fd       	sbrc	r17, 7
    15aa:	41 60       	ori	r20, 0x01	; 1
    15ac:	ee 0c       	add	r14, r14
    15ae:	ff 1c       	adc	r15, r15
    15b0:	00 1f       	adc	r16, r16
    15b2:	11 1f       	adc	r17, r17
    15b4:	21 50       	subi	r18, 0x01	; 1
    15b6:	30 40       	sbci	r19, 0x00	; 0
    15b8:	40 30       	cpi	r20, 0x00	; 0
    15ba:	90 e0       	ldi	r25, 0x00	; 0
    15bc:	59 07       	cpc	r21, r25
    15be:	90 e0       	ldi	r25, 0x00	; 0
    15c0:	69 07       	cpc	r22, r25
    15c2:	90 e4       	ldi	r25, 0x40	; 64
    15c4:	79 07       	cpc	r23, r25
    15c6:	60 f3       	brcs	.-40     	; 0x15a0 <__mulsf3+0x174>
    15c8:	2b 8f       	std	Y+27, r18	; 0x1b
    15ca:	3c 8f       	std	Y+28, r19	; 0x1c
    15cc:	db 01       	movw	r26, r22
    15ce:	ca 01       	movw	r24, r20
    15d0:	8f 77       	andi	r24, 0x7F	; 127
    15d2:	90 70       	andi	r25, 0x00	; 0
    15d4:	a0 70       	andi	r26, 0x00	; 0
    15d6:	b0 70       	andi	r27, 0x00	; 0
    15d8:	80 34       	cpi	r24, 0x40	; 64
    15da:	91 05       	cpc	r25, r1
    15dc:	a1 05       	cpc	r26, r1
    15de:	b1 05       	cpc	r27, r1
    15e0:	61 f4       	brne	.+24     	; 0x15fa <__mulsf3+0x1ce>
    15e2:	47 fd       	sbrc	r20, 7
    15e4:	0a c0       	rjmp	.+20     	; 0x15fa <__mulsf3+0x1ce>
    15e6:	e1 14       	cp	r14, r1
    15e8:	f1 04       	cpc	r15, r1
    15ea:	01 05       	cpc	r16, r1
    15ec:	11 05       	cpc	r17, r1
    15ee:	29 f0       	breq	.+10     	; 0x15fa <__mulsf3+0x1ce>
    15f0:	40 5c       	subi	r20, 0xC0	; 192
    15f2:	5f 4f       	sbci	r21, 0xFF	; 255
    15f4:	6f 4f       	sbci	r22, 0xFF	; 255
    15f6:	7f 4f       	sbci	r23, 0xFF	; 255
    15f8:	40 78       	andi	r20, 0x80	; 128
    15fa:	1a 8e       	std	Y+26, r1	; 0x1a
    15fc:	fe 17       	cp	r31, r30
    15fe:	11 f0       	breq	.+4      	; 0x1604 <__mulsf3+0x1d8>
    1600:	81 e0       	ldi	r24, 0x01	; 1
    1602:	8a 8f       	std	Y+26, r24	; 0x1a
    1604:	4d 8f       	std	Y+29, r20	; 0x1d
    1606:	5e 8f       	std	Y+30, r21	; 0x1e
    1608:	6f 8f       	std	Y+31, r22	; 0x1f
    160a:	78 a3       	std	Y+32, r23	; 0x20
    160c:	83 e0       	ldi	r24, 0x03	; 3
    160e:	89 8f       	std	Y+25, r24	; 0x19
    1610:	ce 01       	movw	r24, r28
    1612:	49 96       	adiw	r24, 0x19	; 25
    1614:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__pack_f>
    1618:	a0 96       	adiw	r28, 0x20	; 32
    161a:	e2 e1       	ldi	r30, 0x12	; 18
    161c:	0c 94 e8 0f 	jmp	0x1fd0	; 0x1fd0 <__epilogue_restores__>

00001620 <__divsf3>:
    1620:	a8 e1       	ldi	r26, 0x18	; 24
    1622:	b0 e0       	ldi	r27, 0x00	; 0
    1624:	e6 e1       	ldi	r30, 0x16	; 22
    1626:	fb e0       	ldi	r31, 0x0B	; 11
    1628:	0c 94 d4 0f 	jmp	0x1fa8	; 0x1fa8 <__prologue_saves__+0x10>
    162c:	69 83       	std	Y+1, r22	; 0x01
    162e:	7a 83       	std	Y+2, r23	; 0x02
    1630:	8b 83       	std	Y+3, r24	; 0x03
    1632:	9c 83       	std	Y+4, r25	; 0x04
    1634:	2d 83       	std	Y+5, r18	; 0x05
    1636:	3e 83       	std	Y+6, r19	; 0x06
    1638:	4f 83       	std	Y+7, r20	; 0x07
    163a:	58 87       	std	Y+8, r21	; 0x08
    163c:	b9 e0       	ldi	r27, 0x09	; 9
    163e:	eb 2e       	mov	r14, r27
    1640:	f1 2c       	mov	r15, r1
    1642:	ec 0e       	add	r14, r28
    1644:	fd 1e       	adc	r15, r29
    1646:	ce 01       	movw	r24, r28
    1648:	01 96       	adiw	r24, 0x01	; 1
    164a:	b7 01       	movw	r22, r14
    164c:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    1650:	8e 01       	movw	r16, r28
    1652:	0f 5e       	subi	r16, 0xEF	; 239
    1654:	1f 4f       	sbci	r17, 0xFF	; 255
    1656:	ce 01       	movw	r24, r28
    1658:	05 96       	adiw	r24, 0x05	; 5
    165a:	b8 01       	movw	r22, r16
    165c:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    1660:	29 85       	ldd	r18, Y+9	; 0x09
    1662:	22 30       	cpi	r18, 0x02	; 2
    1664:	08 f4       	brcc	.+2      	; 0x1668 <__divsf3+0x48>
    1666:	7e c0       	rjmp	.+252    	; 0x1764 <__divsf3+0x144>
    1668:	39 89       	ldd	r19, Y+17	; 0x11
    166a:	32 30       	cpi	r19, 0x02	; 2
    166c:	10 f4       	brcc	.+4      	; 0x1672 <__divsf3+0x52>
    166e:	b8 01       	movw	r22, r16
    1670:	7c c0       	rjmp	.+248    	; 0x176a <__divsf3+0x14a>
    1672:	8a 85       	ldd	r24, Y+10	; 0x0a
    1674:	9a 89       	ldd	r25, Y+18	; 0x12
    1676:	89 27       	eor	r24, r25
    1678:	8a 87       	std	Y+10, r24	; 0x0a
    167a:	24 30       	cpi	r18, 0x04	; 4
    167c:	11 f0       	breq	.+4      	; 0x1682 <__divsf3+0x62>
    167e:	22 30       	cpi	r18, 0x02	; 2
    1680:	31 f4       	brne	.+12     	; 0x168e <__divsf3+0x6e>
    1682:	23 17       	cp	r18, r19
    1684:	09 f0       	breq	.+2      	; 0x1688 <__divsf3+0x68>
    1686:	6e c0       	rjmp	.+220    	; 0x1764 <__divsf3+0x144>
    1688:	6d e7       	ldi	r22, 0x7D	; 125
    168a:	70 e0       	ldi	r23, 0x00	; 0
    168c:	6e c0       	rjmp	.+220    	; 0x176a <__divsf3+0x14a>
    168e:	34 30       	cpi	r19, 0x04	; 4
    1690:	39 f4       	brne	.+14     	; 0x16a0 <__divsf3+0x80>
    1692:	1d 86       	std	Y+13, r1	; 0x0d
    1694:	1e 86       	std	Y+14, r1	; 0x0e
    1696:	1f 86       	std	Y+15, r1	; 0x0f
    1698:	18 8a       	std	Y+16, r1	; 0x10
    169a:	1c 86       	std	Y+12, r1	; 0x0c
    169c:	1b 86       	std	Y+11, r1	; 0x0b
    169e:	04 c0       	rjmp	.+8      	; 0x16a8 <__divsf3+0x88>
    16a0:	32 30       	cpi	r19, 0x02	; 2
    16a2:	21 f4       	brne	.+8      	; 0x16ac <__divsf3+0x8c>
    16a4:	84 e0       	ldi	r24, 0x04	; 4
    16a6:	89 87       	std	Y+9, r24	; 0x09
    16a8:	b7 01       	movw	r22, r14
    16aa:	5f c0       	rjmp	.+190    	; 0x176a <__divsf3+0x14a>
    16ac:	2b 85       	ldd	r18, Y+11	; 0x0b
    16ae:	3c 85       	ldd	r19, Y+12	; 0x0c
    16b0:	8b 89       	ldd	r24, Y+19	; 0x13
    16b2:	9c 89       	ldd	r25, Y+20	; 0x14
    16b4:	28 1b       	sub	r18, r24
    16b6:	39 0b       	sbc	r19, r25
    16b8:	3c 87       	std	Y+12, r19	; 0x0c
    16ba:	2b 87       	std	Y+11, r18	; 0x0b
    16bc:	ed 84       	ldd	r14, Y+13	; 0x0d
    16be:	fe 84       	ldd	r15, Y+14	; 0x0e
    16c0:	0f 85       	ldd	r16, Y+15	; 0x0f
    16c2:	18 89       	ldd	r17, Y+16	; 0x10
    16c4:	ad 88       	ldd	r10, Y+21	; 0x15
    16c6:	be 88       	ldd	r11, Y+22	; 0x16
    16c8:	cf 88       	ldd	r12, Y+23	; 0x17
    16ca:	d8 8c       	ldd	r13, Y+24	; 0x18
    16cc:	ea 14       	cp	r14, r10
    16ce:	fb 04       	cpc	r15, r11
    16d0:	0c 05       	cpc	r16, r12
    16d2:	1d 05       	cpc	r17, r13
    16d4:	40 f4       	brcc	.+16     	; 0x16e6 <__divsf3+0xc6>
    16d6:	ee 0c       	add	r14, r14
    16d8:	ff 1c       	adc	r15, r15
    16da:	00 1f       	adc	r16, r16
    16dc:	11 1f       	adc	r17, r17
    16de:	21 50       	subi	r18, 0x01	; 1
    16e0:	30 40       	sbci	r19, 0x00	; 0
    16e2:	3c 87       	std	Y+12, r19	; 0x0c
    16e4:	2b 87       	std	Y+11, r18	; 0x0b
    16e6:	20 e0       	ldi	r18, 0x00	; 0
    16e8:	30 e0       	ldi	r19, 0x00	; 0
    16ea:	40 e0       	ldi	r20, 0x00	; 0
    16ec:	50 e0       	ldi	r21, 0x00	; 0
    16ee:	80 e0       	ldi	r24, 0x00	; 0
    16f0:	90 e0       	ldi	r25, 0x00	; 0
    16f2:	a0 e0       	ldi	r26, 0x00	; 0
    16f4:	b0 e4       	ldi	r27, 0x40	; 64
    16f6:	60 e0       	ldi	r22, 0x00	; 0
    16f8:	70 e0       	ldi	r23, 0x00	; 0
    16fa:	ea 14       	cp	r14, r10
    16fc:	fb 04       	cpc	r15, r11
    16fe:	0c 05       	cpc	r16, r12
    1700:	1d 05       	cpc	r17, r13
    1702:	40 f0       	brcs	.+16     	; 0x1714 <__divsf3+0xf4>
    1704:	28 2b       	or	r18, r24
    1706:	39 2b       	or	r19, r25
    1708:	4a 2b       	or	r20, r26
    170a:	5b 2b       	or	r21, r27
    170c:	ea 18       	sub	r14, r10
    170e:	fb 08       	sbc	r15, r11
    1710:	0c 09       	sbc	r16, r12
    1712:	1d 09       	sbc	r17, r13
    1714:	b6 95       	lsr	r27
    1716:	a7 95       	ror	r26
    1718:	97 95       	ror	r25
    171a:	87 95       	ror	r24
    171c:	ee 0c       	add	r14, r14
    171e:	ff 1c       	adc	r15, r15
    1720:	00 1f       	adc	r16, r16
    1722:	11 1f       	adc	r17, r17
    1724:	6f 5f       	subi	r22, 0xFF	; 255
    1726:	7f 4f       	sbci	r23, 0xFF	; 255
    1728:	6f 31       	cpi	r22, 0x1F	; 31
    172a:	71 05       	cpc	r23, r1
    172c:	31 f7       	brne	.-52     	; 0x16fa <__divsf3+0xda>
    172e:	da 01       	movw	r26, r20
    1730:	c9 01       	movw	r24, r18
    1732:	8f 77       	andi	r24, 0x7F	; 127
    1734:	90 70       	andi	r25, 0x00	; 0
    1736:	a0 70       	andi	r26, 0x00	; 0
    1738:	b0 70       	andi	r27, 0x00	; 0
    173a:	80 34       	cpi	r24, 0x40	; 64
    173c:	91 05       	cpc	r25, r1
    173e:	a1 05       	cpc	r26, r1
    1740:	b1 05       	cpc	r27, r1
    1742:	61 f4       	brne	.+24     	; 0x175c <__divsf3+0x13c>
    1744:	27 fd       	sbrc	r18, 7
    1746:	0a c0       	rjmp	.+20     	; 0x175c <__divsf3+0x13c>
    1748:	e1 14       	cp	r14, r1
    174a:	f1 04       	cpc	r15, r1
    174c:	01 05       	cpc	r16, r1
    174e:	11 05       	cpc	r17, r1
    1750:	29 f0       	breq	.+10     	; 0x175c <__divsf3+0x13c>
    1752:	20 5c       	subi	r18, 0xC0	; 192
    1754:	3f 4f       	sbci	r19, 0xFF	; 255
    1756:	4f 4f       	sbci	r20, 0xFF	; 255
    1758:	5f 4f       	sbci	r21, 0xFF	; 255
    175a:	20 78       	andi	r18, 0x80	; 128
    175c:	2d 87       	std	Y+13, r18	; 0x0d
    175e:	3e 87       	std	Y+14, r19	; 0x0e
    1760:	4f 87       	std	Y+15, r20	; 0x0f
    1762:	58 8b       	std	Y+16, r21	; 0x10
    1764:	be 01       	movw	r22, r28
    1766:	67 5f       	subi	r22, 0xF7	; 247
    1768:	7f 4f       	sbci	r23, 0xFF	; 255
    176a:	cb 01       	movw	r24, r22
    176c:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__pack_f>
    1770:	68 96       	adiw	r28, 0x18	; 24
    1772:	ea e0       	ldi	r30, 0x0A	; 10
    1774:	0c 94 f0 0f 	jmp	0x1fe0	; 0x1fe0 <__epilogue_restores__+0x10>

00001778 <__eqsf2>:
    1778:	a8 e1       	ldi	r26, 0x18	; 24
    177a:	b0 e0       	ldi	r27, 0x00	; 0
    177c:	e2 ec       	ldi	r30, 0xC2	; 194
    177e:	fb e0       	ldi	r31, 0x0B	; 11
    1780:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__prologue_saves__+0x18>
    1784:	69 83       	std	Y+1, r22	; 0x01
    1786:	7a 83       	std	Y+2, r23	; 0x02
    1788:	8b 83       	std	Y+3, r24	; 0x03
    178a:	9c 83       	std	Y+4, r25	; 0x04
    178c:	2d 83       	std	Y+5, r18	; 0x05
    178e:	3e 83       	std	Y+6, r19	; 0x06
    1790:	4f 83       	std	Y+7, r20	; 0x07
    1792:	58 87       	std	Y+8, r21	; 0x08
    1794:	89 e0       	ldi	r24, 0x09	; 9
    1796:	e8 2e       	mov	r14, r24
    1798:	f1 2c       	mov	r15, r1
    179a:	ec 0e       	add	r14, r28
    179c:	fd 1e       	adc	r15, r29
    179e:	ce 01       	movw	r24, r28
    17a0:	01 96       	adiw	r24, 0x01	; 1
    17a2:	b7 01       	movw	r22, r14
    17a4:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    17a8:	8e 01       	movw	r16, r28
    17aa:	0f 5e       	subi	r16, 0xEF	; 239
    17ac:	1f 4f       	sbci	r17, 0xFF	; 255
    17ae:	ce 01       	movw	r24, r28
    17b0:	05 96       	adiw	r24, 0x05	; 5
    17b2:	b8 01       	movw	r22, r16
    17b4:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    17b8:	89 85       	ldd	r24, Y+9	; 0x09
    17ba:	82 30       	cpi	r24, 0x02	; 2
    17bc:	40 f0       	brcs	.+16     	; 0x17ce <__eqsf2+0x56>
    17be:	89 89       	ldd	r24, Y+17	; 0x11
    17c0:	82 30       	cpi	r24, 0x02	; 2
    17c2:	28 f0       	brcs	.+10     	; 0x17ce <__eqsf2+0x56>
    17c4:	c7 01       	movw	r24, r14
    17c6:	b8 01       	movw	r22, r16
    17c8:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <__fpcmp_parts_f>
    17cc:	01 c0       	rjmp	.+2      	; 0x17d0 <__eqsf2+0x58>
    17ce:	81 e0       	ldi	r24, 0x01	; 1
    17d0:	68 96       	adiw	r28, 0x18	; 24
    17d2:	e6 e0       	ldi	r30, 0x06	; 6
    17d4:	0c 94 f4 0f 	jmp	0x1fe8	; 0x1fe8 <__epilogue_restores__+0x18>

000017d8 <__gtsf2>:
    17d8:	a8 e1       	ldi	r26, 0x18	; 24
    17da:	b0 e0       	ldi	r27, 0x00	; 0
    17dc:	e2 ef       	ldi	r30, 0xF2	; 242
    17de:	fb e0       	ldi	r31, 0x0B	; 11
    17e0:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__prologue_saves__+0x18>
    17e4:	69 83       	std	Y+1, r22	; 0x01
    17e6:	7a 83       	std	Y+2, r23	; 0x02
    17e8:	8b 83       	std	Y+3, r24	; 0x03
    17ea:	9c 83       	std	Y+4, r25	; 0x04
    17ec:	2d 83       	std	Y+5, r18	; 0x05
    17ee:	3e 83       	std	Y+6, r19	; 0x06
    17f0:	4f 83       	std	Y+7, r20	; 0x07
    17f2:	58 87       	std	Y+8, r21	; 0x08
    17f4:	89 e0       	ldi	r24, 0x09	; 9
    17f6:	e8 2e       	mov	r14, r24
    17f8:	f1 2c       	mov	r15, r1
    17fa:	ec 0e       	add	r14, r28
    17fc:	fd 1e       	adc	r15, r29
    17fe:	ce 01       	movw	r24, r28
    1800:	01 96       	adiw	r24, 0x01	; 1
    1802:	b7 01       	movw	r22, r14
    1804:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    1808:	8e 01       	movw	r16, r28
    180a:	0f 5e       	subi	r16, 0xEF	; 239
    180c:	1f 4f       	sbci	r17, 0xFF	; 255
    180e:	ce 01       	movw	r24, r28
    1810:	05 96       	adiw	r24, 0x05	; 5
    1812:	b8 01       	movw	r22, r16
    1814:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    1818:	89 85       	ldd	r24, Y+9	; 0x09
    181a:	82 30       	cpi	r24, 0x02	; 2
    181c:	40 f0       	brcs	.+16     	; 0x182e <__gtsf2+0x56>
    181e:	89 89       	ldd	r24, Y+17	; 0x11
    1820:	82 30       	cpi	r24, 0x02	; 2
    1822:	28 f0       	brcs	.+10     	; 0x182e <__gtsf2+0x56>
    1824:	c7 01       	movw	r24, r14
    1826:	b8 01       	movw	r22, r16
    1828:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <__fpcmp_parts_f>
    182c:	01 c0       	rjmp	.+2      	; 0x1830 <__gtsf2+0x58>
    182e:	8f ef       	ldi	r24, 0xFF	; 255
    1830:	68 96       	adiw	r28, 0x18	; 24
    1832:	e6 e0       	ldi	r30, 0x06	; 6
    1834:	0c 94 f4 0f 	jmp	0x1fe8	; 0x1fe8 <__epilogue_restores__+0x18>

00001838 <__gesf2>:
    1838:	a8 e1       	ldi	r26, 0x18	; 24
    183a:	b0 e0       	ldi	r27, 0x00	; 0
    183c:	e2 e2       	ldi	r30, 0x22	; 34
    183e:	fc e0       	ldi	r31, 0x0C	; 12
    1840:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__prologue_saves__+0x18>
    1844:	69 83       	std	Y+1, r22	; 0x01
    1846:	7a 83       	std	Y+2, r23	; 0x02
    1848:	8b 83       	std	Y+3, r24	; 0x03
    184a:	9c 83       	std	Y+4, r25	; 0x04
    184c:	2d 83       	std	Y+5, r18	; 0x05
    184e:	3e 83       	std	Y+6, r19	; 0x06
    1850:	4f 83       	std	Y+7, r20	; 0x07
    1852:	58 87       	std	Y+8, r21	; 0x08
    1854:	89 e0       	ldi	r24, 0x09	; 9
    1856:	e8 2e       	mov	r14, r24
    1858:	f1 2c       	mov	r15, r1
    185a:	ec 0e       	add	r14, r28
    185c:	fd 1e       	adc	r15, r29
    185e:	ce 01       	movw	r24, r28
    1860:	01 96       	adiw	r24, 0x01	; 1
    1862:	b7 01       	movw	r22, r14
    1864:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    1868:	8e 01       	movw	r16, r28
    186a:	0f 5e       	subi	r16, 0xEF	; 239
    186c:	1f 4f       	sbci	r17, 0xFF	; 255
    186e:	ce 01       	movw	r24, r28
    1870:	05 96       	adiw	r24, 0x05	; 5
    1872:	b8 01       	movw	r22, r16
    1874:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    1878:	89 85       	ldd	r24, Y+9	; 0x09
    187a:	82 30       	cpi	r24, 0x02	; 2
    187c:	40 f0       	brcs	.+16     	; 0x188e <__gesf2+0x56>
    187e:	89 89       	ldd	r24, Y+17	; 0x11
    1880:	82 30       	cpi	r24, 0x02	; 2
    1882:	28 f0       	brcs	.+10     	; 0x188e <__gesf2+0x56>
    1884:	c7 01       	movw	r24, r14
    1886:	b8 01       	movw	r22, r16
    1888:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <__fpcmp_parts_f>
    188c:	01 c0       	rjmp	.+2      	; 0x1890 <__gesf2+0x58>
    188e:	8f ef       	ldi	r24, 0xFF	; 255
    1890:	68 96       	adiw	r28, 0x18	; 24
    1892:	e6 e0       	ldi	r30, 0x06	; 6
    1894:	0c 94 f4 0f 	jmp	0x1fe8	; 0x1fe8 <__epilogue_restores__+0x18>

00001898 <__ltsf2>:
    1898:	a8 e1       	ldi	r26, 0x18	; 24
    189a:	b0 e0       	ldi	r27, 0x00	; 0
    189c:	e2 e5       	ldi	r30, 0x52	; 82
    189e:	fc e0       	ldi	r31, 0x0C	; 12
    18a0:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__prologue_saves__+0x18>
    18a4:	69 83       	std	Y+1, r22	; 0x01
    18a6:	7a 83       	std	Y+2, r23	; 0x02
    18a8:	8b 83       	std	Y+3, r24	; 0x03
    18aa:	9c 83       	std	Y+4, r25	; 0x04
    18ac:	2d 83       	std	Y+5, r18	; 0x05
    18ae:	3e 83       	std	Y+6, r19	; 0x06
    18b0:	4f 83       	std	Y+7, r20	; 0x07
    18b2:	58 87       	std	Y+8, r21	; 0x08
    18b4:	89 e0       	ldi	r24, 0x09	; 9
    18b6:	e8 2e       	mov	r14, r24
    18b8:	f1 2c       	mov	r15, r1
    18ba:	ec 0e       	add	r14, r28
    18bc:	fd 1e       	adc	r15, r29
    18be:	ce 01       	movw	r24, r28
    18c0:	01 96       	adiw	r24, 0x01	; 1
    18c2:	b7 01       	movw	r22, r14
    18c4:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    18c8:	8e 01       	movw	r16, r28
    18ca:	0f 5e       	subi	r16, 0xEF	; 239
    18cc:	1f 4f       	sbci	r17, 0xFF	; 255
    18ce:	ce 01       	movw	r24, r28
    18d0:	05 96       	adiw	r24, 0x05	; 5
    18d2:	b8 01       	movw	r22, r16
    18d4:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    18d8:	89 85       	ldd	r24, Y+9	; 0x09
    18da:	82 30       	cpi	r24, 0x02	; 2
    18dc:	40 f0       	brcs	.+16     	; 0x18ee <__ltsf2+0x56>
    18de:	89 89       	ldd	r24, Y+17	; 0x11
    18e0:	82 30       	cpi	r24, 0x02	; 2
    18e2:	28 f0       	brcs	.+10     	; 0x18ee <__ltsf2+0x56>
    18e4:	c7 01       	movw	r24, r14
    18e6:	b8 01       	movw	r22, r16
    18e8:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <__fpcmp_parts_f>
    18ec:	01 c0       	rjmp	.+2      	; 0x18f0 <__ltsf2+0x58>
    18ee:	81 e0       	ldi	r24, 0x01	; 1
    18f0:	68 96       	adiw	r28, 0x18	; 24
    18f2:	e6 e0       	ldi	r30, 0x06	; 6
    18f4:	0c 94 f4 0f 	jmp	0x1fe8	; 0x1fe8 <__epilogue_restores__+0x18>

000018f8 <__lesf2>:
    18f8:	a8 e1       	ldi	r26, 0x18	; 24
    18fa:	b0 e0       	ldi	r27, 0x00	; 0
    18fc:	e2 e8       	ldi	r30, 0x82	; 130
    18fe:	fc e0       	ldi	r31, 0x0C	; 12
    1900:	0c 94 d8 0f 	jmp	0x1fb0	; 0x1fb0 <__prologue_saves__+0x18>
    1904:	69 83       	std	Y+1, r22	; 0x01
    1906:	7a 83       	std	Y+2, r23	; 0x02
    1908:	8b 83       	std	Y+3, r24	; 0x03
    190a:	9c 83       	std	Y+4, r25	; 0x04
    190c:	2d 83       	std	Y+5, r18	; 0x05
    190e:	3e 83       	std	Y+6, r19	; 0x06
    1910:	4f 83       	std	Y+7, r20	; 0x07
    1912:	58 87       	std	Y+8, r21	; 0x08
    1914:	89 e0       	ldi	r24, 0x09	; 9
    1916:	e8 2e       	mov	r14, r24
    1918:	f1 2c       	mov	r15, r1
    191a:	ec 0e       	add	r14, r28
    191c:	fd 1e       	adc	r15, r29
    191e:	ce 01       	movw	r24, r28
    1920:	01 96       	adiw	r24, 0x01	; 1
    1922:	b7 01       	movw	r22, r14
    1924:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    1928:	8e 01       	movw	r16, r28
    192a:	0f 5e       	subi	r16, 0xEF	; 239
    192c:	1f 4f       	sbci	r17, 0xFF	; 255
    192e:	ce 01       	movw	r24, r28
    1930:	05 96       	adiw	r24, 0x05	; 5
    1932:	b8 01       	movw	r22, r16
    1934:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    1938:	89 85       	ldd	r24, Y+9	; 0x09
    193a:	82 30       	cpi	r24, 0x02	; 2
    193c:	40 f0       	brcs	.+16     	; 0x194e <__lesf2+0x56>
    193e:	89 89       	ldd	r24, Y+17	; 0x11
    1940:	82 30       	cpi	r24, 0x02	; 2
    1942:	28 f0       	brcs	.+10     	; 0x194e <__lesf2+0x56>
    1944:	c7 01       	movw	r24, r14
    1946:	b8 01       	movw	r22, r16
    1948:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <__fpcmp_parts_f>
    194c:	01 c0       	rjmp	.+2      	; 0x1950 <__lesf2+0x58>
    194e:	81 e0       	ldi	r24, 0x01	; 1
    1950:	68 96       	adiw	r28, 0x18	; 24
    1952:	e6 e0       	ldi	r30, 0x06	; 6
    1954:	0c 94 f4 0f 	jmp	0x1fe8	; 0x1fe8 <__epilogue_restores__+0x18>

00001958 <__floatsisf>:
    1958:	a8 e0       	ldi	r26, 0x08	; 8
    195a:	b0 e0       	ldi	r27, 0x00	; 0
    195c:	e2 eb       	ldi	r30, 0xB2	; 178
    195e:	fc e0       	ldi	r31, 0x0C	; 12
    1960:	0c 94 d5 0f 	jmp	0x1faa	; 0x1faa <__prologue_saves__+0x12>
    1964:	9b 01       	movw	r18, r22
    1966:	ac 01       	movw	r20, r24
    1968:	83 e0       	ldi	r24, 0x03	; 3
    196a:	89 83       	std	Y+1, r24	; 0x01
    196c:	da 01       	movw	r26, r20
    196e:	c9 01       	movw	r24, r18
    1970:	88 27       	eor	r24, r24
    1972:	b7 fd       	sbrc	r27, 7
    1974:	83 95       	inc	r24
    1976:	99 27       	eor	r25, r25
    1978:	aa 27       	eor	r26, r26
    197a:	bb 27       	eor	r27, r27
    197c:	b8 2e       	mov	r11, r24
    197e:	21 15       	cp	r18, r1
    1980:	31 05       	cpc	r19, r1
    1982:	41 05       	cpc	r20, r1
    1984:	51 05       	cpc	r21, r1
    1986:	19 f4       	brne	.+6      	; 0x198e <__floatsisf+0x36>
    1988:	82 e0       	ldi	r24, 0x02	; 2
    198a:	89 83       	std	Y+1, r24	; 0x01
    198c:	3a c0       	rjmp	.+116    	; 0x1a02 <__floatsisf+0xaa>
    198e:	88 23       	and	r24, r24
    1990:	a9 f0       	breq	.+42     	; 0x19bc <__floatsisf+0x64>
    1992:	20 30       	cpi	r18, 0x00	; 0
    1994:	80 e0       	ldi	r24, 0x00	; 0
    1996:	38 07       	cpc	r19, r24
    1998:	80 e0       	ldi	r24, 0x00	; 0
    199a:	48 07       	cpc	r20, r24
    199c:	80 e8       	ldi	r24, 0x80	; 128
    199e:	58 07       	cpc	r21, r24
    19a0:	29 f4       	brne	.+10     	; 0x19ac <__floatsisf+0x54>
    19a2:	60 e0       	ldi	r22, 0x00	; 0
    19a4:	70 e0       	ldi	r23, 0x00	; 0
    19a6:	80 e0       	ldi	r24, 0x00	; 0
    19a8:	9f ec       	ldi	r25, 0xCF	; 207
    19aa:	30 c0       	rjmp	.+96     	; 0x1a0c <__floatsisf+0xb4>
    19ac:	ee 24       	eor	r14, r14
    19ae:	ff 24       	eor	r15, r15
    19b0:	87 01       	movw	r16, r14
    19b2:	e2 1a       	sub	r14, r18
    19b4:	f3 0a       	sbc	r15, r19
    19b6:	04 0b       	sbc	r16, r20
    19b8:	15 0b       	sbc	r17, r21
    19ba:	02 c0       	rjmp	.+4      	; 0x19c0 <__floatsisf+0x68>
    19bc:	79 01       	movw	r14, r18
    19be:	8a 01       	movw	r16, r20
    19c0:	8e e1       	ldi	r24, 0x1E	; 30
    19c2:	c8 2e       	mov	r12, r24
    19c4:	d1 2c       	mov	r13, r1
    19c6:	dc 82       	std	Y+4, r13	; 0x04
    19c8:	cb 82       	std	Y+3, r12	; 0x03
    19ca:	ed 82       	std	Y+5, r14	; 0x05
    19cc:	fe 82       	std	Y+6, r15	; 0x06
    19ce:	0f 83       	std	Y+7, r16	; 0x07
    19d0:	18 87       	std	Y+8, r17	; 0x08
    19d2:	c8 01       	movw	r24, r16
    19d4:	b7 01       	movw	r22, r14
    19d6:	0e 94 d7 0d 	call	0x1bae	; 0x1bae <__clzsi2>
    19da:	01 97       	sbiw	r24, 0x01	; 1
    19dc:	18 16       	cp	r1, r24
    19de:	19 06       	cpc	r1, r25
    19e0:	84 f4       	brge	.+32     	; 0x1a02 <__floatsisf+0xaa>
    19e2:	08 2e       	mov	r0, r24
    19e4:	04 c0       	rjmp	.+8      	; 0x19ee <__floatsisf+0x96>
    19e6:	ee 0c       	add	r14, r14
    19e8:	ff 1c       	adc	r15, r15
    19ea:	00 1f       	adc	r16, r16
    19ec:	11 1f       	adc	r17, r17
    19ee:	0a 94       	dec	r0
    19f0:	d2 f7       	brpl	.-12     	; 0x19e6 <__floatsisf+0x8e>
    19f2:	ed 82       	std	Y+5, r14	; 0x05
    19f4:	fe 82       	std	Y+6, r15	; 0x06
    19f6:	0f 83       	std	Y+7, r16	; 0x07
    19f8:	18 87       	std	Y+8, r17	; 0x08
    19fa:	c8 1a       	sub	r12, r24
    19fc:	d9 0a       	sbc	r13, r25
    19fe:	dc 82       	std	Y+4, r13	; 0x04
    1a00:	cb 82       	std	Y+3, r12	; 0x03
    1a02:	ba 82       	std	Y+2, r11	; 0x02
    1a04:	ce 01       	movw	r24, r28
    1a06:	01 96       	adiw	r24, 0x01	; 1
    1a08:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__pack_f>
    1a0c:	28 96       	adiw	r28, 0x08	; 8
    1a0e:	e9 e0       	ldi	r30, 0x09	; 9
    1a10:	0c 94 f1 0f 	jmp	0x1fe2	; 0x1fe2 <__epilogue_restores__+0x12>

00001a14 <__fixsfsi>:
    1a14:	ac e0       	ldi	r26, 0x0C	; 12
    1a16:	b0 e0       	ldi	r27, 0x00	; 0
    1a18:	e0 e1       	ldi	r30, 0x10	; 16
    1a1a:	fd e0       	ldi	r31, 0x0D	; 13
    1a1c:	0c 94 dc 0f 	jmp	0x1fb8	; 0x1fb8 <__prologue_saves__+0x20>
    1a20:	69 83       	std	Y+1, r22	; 0x01
    1a22:	7a 83       	std	Y+2, r23	; 0x02
    1a24:	8b 83       	std	Y+3, r24	; 0x03
    1a26:	9c 83       	std	Y+4, r25	; 0x04
    1a28:	ce 01       	movw	r24, r28
    1a2a:	01 96       	adiw	r24, 0x01	; 1
    1a2c:	be 01       	movw	r22, r28
    1a2e:	6b 5f       	subi	r22, 0xFB	; 251
    1a30:	7f 4f       	sbci	r23, 0xFF	; 255
    1a32:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__unpack_f>
    1a36:	8d 81       	ldd	r24, Y+5	; 0x05
    1a38:	82 30       	cpi	r24, 0x02	; 2
    1a3a:	61 f1       	breq	.+88     	; 0x1a94 <__fixsfsi+0x80>
    1a3c:	82 30       	cpi	r24, 0x02	; 2
    1a3e:	50 f1       	brcs	.+84     	; 0x1a94 <__fixsfsi+0x80>
    1a40:	84 30       	cpi	r24, 0x04	; 4
    1a42:	21 f4       	brne	.+8      	; 0x1a4c <__fixsfsi+0x38>
    1a44:	8e 81       	ldd	r24, Y+6	; 0x06
    1a46:	88 23       	and	r24, r24
    1a48:	51 f1       	breq	.+84     	; 0x1a9e <__fixsfsi+0x8a>
    1a4a:	2e c0       	rjmp	.+92     	; 0x1aa8 <__fixsfsi+0x94>
    1a4c:	2f 81       	ldd	r18, Y+7	; 0x07
    1a4e:	38 85       	ldd	r19, Y+8	; 0x08
    1a50:	37 fd       	sbrc	r19, 7
    1a52:	20 c0       	rjmp	.+64     	; 0x1a94 <__fixsfsi+0x80>
    1a54:	6e 81       	ldd	r22, Y+6	; 0x06
    1a56:	2f 31       	cpi	r18, 0x1F	; 31
    1a58:	31 05       	cpc	r19, r1
    1a5a:	1c f0       	brlt	.+6      	; 0x1a62 <__fixsfsi+0x4e>
    1a5c:	66 23       	and	r22, r22
    1a5e:	f9 f0       	breq	.+62     	; 0x1a9e <__fixsfsi+0x8a>
    1a60:	23 c0       	rjmp	.+70     	; 0x1aa8 <__fixsfsi+0x94>
    1a62:	8e e1       	ldi	r24, 0x1E	; 30
    1a64:	90 e0       	ldi	r25, 0x00	; 0
    1a66:	82 1b       	sub	r24, r18
    1a68:	93 0b       	sbc	r25, r19
    1a6a:	29 85       	ldd	r18, Y+9	; 0x09
    1a6c:	3a 85       	ldd	r19, Y+10	; 0x0a
    1a6e:	4b 85       	ldd	r20, Y+11	; 0x0b
    1a70:	5c 85       	ldd	r21, Y+12	; 0x0c
    1a72:	04 c0       	rjmp	.+8      	; 0x1a7c <__fixsfsi+0x68>
    1a74:	56 95       	lsr	r21
    1a76:	47 95       	ror	r20
    1a78:	37 95       	ror	r19
    1a7a:	27 95       	ror	r18
    1a7c:	8a 95       	dec	r24
    1a7e:	d2 f7       	brpl	.-12     	; 0x1a74 <__fixsfsi+0x60>
    1a80:	66 23       	and	r22, r22
    1a82:	b1 f0       	breq	.+44     	; 0x1ab0 <__fixsfsi+0x9c>
    1a84:	50 95       	com	r21
    1a86:	40 95       	com	r20
    1a88:	30 95       	com	r19
    1a8a:	21 95       	neg	r18
    1a8c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a8e:	4f 4f       	sbci	r20, 0xFF	; 255
    1a90:	5f 4f       	sbci	r21, 0xFF	; 255
    1a92:	0e c0       	rjmp	.+28     	; 0x1ab0 <__fixsfsi+0x9c>
    1a94:	20 e0       	ldi	r18, 0x00	; 0
    1a96:	30 e0       	ldi	r19, 0x00	; 0
    1a98:	40 e0       	ldi	r20, 0x00	; 0
    1a9a:	50 e0       	ldi	r21, 0x00	; 0
    1a9c:	09 c0       	rjmp	.+18     	; 0x1ab0 <__fixsfsi+0x9c>
    1a9e:	2f ef       	ldi	r18, 0xFF	; 255
    1aa0:	3f ef       	ldi	r19, 0xFF	; 255
    1aa2:	4f ef       	ldi	r20, 0xFF	; 255
    1aa4:	5f e7       	ldi	r21, 0x7F	; 127
    1aa6:	04 c0       	rjmp	.+8      	; 0x1ab0 <__fixsfsi+0x9c>
    1aa8:	20 e0       	ldi	r18, 0x00	; 0
    1aaa:	30 e0       	ldi	r19, 0x00	; 0
    1aac:	40 e0       	ldi	r20, 0x00	; 0
    1aae:	50 e8       	ldi	r21, 0x80	; 128
    1ab0:	b9 01       	movw	r22, r18
    1ab2:	ca 01       	movw	r24, r20
    1ab4:	2c 96       	adiw	r28, 0x0c	; 12
    1ab6:	e2 e0       	ldi	r30, 0x02	; 2
    1ab8:	0c 94 f8 0f 	jmp	0x1ff0	; 0x1ff0 <__epilogue_restores__+0x20>

00001abc <__floatunsisf>:
    1abc:	a8 e0       	ldi	r26, 0x08	; 8
    1abe:	b0 e0       	ldi	r27, 0x00	; 0
    1ac0:	e4 e6       	ldi	r30, 0x64	; 100
    1ac2:	fd e0       	ldi	r31, 0x0D	; 13
    1ac4:	0c 94 d4 0f 	jmp	0x1fa8	; 0x1fa8 <__prologue_saves__+0x10>
    1ac8:	7b 01       	movw	r14, r22
    1aca:	8c 01       	movw	r16, r24
    1acc:	61 15       	cp	r22, r1
    1ace:	71 05       	cpc	r23, r1
    1ad0:	81 05       	cpc	r24, r1
    1ad2:	91 05       	cpc	r25, r1
    1ad4:	19 f4       	brne	.+6      	; 0x1adc <__floatunsisf+0x20>
    1ad6:	82 e0       	ldi	r24, 0x02	; 2
    1ad8:	89 83       	std	Y+1, r24	; 0x01
    1ada:	60 c0       	rjmp	.+192    	; 0x1b9c <__floatunsisf+0xe0>
    1adc:	83 e0       	ldi	r24, 0x03	; 3
    1ade:	89 83       	std	Y+1, r24	; 0x01
    1ae0:	8e e1       	ldi	r24, 0x1E	; 30
    1ae2:	c8 2e       	mov	r12, r24
    1ae4:	d1 2c       	mov	r13, r1
    1ae6:	dc 82       	std	Y+4, r13	; 0x04
    1ae8:	cb 82       	std	Y+3, r12	; 0x03
    1aea:	ed 82       	std	Y+5, r14	; 0x05
    1aec:	fe 82       	std	Y+6, r15	; 0x06
    1aee:	0f 83       	std	Y+7, r16	; 0x07
    1af0:	18 87       	std	Y+8, r17	; 0x08
    1af2:	c8 01       	movw	r24, r16
    1af4:	b7 01       	movw	r22, r14
    1af6:	0e 94 d7 0d 	call	0x1bae	; 0x1bae <__clzsi2>
    1afa:	fc 01       	movw	r30, r24
    1afc:	31 97       	sbiw	r30, 0x01	; 1
    1afe:	f7 ff       	sbrs	r31, 7
    1b00:	3b c0       	rjmp	.+118    	; 0x1b78 <__floatunsisf+0xbc>
    1b02:	22 27       	eor	r18, r18
    1b04:	33 27       	eor	r19, r19
    1b06:	2e 1b       	sub	r18, r30
    1b08:	3f 0b       	sbc	r19, r31
    1b0a:	57 01       	movw	r10, r14
    1b0c:	68 01       	movw	r12, r16
    1b0e:	02 2e       	mov	r0, r18
    1b10:	04 c0       	rjmp	.+8      	; 0x1b1a <__floatunsisf+0x5e>
    1b12:	d6 94       	lsr	r13
    1b14:	c7 94       	ror	r12
    1b16:	b7 94       	ror	r11
    1b18:	a7 94       	ror	r10
    1b1a:	0a 94       	dec	r0
    1b1c:	d2 f7       	brpl	.-12     	; 0x1b12 <__floatunsisf+0x56>
    1b1e:	40 e0       	ldi	r20, 0x00	; 0
    1b20:	50 e0       	ldi	r21, 0x00	; 0
    1b22:	60 e0       	ldi	r22, 0x00	; 0
    1b24:	70 e0       	ldi	r23, 0x00	; 0
    1b26:	81 e0       	ldi	r24, 0x01	; 1
    1b28:	90 e0       	ldi	r25, 0x00	; 0
    1b2a:	a0 e0       	ldi	r26, 0x00	; 0
    1b2c:	b0 e0       	ldi	r27, 0x00	; 0
    1b2e:	04 c0       	rjmp	.+8      	; 0x1b38 <__floatunsisf+0x7c>
    1b30:	88 0f       	add	r24, r24
    1b32:	99 1f       	adc	r25, r25
    1b34:	aa 1f       	adc	r26, r26
    1b36:	bb 1f       	adc	r27, r27
    1b38:	2a 95       	dec	r18
    1b3a:	d2 f7       	brpl	.-12     	; 0x1b30 <__floatunsisf+0x74>
    1b3c:	01 97       	sbiw	r24, 0x01	; 1
    1b3e:	a1 09       	sbc	r26, r1
    1b40:	b1 09       	sbc	r27, r1
    1b42:	8e 21       	and	r24, r14
    1b44:	9f 21       	and	r25, r15
    1b46:	a0 23       	and	r26, r16
    1b48:	b1 23       	and	r27, r17
    1b4a:	00 97       	sbiw	r24, 0x00	; 0
    1b4c:	a1 05       	cpc	r26, r1
    1b4e:	b1 05       	cpc	r27, r1
    1b50:	21 f0       	breq	.+8      	; 0x1b5a <__floatunsisf+0x9e>
    1b52:	41 e0       	ldi	r20, 0x01	; 1
    1b54:	50 e0       	ldi	r21, 0x00	; 0
    1b56:	60 e0       	ldi	r22, 0x00	; 0
    1b58:	70 e0       	ldi	r23, 0x00	; 0
    1b5a:	4a 29       	or	r20, r10
    1b5c:	5b 29       	or	r21, r11
    1b5e:	6c 29       	or	r22, r12
    1b60:	7d 29       	or	r23, r13
    1b62:	4d 83       	std	Y+5, r20	; 0x05
    1b64:	5e 83       	std	Y+6, r21	; 0x06
    1b66:	6f 83       	std	Y+7, r22	; 0x07
    1b68:	78 87       	std	Y+8, r23	; 0x08
    1b6a:	8e e1       	ldi	r24, 0x1E	; 30
    1b6c:	90 e0       	ldi	r25, 0x00	; 0
    1b6e:	8e 1b       	sub	r24, r30
    1b70:	9f 0b       	sbc	r25, r31
    1b72:	9c 83       	std	Y+4, r25	; 0x04
    1b74:	8b 83       	std	Y+3, r24	; 0x03
    1b76:	12 c0       	rjmp	.+36     	; 0x1b9c <__floatunsisf+0xe0>
    1b78:	30 97       	sbiw	r30, 0x00	; 0
    1b7a:	81 f0       	breq	.+32     	; 0x1b9c <__floatunsisf+0xe0>
    1b7c:	0e 2e       	mov	r0, r30
    1b7e:	04 c0       	rjmp	.+8      	; 0x1b88 <__floatunsisf+0xcc>
    1b80:	ee 0c       	add	r14, r14
    1b82:	ff 1c       	adc	r15, r15
    1b84:	00 1f       	adc	r16, r16
    1b86:	11 1f       	adc	r17, r17
    1b88:	0a 94       	dec	r0
    1b8a:	d2 f7       	brpl	.-12     	; 0x1b80 <__floatunsisf+0xc4>
    1b8c:	ed 82       	std	Y+5, r14	; 0x05
    1b8e:	fe 82       	std	Y+6, r15	; 0x06
    1b90:	0f 83       	std	Y+7, r16	; 0x07
    1b92:	18 87       	std	Y+8, r17	; 0x08
    1b94:	ce 1a       	sub	r12, r30
    1b96:	df 0a       	sbc	r13, r31
    1b98:	dc 82       	std	Y+4, r13	; 0x04
    1b9a:	cb 82       	std	Y+3, r12	; 0x03
    1b9c:	1a 82       	std	Y+2, r1	; 0x02
    1b9e:	ce 01       	movw	r24, r28
    1ba0:	01 96       	adiw	r24, 0x01	; 1
    1ba2:	0e 94 26 0e 	call	0x1c4c	; 0x1c4c <__pack_f>
    1ba6:	28 96       	adiw	r28, 0x08	; 8
    1ba8:	ea e0       	ldi	r30, 0x0A	; 10
    1baa:	0c 94 f0 0f 	jmp	0x1fe0	; 0x1fe0 <__epilogue_restores__+0x10>

00001bae <__clzsi2>:
    1bae:	ef 92       	push	r14
    1bb0:	ff 92       	push	r15
    1bb2:	0f 93       	push	r16
    1bb4:	1f 93       	push	r17
    1bb6:	7b 01       	movw	r14, r22
    1bb8:	8c 01       	movw	r16, r24
    1bba:	80 e0       	ldi	r24, 0x00	; 0
    1bbc:	e8 16       	cp	r14, r24
    1bbe:	80 e0       	ldi	r24, 0x00	; 0
    1bc0:	f8 06       	cpc	r15, r24
    1bc2:	81 e0       	ldi	r24, 0x01	; 1
    1bc4:	08 07       	cpc	r16, r24
    1bc6:	80 e0       	ldi	r24, 0x00	; 0
    1bc8:	18 07       	cpc	r17, r24
    1bca:	88 f4       	brcc	.+34     	; 0x1bee <__clzsi2+0x40>
    1bcc:	8f ef       	ldi	r24, 0xFF	; 255
    1bce:	e8 16       	cp	r14, r24
    1bd0:	f1 04       	cpc	r15, r1
    1bd2:	01 05       	cpc	r16, r1
    1bd4:	11 05       	cpc	r17, r1
    1bd6:	31 f0       	breq	.+12     	; 0x1be4 <__clzsi2+0x36>
    1bd8:	28 f0       	brcs	.+10     	; 0x1be4 <__clzsi2+0x36>
    1bda:	88 e0       	ldi	r24, 0x08	; 8
    1bdc:	90 e0       	ldi	r25, 0x00	; 0
    1bde:	a0 e0       	ldi	r26, 0x00	; 0
    1be0:	b0 e0       	ldi	r27, 0x00	; 0
    1be2:	17 c0       	rjmp	.+46     	; 0x1c12 <__clzsi2+0x64>
    1be4:	80 e0       	ldi	r24, 0x00	; 0
    1be6:	90 e0       	ldi	r25, 0x00	; 0
    1be8:	a0 e0       	ldi	r26, 0x00	; 0
    1bea:	b0 e0       	ldi	r27, 0x00	; 0
    1bec:	12 c0       	rjmp	.+36     	; 0x1c12 <__clzsi2+0x64>
    1bee:	80 e0       	ldi	r24, 0x00	; 0
    1bf0:	e8 16       	cp	r14, r24
    1bf2:	80 e0       	ldi	r24, 0x00	; 0
    1bf4:	f8 06       	cpc	r15, r24
    1bf6:	80 e0       	ldi	r24, 0x00	; 0
    1bf8:	08 07       	cpc	r16, r24
    1bfa:	81 e0       	ldi	r24, 0x01	; 1
    1bfc:	18 07       	cpc	r17, r24
    1bfe:	28 f0       	brcs	.+10     	; 0x1c0a <__clzsi2+0x5c>
    1c00:	88 e1       	ldi	r24, 0x18	; 24
    1c02:	90 e0       	ldi	r25, 0x00	; 0
    1c04:	a0 e0       	ldi	r26, 0x00	; 0
    1c06:	b0 e0       	ldi	r27, 0x00	; 0
    1c08:	04 c0       	rjmp	.+8      	; 0x1c12 <__clzsi2+0x64>
    1c0a:	80 e1       	ldi	r24, 0x10	; 16
    1c0c:	90 e0       	ldi	r25, 0x00	; 0
    1c0e:	a0 e0       	ldi	r26, 0x00	; 0
    1c10:	b0 e0       	ldi	r27, 0x00	; 0
    1c12:	20 e2       	ldi	r18, 0x20	; 32
    1c14:	30 e0       	ldi	r19, 0x00	; 0
    1c16:	40 e0       	ldi	r20, 0x00	; 0
    1c18:	50 e0       	ldi	r21, 0x00	; 0
    1c1a:	28 1b       	sub	r18, r24
    1c1c:	39 0b       	sbc	r19, r25
    1c1e:	4a 0b       	sbc	r20, r26
    1c20:	5b 0b       	sbc	r21, r27
    1c22:	04 c0       	rjmp	.+8      	; 0x1c2c <__clzsi2+0x7e>
    1c24:	16 95       	lsr	r17
    1c26:	07 95       	ror	r16
    1c28:	f7 94       	ror	r15
    1c2a:	e7 94       	ror	r14
    1c2c:	8a 95       	dec	r24
    1c2e:	d2 f7       	brpl	.-12     	; 0x1c24 <__clzsi2+0x76>
    1c30:	f7 01       	movw	r30, r14
    1c32:	eb 57       	subi	r30, 0x7B	; 123
    1c34:	ff 4f       	sbci	r31, 0xFF	; 255
    1c36:	80 81       	ld	r24, Z
    1c38:	28 1b       	sub	r18, r24
    1c3a:	31 09       	sbc	r19, r1
    1c3c:	41 09       	sbc	r20, r1
    1c3e:	51 09       	sbc	r21, r1
    1c40:	c9 01       	movw	r24, r18
    1c42:	1f 91       	pop	r17
    1c44:	0f 91       	pop	r16
    1c46:	ff 90       	pop	r15
    1c48:	ef 90       	pop	r14
    1c4a:	08 95       	ret

00001c4c <__pack_f>:
    1c4c:	df 92       	push	r13
    1c4e:	ef 92       	push	r14
    1c50:	ff 92       	push	r15
    1c52:	0f 93       	push	r16
    1c54:	1f 93       	push	r17
    1c56:	fc 01       	movw	r30, r24
    1c58:	e4 80       	ldd	r14, Z+4	; 0x04
    1c5a:	f5 80       	ldd	r15, Z+5	; 0x05
    1c5c:	06 81       	ldd	r16, Z+6	; 0x06
    1c5e:	17 81       	ldd	r17, Z+7	; 0x07
    1c60:	d1 80       	ldd	r13, Z+1	; 0x01
    1c62:	80 81       	ld	r24, Z
    1c64:	82 30       	cpi	r24, 0x02	; 2
    1c66:	48 f4       	brcc	.+18     	; 0x1c7a <__pack_f+0x2e>
    1c68:	80 e0       	ldi	r24, 0x00	; 0
    1c6a:	90 e0       	ldi	r25, 0x00	; 0
    1c6c:	a0 e1       	ldi	r26, 0x10	; 16
    1c6e:	b0 e0       	ldi	r27, 0x00	; 0
    1c70:	e8 2a       	or	r14, r24
    1c72:	f9 2a       	or	r15, r25
    1c74:	0a 2b       	or	r16, r26
    1c76:	1b 2b       	or	r17, r27
    1c78:	a5 c0       	rjmp	.+330    	; 0x1dc4 <__pack_f+0x178>
    1c7a:	84 30       	cpi	r24, 0x04	; 4
    1c7c:	09 f4       	brne	.+2      	; 0x1c80 <__pack_f+0x34>
    1c7e:	9f c0       	rjmp	.+318    	; 0x1dbe <__pack_f+0x172>
    1c80:	82 30       	cpi	r24, 0x02	; 2
    1c82:	21 f4       	brne	.+8      	; 0x1c8c <__pack_f+0x40>
    1c84:	ee 24       	eor	r14, r14
    1c86:	ff 24       	eor	r15, r15
    1c88:	87 01       	movw	r16, r14
    1c8a:	05 c0       	rjmp	.+10     	; 0x1c96 <__pack_f+0x4a>
    1c8c:	e1 14       	cp	r14, r1
    1c8e:	f1 04       	cpc	r15, r1
    1c90:	01 05       	cpc	r16, r1
    1c92:	11 05       	cpc	r17, r1
    1c94:	19 f4       	brne	.+6      	; 0x1c9c <__pack_f+0x50>
    1c96:	e0 e0       	ldi	r30, 0x00	; 0
    1c98:	f0 e0       	ldi	r31, 0x00	; 0
    1c9a:	96 c0       	rjmp	.+300    	; 0x1dc8 <__pack_f+0x17c>
    1c9c:	62 81       	ldd	r22, Z+2	; 0x02
    1c9e:	73 81       	ldd	r23, Z+3	; 0x03
    1ca0:	9f ef       	ldi	r25, 0xFF	; 255
    1ca2:	62 38       	cpi	r22, 0x82	; 130
    1ca4:	79 07       	cpc	r23, r25
    1ca6:	0c f0       	brlt	.+2      	; 0x1caa <__pack_f+0x5e>
    1ca8:	5b c0       	rjmp	.+182    	; 0x1d60 <__pack_f+0x114>
    1caa:	22 e8       	ldi	r18, 0x82	; 130
    1cac:	3f ef       	ldi	r19, 0xFF	; 255
    1cae:	26 1b       	sub	r18, r22
    1cb0:	37 0b       	sbc	r19, r23
    1cb2:	2a 31       	cpi	r18, 0x1A	; 26
    1cb4:	31 05       	cpc	r19, r1
    1cb6:	2c f0       	brlt	.+10     	; 0x1cc2 <__pack_f+0x76>
    1cb8:	20 e0       	ldi	r18, 0x00	; 0
    1cba:	30 e0       	ldi	r19, 0x00	; 0
    1cbc:	40 e0       	ldi	r20, 0x00	; 0
    1cbe:	50 e0       	ldi	r21, 0x00	; 0
    1cc0:	2a c0       	rjmp	.+84     	; 0x1d16 <__pack_f+0xca>
    1cc2:	b8 01       	movw	r22, r16
    1cc4:	a7 01       	movw	r20, r14
    1cc6:	02 2e       	mov	r0, r18
    1cc8:	04 c0       	rjmp	.+8      	; 0x1cd2 <__pack_f+0x86>
    1cca:	76 95       	lsr	r23
    1ccc:	67 95       	ror	r22
    1cce:	57 95       	ror	r21
    1cd0:	47 95       	ror	r20
    1cd2:	0a 94       	dec	r0
    1cd4:	d2 f7       	brpl	.-12     	; 0x1cca <__pack_f+0x7e>
    1cd6:	81 e0       	ldi	r24, 0x01	; 1
    1cd8:	90 e0       	ldi	r25, 0x00	; 0
    1cda:	a0 e0       	ldi	r26, 0x00	; 0
    1cdc:	b0 e0       	ldi	r27, 0x00	; 0
    1cde:	04 c0       	rjmp	.+8      	; 0x1ce8 <__pack_f+0x9c>
    1ce0:	88 0f       	add	r24, r24
    1ce2:	99 1f       	adc	r25, r25
    1ce4:	aa 1f       	adc	r26, r26
    1ce6:	bb 1f       	adc	r27, r27
    1ce8:	2a 95       	dec	r18
    1cea:	d2 f7       	brpl	.-12     	; 0x1ce0 <__pack_f+0x94>
    1cec:	01 97       	sbiw	r24, 0x01	; 1
    1cee:	a1 09       	sbc	r26, r1
    1cf0:	b1 09       	sbc	r27, r1
    1cf2:	8e 21       	and	r24, r14
    1cf4:	9f 21       	and	r25, r15
    1cf6:	a0 23       	and	r26, r16
    1cf8:	b1 23       	and	r27, r17
    1cfa:	00 97       	sbiw	r24, 0x00	; 0
    1cfc:	a1 05       	cpc	r26, r1
    1cfe:	b1 05       	cpc	r27, r1
    1d00:	21 f0       	breq	.+8      	; 0x1d0a <__pack_f+0xbe>
    1d02:	81 e0       	ldi	r24, 0x01	; 1
    1d04:	90 e0       	ldi	r25, 0x00	; 0
    1d06:	a0 e0       	ldi	r26, 0x00	; 0
    1d08:	b0 e0       	ldi	r27, 0x00	; 0
    1d0a:	9a 01       	movw	r18, r20
    1d0c:	ab 01       	movw	r20, r22
    1d0e:	28 2b       	or	r18, r24
    1d10:	39 2b       	or	r19, r25
    1d12:	4a 2b       	or	r20, r26
    1d14:	5b 2b       	or	r21, r27
    1d16:	da 01       	movw	r26, r20
    1d18:	c9 01       	movw	r24, r18
    1d1a:	8f 77       	andi	r24, 0x7F	; 127
    1d1c:	90 70       	andi	r25, 0x00	; 0
    1d1e:	a0 70       	andi	r26, 0x00	; 0
    1d20:	b0 70       	andi	r27, 0x00	; 0
    1d22:	80 34       	cpi	r24, 0x40	; 64
    1d24:	91 05       	cpc	r25, r1
    1d26:	a1 05       	cpc	r26, r1
    1d28:	b1 05       	cpc	r27, r1
    1d2a:	39 f4       	brne	.+14     	; 0x1d3a <__pack_f+0xee>
    1d2c:	27 ff       	sbrs	r18, 7
    1d2e:	09 c0       	rjmp	.+18     	; 0x1d42 <__pack_f+0xf6>
    1d30:	20 5c       	subi	r18, 0xC0	; 192
    1d32:	3f 4f       	sbci	r19, 0xFF	; 255
    1d34:	4f 4f       	sbci	r20, 0xFF	; 255
    1d36:	5f 4f       	sbci	r21, 0xFF	; 255
    1d38:	04 c0       	rjmp	.+8      	; 0x1d42 <__pack_f+0xf6>
    1d3a:	21 5c       	subi	r18, 0xC1	; 193
    1d3c:	3f 4f       	sbci	r19, 0xFF	; 255
    1d3e:	4f 4f       	sbci	r20, 0xFF	; 255
    1d40:	5f 4f       	sbci	r21, 0xFF	; 255
    1d42:	e0 e0       	ldi	r30, 0x00	; 0
    1d44:	f0 e0       	ldi	r31, 0x00	; 0
    1d46:	20 30       	cpi	r18, 0x00	; 0
    1d48:	a0 e0       	ldi	r26, 0x00	; 0
    1d4a:	3a 07       	cpc	r19, r26
    1d4c:	a0 e0       	ldi	r26, 0x00	; 0
    1d4e:	4a 07       	cpc	r20, r26
    1d50:	a0 e4       	ldi	r26, 0x40	; 64
    1d52:	5a 07       	cpc	r21, r26
    1d54:	10 f0       	brcs	.+4      	; 0x1d5a <__pack_f+0x10e>
    1d56:	e1 e0       	ldi	r30, 0x01	; 1
    1d58:	f0 e0       	ldi	r31, 0x00	; 0
    1d5a:	79 01       	movw	r14, r18
    1d5c:	8a 01       	movw	r16, r20
    1d5e:	27 c0       	rjmp	.+78     	; 0x1dae <__pack_f+0x162>
    1d60:	60 38       	cpi	r22, 0x80	; 128
    1d62:	71 05       	cpc	r23, r1
    1d64:	64 f5       	brge	.+88     	; 0x1dbe <__pack_f+0x172>
    1d66:	fb 01       	movw	r30, r22
    1d68:	e1 58       	subi	r30, 0x81	; 129
    1d6a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d6c:	d8 01       	movw	r26, r16
    1d6e:	c7 01       	movw	r24, r14
    1d70:	8f 77       	andi	r24, 0x7F	; 127
    1d72:	90 70       	andi	r25, 0x00	; 0
    1d74:	a0 70       	andi	r26, 0x00	; 0
    1d76:	b0 70       	andi	r27, 0x00	; 0
    1d78:	80 34       	cpi	r24, 0x40	; 64
    1d7a:	91 05       	cpc	r25, r1
    1d7c:	a1 05       	cpc	r26, r1
    1d7e:	b1 05       	cpc	r27, r1
    1d80:	39 f4       	brne	.+14     	; 0x1d90 <__pack_f+0x144>
    1d82:	e7 fe       	sbrs	r14, 7
    1d84:	0d c0       	rjmp	.+26     	; 0x1da0 <__pack_f+0x154>
    1d86:	80 e4       	ldi	r24, 0x40	; 64
    1d88:	90 e0       	ldi	r25, 0x00	; 0
    1d8a:	a0 e0       	ldi	r26, 0x00	; 0
    1d8c:	b0 e0       	ldi	r27, 0x00	; 0
    1d8e:	04 c0       	rjmp	.+8      	; 0x1d98 <__pack_f+0x14c>
    1d90:	8f e3       	ldi	r24, 0x3F	; 63
    1d92:	90 e0       	ldi	r25, 0x00	; 0
    1d94:	a0 e0       	ldi	r26, 0x00	; 0
    1d96:	b0 e0       	ldi	r27, 0x00	; 0
    1d98:	e8 0e       	add	r14, r24
    1d9a:	f9 1e       	adc	r15, r25
    1d9c:	0a 1f       	adc	r16, r26
    1d9e:	1b 1f       	adc	r17, r27
    1da0:	17 ff       	sbrs	r17, 7
    1da2:	05 c0       	rjmp	.+10     	; 0x1dae <__pack_f+0x162>
    1da4:	16 95       	lsr	r17
    1da6:	07 95       	ror	r16
    1da8:	f7 94       	ror	r15
    1daa:	e7 94       	ror	r14
    1dac:	31 96       	adiw	r30, 0x01	; 1
    1dae:	87 e0       	ldi	r24, 0x07	; 7
    1db0:	16 95       	lsr	r17
    1db2:	07 95       	ror	r16
    1db4:	f7 94       	ror	r15
    1db6:	e7 94       	ror	r14
    1db8:	8a 95       	dec	r24
    1dba:	d1 f7       	brne	.-12     	; 0x1db0 <__pack_f+0x164>
    1dbc:	05 c0       	rjmp	.+10     	; 0x1dc8 <__pack_f+0x17c>
    1dbe:	ee 24       	eor	r14, r14
    1dc0:	ff 24       	eor	r15, r15
    1dc2:	87 01       	movw	r16, r14
    1dc4:	ef ef       	ldi	r30, 0xFF	; 255
    1dc6:	f0 e0       	ldi	r31, 0x00	; 0
    1dc8:	6e 2f       	mov	r22, r30
    1dca:	67 95       	ror	r22
    1dcc:	66 27       	eor	r22, r22
    1dce:	67 95       	ror	r22
    1dd0:	90 2f       	mov	r25, r16
    1dd2:	9f 77       	andi	r25, 0x7F	; 127
    1dd4:	d7 94       	ror	r13
    1dd6:	dd 24       	eor	r13, r13
    1dd8:	d7 94       	ror	r13
    1dda:	8e 2f       	mov	r24, r30
    1ddc:	86 95       	lsr	r24
    1dde:	49 2f       	mov	r20, r25
    1de0:	46 2b       	or	r20, r22
    1de2:	58 2f       	mov	r21, r24
    1de4:	5d 29       	or	r21, r13
    1de6:	b7 01       	movw	r22, r14
    1de8:	ca 01       	movw	r24, r20
    1dea:	1f 91       	pop	r17
    1dec:	0f 91       	pop	r16
    1dee:	ff 90       	pop	r15
    1df0:	ef 90       	pop	r14
    1df2:	df 90       	pop	r13
    1df4:	08 95       	ret

00001df6 <__unpack_f>:
    1df6:	fc 01       	movw	r30, r24
    1df8:	db 01       	movw	r26, r22
    1dfa:	40 81       	ld	r20, Z
    1dfc:	51 81       	ldd	r21, Z+1	; 0x01
    1dfe:	22 81       	ldd	r18, Z+2	; 0x02
    1e00:	62 2f       	mov	r22, r18
    1e02:	6f 77       	andi	r22, 0x7F	; 127
    1e04:	70 e0       	ldi	r23, 0x00	; 0
    1e06:	22 1f       	adc	r18, r18
    1e08:	22 27       	eor	r18, r18
    1e0a:	22 1f       	adc	r18, r18
    1e0c:	93 81       	ldd	r25, Z+3	; 0x03
    1e0e:	89 2f       	mov	r24, r25
    1e10:	88 0f       	add	r24, r24
    1e12:	82 2b       	or	r24, r18
    1e14:	28 2f       	mov	r18, r24
    1e16:	30 e0       	ldi	r19, 0x00	; 0
    1e18:	99 1f       	adc	r25, r25
    1e1a:	99 27       	eor	r25, r25
    1e1c:	99 1f       	adc	r25, r25
    1e1e:	11 96       	adiw	r26, 0x01	; 1
    1e20:	9c 93       	st	X, r25
    1e22:	11 97       	sbiw	r26, 0x01	; 1
    1e24:	21 15       	cp	r18, r1
    1e26:	31 05       	cpc	r19, r1
    1e28:	a9 f5       	brne	.+106    	; 0x1e94 <__unpack_f+0x9e>
    1e2a:	41 15       	cp	r20, r1
    1e2c:	51 05       	cpc	r21, r1
    1e2e:	61 05       	cpc	r22, r1
    1e30:	71 05       	cpc	r23, r1
    1e32:	11 f4       	brne	.+4      	; 0x1e38 <__unpack_f+0x42>
    1e34:	82 e0       	ldi	r24, 0x02	; 2
    1e36:	37 c0       	rjmp	.+110    	; 0x1ea6 <__unpack_f+0xb0>
    1e38:	82 e8       	ldi	r24, 0x82	; 130
    1e3a:	9f ef       	ldi	r25, 0xFF	; 255
    1e3c:	13 96       	adiw	r26, 0x03	; 3
    1e3e:	9c 93       	st	X, r25
    1e40:	8e 93       	st	-X, r24
    1e42:	12 97       	sbiw	r26, 0x02	; 2
    1e44:	9a 01       	movw	r18, r20
    1e46:	ab 01       	movw	r20, r22
    1e48:	67 e0       	ldi	r22, 0x07	; 7
    1e4a:	22 0f       	add	r18, r18
    1e4c:	33 1f       	adc	r19, r19
    1e4e:	44 1f       	adc	r20, r20
    1e50:	55 1f       	adc	r21, r21
    1e52:	6a 95       	dec	r22
    1e54:	d1 f7       	brne	.-12     	; 0x1e4a <__unpack_f+0x54>
    1e56:	83 e0       	ldi	r24, 0x03	; 3
    1e58:	8c 93       	st	X, r24
    1e5a:	0d c0       	rjmp	.+26     	; 0x1e76 <__unpack_f+0x80>
    1e5c:	22 0f       	add	r18, r18
    1e5e:	33 1f       	adc	r19, r19
    1e60:	44 1f       	adc	r20, r20
    1e62:	55 1f       	adc	r21, r21
    1e64:	12 96       	adiw	r26, 0x02	; 2
    1e66:	8d 91       	ld	r24, X+
    1e68:	9c 91       	ld	r25, X
    1e6a:	13 97       	sbiw	r26, 0x03	; 3
    1e6c:	01 97       	sbiw	r24, 0x01	; 1
    1e6e:	13 96       	adiw	r26, 0x03	; 3
    1e70:	9c 93       	st	X, r25
    1e72:	8e 93       	st	-X, r24
    1e74:	12 97       	sbiw	r26, 0x02	; 2
    1e76:	20 30       	cpi	r18, 0x00	; 0
    1e78:	80 e0       	ldi	r24, 0x00	; 0
    1e7a:	38 07       	cpc	r19, r24
    1e7c:	80 e0       	ldi	r24, 0x00	; 0
    1e7e:	48 07       	cpc	r20, r24
    1e80:	80 e4       	ldi	r24, 0x40	; 64
    1e82:	58 07       	cpc	r21, r24
    1e84:	58 f3       	brcs	.-42     	; 0x1e5c <__unpack_f+0x66>
    1e86:	14 96       	adiw	r26, 0x04	; 4
    1e88:	2d 93       	st	X+, r18
    1e8a:	3d 93       	st	X+, r19
    1e8c:	4d 93       	st	X+, r20
    1e8e:	5c 93       	st	X, r21
    1e90:	17 97       	sbiw	r26, 0x07	; 7
    1e92:	08 95       	ret
    1e94:	2f 3f       	cpi	r18, 0xFF	; 255
    1e96:	31 05       	cpc	r19, r1
    1e98:	79 f4       	brne	.+30     	; 0x1eb8 <__unpack_f+0xc2>
    1e9a:	41 15       	cp	r20, r1
    1e9c:	51 05       	cpc	r21, r1
    1e9e:	61 05       	cpc	r22, r1
    1ea0:	71 05       	cpc	r23, r1
    1ea2:	19 f4       	brne	.+6      	; 0x1eaa <__unpack_f+0xb4>
    1ea4:	84 e0       	ldi	r24, 0x04	; 4
    1ea6:	8c 93       	st	X, r24
    1ea8:	08 95       	ret
    1eaa:	64 ff       	sbrs	r22, 4
    1eac:	03 c0       	rjmp	.+6      	; 0x1eb4 <__unpack_f+0xbe>
    1eae:	81 e0       	ldi	r24, 0x01	; 1
    1eb0:	8c 93       	st	X, r24
    1eb2:	12 c0       	rjmp	.+36     	; 0x1ed8 <__unpack_f+0xe2>
    1eb4:	1c 92       	st	X, r1
    1eb6:	10 c0       	rjmp	.+32     	; 0x1ed8 <__unpack_f+0xe2>
    1eb8:	2f 57       	subi	r18, 0x7F	; 127
    1eba:	30 40       	sbci	r19, 0x00	; 0
    1ebc:	13 96       	adiw	r26, 0x03	; 3
    1ebe:	3c 93       	st	X, r19
    1ec0:	2e 93       	st	-X, r18
    1ec2:	12 97       	sbiw	r26, 0x02	; 2
    1ec4:	83 e0       	ldi	r24, 0x03	; 3
    1ec6:	8c 93       	st	X, r24
    1ec8:	87 e0       	ldi	r24, 0x07	; 7
    1eca:	44 0f       	add	r20, r20
    1ecc:	55 1f       	adc	r21, r21
    1ece:	66 1f       	adc	r22, r22
    1ed0:	77 1f       	adc	r23, r23
    1ed2:	8a 95       	dec	r24
    1ed4:	d1 f7       	brne	.-12     	; 0x1eca <__unpack_f+0xd4>
    1ed6:	70 64       	ori	r23, 0x40	; 64
    1ed8:	14 96       	adiw	r26, 0x04	; 4
    1eda:	4d 93       	st	X+, r20
    1edc:	5d 93       	st	X+, r21
    1ede:	6d 93       	st	X+, r22
    1ee0:	7c 93       	st	X, r23
    1ee2:	17 97       	sbiw	r26, 0x07	; 7
    1ee4:	08 95       	ret

00001ee6 <__fpcmp_parts_f>:
    1ee6:	1f 93       	push	r17
    1ee8:	dc 01       	movw	r26, r24
    1eea:	fb 01       	movw	r30, r22
    1eec:	9c 91       	ld	r25, X
    1eee:	92 30       	cpi	r25, 0x02	; 2
    1ef0:	08 f4       	brcc	.+2      	; 0x1ef4 <__fpcmp_parts_f+0xe>
    1ef2:	47 c0       	rjmp	.+142    	; 0x1f82 <__fpcmp_parts_f+0x9c>
    1ef4:	80 81       	ld	r24, Z
    1ef6:	82 30       	cpi	r24, 0x02	; 2
    1ef8:	08 f4       	brcc	.+2      	; 0x1efc <__fpcmp_parts_f+0x16>
    1efa:	43 c0       	rjmp	.+134    	; 0x1f82 <__fpcmp_parts_f+0x9c>
    1efc:	94 30       	cpi	r25, 0x04	; 4
    1efe:	51 f4       	brne	.+20     	; 0x1f14 <__fpcmp_parts_f+0x2e>
    1f00:	11 96       	adiw	r26, 0x01	; 1
    1f02:	1c 91       	ld	r17, X
    1f04:	84 30       	cpi	r24, 0x04	; 4
    1f06:	99 f5       	brne	.+102    	; 0x1f6e <__fpcmp_parts_f+0x88>
    1f08:	81 81       	ldd	r24, Z+1	; 0x01
    1f0a:	68 2f       	mov	r22, r24
    1f0c:	70 e0       	ldi	r23, 0x00	; 0
    1f0e:	61 1b       	sub	r22, r17
    1f10:	71 09       	sbc	r23, r1
    1f12:	3f c0       	rjmp	.+126    	; 0x1f92 <__fpcmp_parts_f+0xac>
    1f14:	84 30       	cpi	r24, 0x04	; 4
    1f16:	21 f0       	breq	.+8      	; 0x1f20 <__fpcmp_parts_f+0x3a>
    1f18:	92 30       	cpi	r25, 0x02	; 2
    1f1a:	31 f4       	brne	.+12     	; 0x1f28 <__fpcmp_parts_f+0x42>
    1f1c:	82 30       	cpi	r24, 0x02	; 2
    1f1e:	b9 f1       	breq	.+110    	; 0x1f8e <__fpcmp_parts_f+0xa8>
    1f20:	81 81       	ldd	r24, Z+1	; 0x01
    1f22:	88 23       	and	r24, r24
    1f24:	89 f1       	breq	.+98     	; 0x1f88 <__fpcmp_parts_f+0xa2>
    1f26:	2d c0       	rjmp	.+90     	; 0x1f82 <__fpcmp_parts_f+0x9c>
    1f28:	11 96       	adiw	r26, 0x01	; 1
    1f2a:	1c 91       	ld	r17, X
    1f2c:	11 97       	sbiw	r26, 0x01	; 1
    1f2e:	82 30       	cpi	r24, 0x02	; 2
    1f30:	f1 f0       	breq	.+60     	; 0x1f6e <__fpcmp_parts_f+0x88>
    1f32:	81 81       	ldd	r24, Z+1	; 0x01
    1f34:	18 17       	cp	r17, r24
    1f36:	d9 f4       	brne	.+54     	; 0x1f6e <__fpcmp_parts_f+0x88>
    1f38:	12 96       	adiw	r26, 0x02	; 2
    1f3a:	2d 91       	ld	r18, X+
    1f3c:	3c 91       	ld	r19, X
    1f3e:	13 97       	sbiw	r26, 0x03	; 3
    1f40:	82 81       	ldd	r24, Z+2	; 0x02
    1f42:	93 81       	ldd	r25, Z+3	; 0x03
    1f44:	82 17       	cp	r24, r18
    1f46:	93 07       	cpc	r25, r19
    1f48:	94 f0       	brlt	.+36     	; 0x1f6e <__fpcmp_parts_f+0x88>
    1f4a:	28 17       	cp	r18, r24
    1f4c:	39 07       	cpc	r19, r25
    1f4e:	bc f0       	brlt	.+46     	; 0x1f7e <__fpcmp_parts_f+0x98>
    1f50:	14 96       	adiw	r26, 0x04	; 4
    1f52:	8d 91       	ld	r24, X+
    1f54:	9d 91       	ld	r25, X+
    1f56:	0d 90       	ld	r0, X+
    1f58:	bc 91       	ld	r27, X
    1f5a:	a0 2d       	mov	r26, r0
    1f5c:	24 81       	ldd	r18, Z+4	; 0x04
    1f5e:	35 81       	ldd	r19, Z+5	; 0x05
    1f60:	46 81       	ldd	r20, Z+6	; 0x06
    1f62:	57 81       	ldd	r21, Z+7	; 0x07
    1f64:	28 17       	cp	r18, r24
    1f66:	39 07       	cpc	r19, r25
    1f68:	4a 07       	cpc	r20, r26
    1f6a:	5b 07       	cpc	r21, r27
    1f6c:	18 f4       	brcc	.+6      	; 0x1f74 <__fpcmp_parts_f+0x8e>
    1f6e:	11 23       	and	r17, r17
    1f70:	41 f0       	breq	.+16     	; 0x1f82 <__fpcmp_parts_f+0x9c>
    1f72:	0a c0       	rjmp	.+20     	; 0x1f88 <__fpcmp_parts_f+0xa2>
    1f74:	82 17       	cp	r24, r18
    1f76:	93 07       	cpc	r25, r19
    1f78:	a4 07       	cpc	r26, r20
    1f7a:	b5 07       	cpc	r27, r21
    1f7c:	40 f4       	brcc	.+16     	; 0x1f8e <__fpcmp_parts_f+0xa8>
    1f7e:	11 23       	and	r17, r17
    1f80:	19 f0       	breq	.+6      	; 0x1f88 <__fpcmp_parts_f+0xa2>
    1f82:	61 e0       	ldi	r22, 0x01	; 1
    1f84:	70 e0       	ldi	r23, 0x00	; 0
    1f86:	05 c0       	rjmp	.+10     	; 0x1f92 <__fpcmp_parts_f+0xac>
    1f88:	6f ef       	ldi	r22, 0xFF	; 255
    1f8a:	7f ef       	ldi	r23, 0xFF	; 255
    1f8c:	02 c0       	rjmp	.+4      	; 0x1f92 <__fpcmp_parts_f+0xac>
    1f8e:	60 e0       	ldi	r22, 0x00	; 0
    1f90:	70 e0       	ldi	r23, 0x00	; 0
    1f92:	cb 01       	movw	r24, r22
    1f94:	1f 91       	pop	r17
    1f96:	08 95       	ret

00001f98 <__prologue_saves__>:
    1f98:	2f 92       	push	r2
    1f9a:	3f 92       	push	r3
    1f9c:	4f 92       	push	r4
    1f9e:	5f 92       	push	r5
    1fa0:	6f 92       	push	r6
    1fa2:	7f 92       	push	r7
    1fa4:	8f 92       	push	r8
    1fa6:	9f 92       	push	r9
    1fa8:	af 92       	push	r10
    1faa:	bf 92       	push	r11
    1fac:	cf 92       	push	r12
    1fae:	df 92       	push	r13
    1fb0:	ef 92       	push	r14
    1fb2:	ff 92       	push	r15
    1fb4:	0f 93       	push	r16
    1fb6:	1f 93       	push	r17
    1fb8:	cf 93       	push	r28
    1fba:	df 93       	push	r29
    1fbc:	cd b7       	in	r28, 0x3d	; 61
    1fbe:	de b7       	in	r29, 0x3e	; 62
    1fc0:	ca 1b       	sub	r28, r26
    1fc2:	db 0b       	sbc	r29, r27
    1fc4:	0f b6       	in	r0, 0x3f	; 63
    1fc6:	f8 94       	cli
    1fc8:	de bf       	out	0x3e, r29	; 62
    1fca:	0f be       	out	0x3f, r0	; 63
    1fcc:	cd bf       	out	0x3d, r28	; 61
    1fce:	09 94       	ijmp

00001fd0 <__epilogue_restores__>:
    1fd0:	2a 88       	ldd	r2, Y+18	; 0x12
    1fd2:	39 88       	ldd	r3, Y+17	; 0x11
    1fd4:	48 88       	ldd	r4, Y+16	; 0x10
    1fd6:	5f 84       	ldd	r5, Y+15	; 0x0f
    1fd8:	6e 84       	ldd	r6, Y+14	; 0x0e
    1fda:	7d 84       	ldd	r7, Y+13	; 0x0d
    1fdc:	8c 84       	ldd	r8, Y+12	; 0x0c
    1fde:	9b 84       	ldd	r9, Y+11	; 0x0b
    1fe0:	aa 84       	ldd	r10, Y+10	; 0x0a
    1fe2:	b9 84       	ldd	r11, Y+9	; 0x09
    1fe4:	c8 84       	ldd	r12, Y+8	; 0x08
    1fe6:	df 80       	ldd	r13, Y+7	; 0x07
    1fe8:	ee 80       	ldd	r14, Y+6	; 0x06
    1fea:	fd 80       	ldd	r15, Y+5	; 0x05
    1fec:	0c 81       	ldd	r16, Y+4	; 0x04
    1fee:	1b 81       	ldd	r17, Y+3	; 0x03
    1ff0:	aa 81       	ldd	r26, Y+2	; 0x02
    1ff2:	b9 81       	ldd	r27, Y+1	; 0x01
    1ff4:	ce 0f       	add	r28, r30
    1ff6:	d1 1d       	adc	r29, r1
    1ff8:	0f b6       	in	r0, 0x3f	; 63
    1ffa:	f8 94       	cli
    1ffc:	de bf       	out	0x3e, r29	; 62
    1ffe:	0f be       	out	0x3f, r0	; 63
    2000:	cd bf       	out	0x3d, r28	; 61
    2002:	ed 01       	movw	r28, r26
    2004:	08 95       	ret

00002006 <sprintf>:
    2006:	ae e0       	ldi	r26, 0x0E	; 14
    2008:	b0 e0       	ldi	r27, 0x00	; 0
    200a:	e9 e0       	ldi	r30, 0x09	; 9
    200c:	f0 e1       	ldi	r31, 0x10	; 16
    200e:	0c 94 da 0f 	jmp	0x1fb4	; 0x1fb4 <__prologue_saves__+0x1c>
    2012:	0d 89       	ldd	r16, Y+21	; 0x15
    2014:	1e 89       	ldd	r17, Y+22	; 0x16
    2016:	86 e0       	ldi	r24, 0x06	; 6
    2018:	8c 83       	std	Y+4, r24	; 0x04
    201a:	1a 83       	std	Y+2, r17	; 0x02
    201c:	09 83       	std	Y+1, r16	; 0x01
    201e:	8f ef       	ldi	r24, 0xFF	; 255
    2020:	9f e7       	ldi	r25, 0x7F	; 127
    2022:	9e 83       	std	Y+6, r25	; 0x06
    2024:	8d 83       	std	Y+5, r24	; 0x05
    2026:	9e 01       	movw	r18, r28
    2028:	27 5e       	subi	r18, 0xE7	; 231
    202a:	3f 4f       	sbci	r19, 0xFF	; 255
    202c:	ce 01       	movw	r24, r28
    202e:	01 96       	adiw	r24, 0x01	; 1
    2030:	6f 89       	ldd	r22, Y+23	; 0x17
    2032:	78 8d       	ldd	r23, Y+24	; 0x18
    2034:	a9 01       	movw	r20, r18
    2036:	0e 94 27 10 	call	0x204e	; 0x204e <vfprintf>
    203a:	2f 81       	ldd	r18, Y+7	; 0x07
    203c:	38 85       	ldd	r19, Y+8	; 0x08
    203e:	02 0f       	add	r16, r18
    2040:	13 1f       	adc	r17, r19
    2042:	f8 01       	movw	r30, r16
    2044:	10 82       	st	Z, r1
    2046:	2e 96       	adiw	r28, 0x0e	; 14
    2048:	e4 e0       	ldi	r30, 0x04	; 4
    204a:	0c 94 f6 0f 	jmp	0x1fec	; 0x1fec <__epilogue_restores__+0x1c>

0000204e <vfprintf>:
    204e:	ab e0       	ldi	r26, 0x0B	; 11
    2050:	b0 e0       	ldi	r27, 0x00	; 0
    2052:	ed e2       	ldi	r30, 0x2D	; 45
    2054:	f0 e1       	ldi	r31, 0x10	; 16
    2056:	0c 94 cc 0f 	jmp	0x1f98	; 0x1f98 <__prologue_saves__>
    205a:	3c 01       	movw	r6, r24
    205c:	2b 01       	movw	r4, r22
    205e:	5a 01       	movw	r10, r20
    2060:	fc 01       	movw	r30, r24
    2062:	17 82       	std	Z+7, r1	; 0x07
    2064:	16 82       	std	Z+6, r1	; 0x06
    2066:	83 81       	ldd	r24, Z+3	; 0x03
    2068:	81 fd       	sbrc	r24, 1
    206a:	03 c0       	rjmp	.+6      	; 0x2072 <vfprintf+0x24>
    206c:	6f ef       	ldi	r22, 0xFF	; 255
    206e:	7f ef       	ldi	r23, 0xFF	; 255
    2070:	c6 c1       	rjmp	.+908    	; 0x23fe <vfprintf+0x3b0>
    2072:	9a e0       	ldi	r25, 0x0A	; 10
    2074:	89 2e       	mov	r8, r25
    2076:	1e 01       	movw	r2, r28
    2078:	08 94       	sec
    207a:	21 1c       	adc	r2, r1
    207c:	31 1c       	adc	r3, r1
    207e:	f3 01       	movw	r30, r6
    2080:	23 81       	ldd	r18, Z+3	; 0x03
    2082:	f2 01       	movw	r30, r4
    2084:	23 fd       	sbrc	r18, 3
    2086:	85 91       	lpm	r24, Z+
    2088:	23 ff       	sbrs	r18, 3
    208a:	81 91       	ld	r24, Z+
    208c:	2f 01       	movw	r4, r30
    208e:	88 23       	and	r24, r24
    2090:	09 f4       	brne	.+2      	; 0x2094 <vfprintf+0x46>
    2092:	b2 c1       	rjmp	.+868    	; 0x23f8 <vfprintf+0x3aa>
    2094:	85 32       	cpi	r24, 0x25	; 37
    2096:	39 f4       	brne	.+14     	; 0x20a6 <vfprintf+0x58>
    2098:	23 fd       	sbrc	r18, 3
    209a:	85 91       	lpm	r24, Z+
    209c:	23 ff       	sbrs	r18, 3
    209e:	81 91       	ld	r24, Z+
    20a0:	2f 01       	movw	r4, r30
    20a2:	85 32       	cpi	r24, 0x25	; 37
    20a4:	29 f4       	brne	.+10     	; 0x20b0 <vfprintf+0x62>
    20a6:	90 e0       	ldi	r25, 0x00	; 0
    20a8:	b3 01       	movw	r22, r6
    20aa:	0e 94 1a 12 	call	0x2434	; 0x2434 <fputc>
    20ae:	e7 cf       	rjmp	.-50     	; 0x207e <vfprintf+0x30>
    20b0:	98 2f       	mov	r25, r24
    20b2:	ff 24       	eor	r15, r15
    20b4:	ee 24       	eor	r14, r14
    20b6:	99 24       	eor	r9, r9
    20b8:	ff e1       	ldi	r31, 0x1F	; 31
    20ba:	ff 15       	cp	r31, r15
    20bc:	d0 f0       	brcs	.+52     	; 0x20f2 <vfprintf+0xa4>
    20be:	9b 32       	cpi	r25, 0x2B	; 43
    20c0:	69 f0       	breq	.+26     	; 0x20dc <vfprintf+0x8e>
    20c2:	9c 32       	cpi	r25, 0x2C	; 44
    20c4:	28 f4       	brcc	.+10     	; 0x20d0 <vfprintf+0x82>
    20c6:	90 32       	cpi	r25, 0x20	; 32
    20c8:	59 f0       	breq	.+22     	; 0x20e0 <vfprintf+0x92>
    20ca:	93 32       	cpi	r25, 0x23	; 35
    20cc:	91 f4       	brne	.+36     	; 0x20f2 <vfprintf+0xa4>
    20ce:	0e c0       	rjmp	.+28     	; 0x20ec <vfprintf+0x9e>
    20d0:	9d 32       	cpi	r25, 0x2D	; 45
    20d2:	49 f0       	breq	.+18     	; 0x20e6 <vfprintf+0x98>
    20d4:	90 33       	cpi	r25, 0x30	; 48
    20d6:	69 f4       	brne	.+26     	; 0x20f2 <vfprintf+0xa4>
    20d8:	41 e0       	ldi	r20, 0x01	; 1
    20da:	24 c0       	rjmp	.+72     	; 0x2124 <vfprintf+0xd6>
    20dc:	52 e0       	ldi	r21, 0x02	; 2
    20de:	f5 2a       	or	r15, r21
    20e0:	84 e0       	ldi	r24, 0x04	; 4
    20e2:	f8 2a       	or	r15, r24
    20e4:	28 c0       	rjmp	.+80     	; 0x2136 <vfprintf+0xe8>
    20e6:	98 e0       	ldi	r25, 0x08	; 8
    20e8:	f9 2a       	or	r15, r25
    20ea:	25 c0       	rjmp	.+74     	; 0x2136 <vfprintf+0xe8>
    20ec:	e0 e1       	ldi	r30, 0x10	; 16
    20ee:	fe 2a       	or	r15, r30
    20f0:	22 c0       	rjmp	.+68     	; 0x2136 <vfprintf+0xe8>
    20f2:	f7 fc       	sbrc	r15, 7
    20f4:	29 c0       	rjmp	.+82     	; 0x2148 <vfprintf+0xfa>
    20f6:	89 2f       	mov	r24, r25
    20f8:	80 53       	subi	r24, 0x30	; 48
    20fa:	8a 30       	cpi	r24, 0x0A	; 10
    20fc:	70 f4       	brcc	.+28     	; 0x211a <vfprintf+0xcc>
    20fe:	f6 fe       	sbrs	r15, 6
    2100:	05 c0       	rjmp	.+10     	; 0x210c <vfprintf+0xbe>
    2102:	98 9c       	mul	r9, r8
    2104:	90 2c       	mov	r9, r0
    2106:	11 24       	eor	r1, r1
    2108:	98 0e       	add	r9, r24
    210a:	15 c0       	rjmp	.+42     	; 0x2136 <vfprintf+0xe8>
    210c:	e8 9c       	mul	r14, r8
    210e:	e0 2c       	mov	r14, r0
    2110:	11 24       	eor	r1, r1
    2112:	e8 0e       	add	r14, r24
    2114:	f0 e2       	ldi	r31, 0x20	; 32
    2116:	ff 2a       	or	r15, r31
    2118:	0e c0       	rjmp	.+28     	; 0x2136 <vfprintf+0xe8>
    211a:	9e 32       	cpi	r25, 0x2E	; 46
    211c:	29 f4       	brne	.+10     	; 0x2128 <vfprintf+0xda>
    211e:	f6 fc       	sbrc	r15, 6
    2120:	6b c1       	rjmp	.+726    	; 0x23f8 <vfprintf+0x3aa>
    2122:	40 e4       	ldi	r20, 0x40	; 64
    2124:	f4 2a       	or	r15, r20
    2126:	07 c0       	rjmp	.+14     	; 0x2136 <vfprintf+0xe8>
    2128:	9c 36       	cpi	r25, 0x6C	; 108
    212a:	19 f4       	brne	.+6      	; 0x2132 <vfprintf+0xe4>
    212c:	50 e8       	ldi	r21, 0x80	; 128
    212e:	f5 2a       	or	r15, r21
    2130:	02 c0       	rjmp	.+4      	; 0x2136 <vfprintf+0xe8>
    2132:	98 36       	cpi	r25, 0x68	; 104
    2134:	49 f4       	brne	.+18     	; 0x2148 <vfprintf+0xfa>
    2136:	f2 01       	movw	r30, r4
    2138:	23 fd       	sbrc	r18, 3
    213a:	95 91       	lpm	r25, Z+
    213c:	23 ff       	sbrs	r18, 3
    213e:	91 91       	ld	r25, Z+
    2140:	2f 01       	movw	r4, r30
    2142:	99 23       	and	r25, r25
    2144:	09 f0       	breq	.+2      	; 0x2148 <vfprintf+0xfa>
    2146:	b8 cf       	rjmp	.-144    	; 0x20b8 <vfprintf+0x6a>
    2148:	89 2f       	mov	r24, r25
    214a:	85 54       	subi	r24, 0x45	; 69
    214c:	83 30       	cpi	r24, 0x03	; 3
    214e:	18 f0       	brcs	.+6      	; 0x2156 <vfprintf+0x108>
    2150:	80 52       	subi	r24, 0x20	; 32
    2152:	83 30       	cpi	r24, 0x03	; 3
    2154:	38 f4       	brcc	.+14     	; 0x2164 <vfprintf+0x116>
    2156:	44 e0       	ldi	r20, 0x04	; 4
    2158:	50 e0       	ldi	r21, 0x00	; 0
    215a:	a4 0e       	add	r10, r20
    215c:	b5 1e       	adc	r11, r21
    215e:	5f e3       	ldi	r21, 0x3F	; 63
    2160:	59 83       	std	Y+1, r21	; 0x01
    2162:	0f c0       	rjmp	.+30     	; 0x2182 <vfprintf+0x134>
    2164:	93 36       	cpi	r25, 0x63	; 99
    2166:	31 f0       	breq	.+12     	; 0x2174 <vfprintf+0x126>
    2168:	93 37       	cpi	r25, 0x73	; 115
    216a:	79 f0       	breq	.+30     	; 0x218a <vfprintf+0x13c>
    216c:	93 35       	cpi	r25, 0x53	; 83
    216e:	09 f0       	breq	.+2      	; 0x2172 <vfprintf+0x124>
    2170:	56 c0       	rjmp	.+172    	; 0x221e <vfprintf+0x1d0>
    2172:	20 c0       	rjmp	.+64     	; 0x21b4 <vfprintf+0x166>
    2174:	f5 01       	movw	r30, r10
    2176:	80 81       	ld	r24, Z
    2178:	89 83       	std	Y+1, r24	; 0x01
    217a:	42 e0       	ldi	r20, 0x02	; 2
    217c:	50 e0       	ldi	r21, 0x00	; 0
    217e:	a4 0e       	add	r10, r20
    2180:	b5 1e       	adc	r11, r21
    2182:	61 01       	movw	r12, r2
    2184:	01 e0       	ldi	r16, 0x01	; 1
    2186:	10 e0       	ldi	r17, 0x00	; 0
    2188:	12 c0       	rjmp	.+36     	; 0x21ae <vfprintf+0x160>
    218a:	f5 01       	movw	r30, r10
    218c:	c0 80       	ld	r12, Z
    218e:	d1 80       	ldd	r13, Z+1	; 0x01
    2190:	f6 fc       	sbrc	r15, 6
    2192:	03 c0       	rjmp	.+6      	; 0x219a <vfprintf+0x14c>
    2194:	6f ef       	ldi	r22, 0xFF	; 255
    2196:	7f ef       	ldi	r23, 0xFF	; 255
    2198:	02 c0       	rjmp	.+4      	; 0x219e <vfprintf+0x150>
    219a:	69 2d       	mov	r22, r9
    219c:	70 e0       	ldi	r23, 0x00	; 0
    219e:	42 e0       	ldi	r20, 0x02	; 2
    21a0:	50 e0       	ldi	r21, 0x00	; 0
    21a2:	a4 0e       	add	r10, r20
    21a4:	b5 1e       	adc	r11, r21
    21a6:	c6 01       	movw	r24, r12
    21a8:	0e 94 0f 12 	call	0x241e	; 0x241e <strnlen>
    21ac:	8c 01       	movw	r16, r24
    21ae:	5f e7       	ldi	r21, 0x7F	; 127
    21b0:	f5 22       	and	r15, r21
    21b2:	14 c0       	rjmp	.+40     	; 0x21dc <vfprintf+0x18e>
    21b4:	f5 01       	movw	r30, r10
    21b6:	c0 80       	ld	r12, Z
    21b8:	d1 80       	ldd	r13, Z+1	; 0x01
    21ba:	f6 fc       	sbrc	r15, 6
    21bc:	03 c0       	rjmp	.+6      	; 0x21c4 <vfprintf+0x176>
    21be:	6f ef       	ldi	r22, 0xFF	; 255
    21c0:	7f ef       	ldi	r23, 0xFF	; 255
    21c2:	02 c0       	rjmp	.+4      	; 0x21c8 <vfprintf+0x17a>
    21c4:	69 2d       	mov	r22, r9
    21c6:	70 e0       	ldi	r23, 0x00	; 0
    21c8:	42 e0       	ldi	r20, 0x02	; 2
    21ca:	50 e0       	ldi	r21, 0x00	; 0
    21cc:	a4 0e       	add	r10, r20
    21ce:	b5 1e       	adc	r11, r21
    21d0:	c6 01       	movw	r24, r12
    21d2:	0e 94 04 12 	call	0x2408	; 0x2408 <strnlen_P>
    21d6:	8c 01       	movw	r16, r24
    21d8:	50 e8       	ldi	r21, 0x80	; 128
    21da:	f5 2a       	or	r15, r21
    21dc:	f3 fe       	sbrs	r15, 3
    21de:	07 c0       	rjmp	.+14     	; 0x21ee <vfprintf+0x1a0>
    21e0:	1a c0       	rjmp	.+52     	; 0x2216 <vfprintf+0x1c8>
    21e2:	80 e2       	ldi	r24, 0x20	; 32
    21e4:	90 e0       	ldi	r25, 0x00	; 0
    21e6:	b3 01       	movw	r22, r6
    21e8:	0e 94 1a 12 	call	0x2434	; 0x2434 <fputc>
    21ec:	ea 94       	dec	r14
    21ee:	8e 2d       	mov	r24, r14
    21f0:	90 e0       	ldi	r25, 0x00	; 0
    21f2:	08 17       	cp	r16, r24
    21f4:	19 07       	cpc	r17, r25
    21f6:	a8 f3       	brcs	.-22     	; 0x21e2 <vfprintf+0x194>
    21f8:	0e c0       	rjmp	.+28     	; 0x2216 <vfprintf+0x1c8>
    21fa:	f6 01       	movw	r30, r12
    21fc:	f7 fc       	sbrc	r15, 7
    21fe:	85 91       	lpm	r24, Z+
    2200:	f7 fe       	sbrs	r15, 7
    2202:	81 91       	ld	r24, Z+
    2204:	6f 01       	movw	r12, r30
    2206:	90 e0       	ldi	r25, 0x00	; 0
    2208:	b3 01       	movw	r22, r6
    220a:	0e 94 1a 12 	call	0x2434	; 0x2434 <fputc>
    220e:	e1 10       	cpse	r14, r1
    2210:	ea 94       	dec	r14
    2212:	01 50       	subi	r16, 0x01	; 1
    2214:	10 40       	sbci	r17, 0x00	; 0
    2216:	01 15       	cp	r16, r1
    2218:	11 05       	cpc	r17, r1
    221a:	79 f7       	brne	.-34     	; 0x21fa <vfprintf+0x1ac>
    221c:	ea c0       	rjmp	.+468    	; 0x23f2 <vfprintf+0x3a4>
    221e:	94 36       	cpi	r25, 0x64	; 100
    2220:	11 f0       	breq	.+4      	; 0x2226 <vfprintf+0x1d8>
    2222:	99 36       	cpi	r25, 0x69	; 105
    2224:	69 f5       	brne	.+90     	; 0x2280 <vfprintf+0x232>
    2226:	f7 fe       	sbrs	r15, 7
    2228:	08 c0       	rjmp	.+16     	; 0x223a <vfprintf+0x1ec>
    222a:	f5 01       	movw	r30, r10
    222c:	20 81       	ld	r18, Z
    222e:	31 81       	ldd	r19, Z+1	; 0x01
    2230:	42 81       	ldd	r20, Z+2	; 0x02
    2232:	53 81       	ldd	r21, Z+3	; 0x03
    2234:	84 e0       	ldi	r24, 0x04	; 4
    2236:	90 e0       	ldi	r25, 0x00	; 0
    2238:	0a c0       	rjmp	.+20     	; 0x224e <vfprintf+0x200>
    223a:	f5 01       	movw	r30, r10
    223c:	80 81       	ld	r24, Z
    223e:	91 81       	ldd	r25, Z+1	; 0x01
    2240:	9c 01       	movw	r18, r24
    2242:	44 27       	eor	r20, r20
    2244:	37 fd       	sbrc	r19, 7
    2246:	40 95       	com	r20
    2248:	54 2f       	mov	r21, r20
    224a:	82 e0       	ldi	r24, 0x02	; 2
    224c:	90 e0       	ldi	r25, 0x00	; 0
    224e:	a8 0e       	add	r10, r24
    2250:	b9 1e       	adc	r11, r25
    2252:	9f e6       	ldi	r25, 0x6F	; 111
    2254:	f9 22       	and	r15, r25
    2256:	57 ff       	sbrs	r21, 7
    2258:	09 c0       	rjmp	.+18     	; 0x226c <vfprintf+0x21e>
    225a:	50 95       	com	r21
    225c:	40 95       	com	r20
    225e:	30 95       	com	r19
    2260:	21 95       	neg	r18
    2262:	3f 4f       	sbci	r19, 0xFF	; 255
    2264:	4f 4f       	sbci	r20, 0xFF	; 255
    2266:	5f 4f       	sbci	r21, 0xFF	; 255
    2268:	e0 e8       	ldi	r30, 0x80	; 128
    226a:	fe 2a       	or	r15, r30
    226c:	ca 01       	movw	r24, r20
    226e:	b9 01       	movw	r22, r18
    2270:	a1 01       	movw	r20, r2
    2272:	2a e0       	ldi	r18, 0x0A	; 10
    2274:	30 e0       	ldi	r19, 0x00	; 0
    2276:	0e 94 46 12 	call	0x248c	; 0x248c <__ultoa_invert>
    227a:	d8 2e       	mov	r13, r24
    227c:	d2 18       	sub	r13, r2
    227e:	40 c0       	rjmp	.+128    	; 0x2300 <vfprintf+0x2b2>
    2280:	95 37       	cpi	r25, 0x75	; 117
    2282:	29 f4       	brne	.+10     	; 0x228e <vfprintf+0x240>
    2284:	1f 2d       	mov	r17, r15
    2286:	1f 7e       	andi	r17, 0xEF	; 239
    2288:	2a e0       	ldi	r18, 0x0A	; 10
    228a:	30 e0       	ldi	r19, 0x00	; 0
    228c:	1d c0       	rjmp	.+58     	; 0x22c8 <vfprintf+0x27a>
    228e:	1f 2d       	mov	r17, r15
    2290:	19 7f       	andi	r17, 0xF9	; 249
    2292:	9f 36       	cpi	r25, 0x6F	; 111
    2294:	61 f0       	breq	.+24     	; 0x22ae <vfprintf+0x260>
    2296:	90 37       	cpi	r25, 0x70	; 112
    2298:	20 f4       	brcc	.+8      	; 0x22a2 <vfprintf+0x254>
    229a:	98 35       	cpi	r25, 0x58	; 88
    229c:	09 f0       	breq	.+2      	; 0x22a0 <vfprintf+0x252>
    229e:	ac c0       	rjmp	.+344    	; 0x23f8 <vfprintf+0x3aa>
    22a0:	0f c0       	rjmp	.+30     	; 0x22c0 <vfprintf+0x272>
    22a2:	90 37       	cpi	r25, 0x70	; 112
    22a4:	39 f0       	breq	.+14     	; 0x22b4 <vfprintf+0x266>
    22a6:	98 37       	cpi	r25, 0x78	; 120
    22a8:	09 f0       	breq	.+2      	; 0x22ac <vfprintf+0x25e>
    22aa:	a6 c0       	rjmp	.+332    	; 0x23f8 <vfprintf+0x3aa>
    22ac:	04 c0       	rjmp	.+8      	; 0x22b6 <vfprintf+0x268>
    22ae:	28 e0       	ldi	r18, 0x08	; 8
    22b0:	30 e0       	ldi	r19, 0x00	; 0
    22b2:	0a c0       	rjmp	.+20     	; 0x22c8 <vfprintf+0x27a>
    22b4:	10 61       	ori	r17, 0x10	; 16
    22b6:	14 fd       	sbrc	r17, 4
    22b8:	14 60       	ori	r17, 0x04	; 4
    22ba:	20 e1       	ldi	r18, 0x10	; 16
    22bc:	30 e0       	ldi	r19, 0x00	; 0
    22be:	04 c0       	rjmp	.+8      	; 0x22c8 <vfprintf+0x27a>
    22c0:	14 fd       	sbrc	r17, 4
    22c2:	16 60       	ori	r17, 0x06	; 6
    22c4:	20 e1       	ldi	r18, 0x10	; 16
    22c6:	32 e0       	ldi	r19, 0x02	; 2
    22c8:	17 ff       	sbrs	r17, 7
    22ca:	08 c0       	rjmp	.+16     	; 0x22dc <vfprintf+0x28e>
    22cc:	f5 01       	movw	r30, r10
    22ce:	60 81       	ld	r22, Z
    22d0:	71 81       	ldd	r23, Z+1	; 0x01
    22d2:	82 81       	ldd	r24, Z+2	; 0x02
    22d4:	93 81       	ldd	r25, Z+3	; 0x03
    22d6:	44 e0       	ldi	r20, 0x04	; 4
    22d8:	50 e0       	ldi	r21, 0x00	; 0
    22da:	08 c0       	rjmp	.+16     	; 0x22ec <vfprintf+0x29e>
    22dc:	f5 01       	movw	r30, r10
    22de:	80 81       	ld	r24, Z
    22e0:	91 81       	ldd	r25, Z+1	; 0x01
    22e2:	bc 01       	movw	r22, r24
    22e4:	80 e0       	ldi	r24, 0x00	; 0
    22e6:	90 e0       	ldi	r25, 0x00	; 0
    22e8:	42 e0       	ldi	r20, 0x02	; 2
    22ea:	50 e0       	ldi	r21, 0x00	; 0
    22ec:	a4 0e       	add	r10, r20
    22ee:	b5 1e       	adc	r11, r21
    22f0:	a1 01       	movw	r20, r2
    22f2:	0e 94 46 12 	call	0x248c	; 0x248c <__ultoa_invert>
    22f6:	d8 2e       	mov	r13, r24
    22f8:	d2 18       	sub	r13, r2
    22fa:	8f e7       	ldi	r24, 0x7F	; 127
    22fc:	f8 2e       	mov	r15, r24
    22fe:	f1 22       	and	r15, r17
    2300:	f6 fe       	sbrs	r15, 6
    2302:	0b c0       	rjmp	.+22     	; 0x231a <vfprintf+0x2cc>
    2304:	5e ef       	ldi	r21, 0xFE	; 254
    2306:	f5 22       	and	r15, r21
    2308:	d9 14       	cp	r13, r9
    230a:	38 f4       	brcc	.+14     	; 0x231a <vfprintf+0x2cc>
    230c:	f4 fe       	sbrs	r15, 4
    230e:	07 c0       	rjmp	.+14     	; 0x231e <vfprintf+0x2d0>
    2310:	f2 fc       	sbrc	r15, 2
    2312:	05 c0       	rjmp	.+10     	; 0x231e <vfprintf+0x2d0>
    2314:	8f ee       	ldi	r24, 0xEF	; 239
    2316:	f8 22       	and	r15, r24
    2318:	02 c0       	rjmp	.+4      	; 0x231e <vfprintf+0x2d0>
    231a:	1d 2d       	mov	r17, r13
    231c:	01 c0       	rjmp	.+2      	; 0x2320 <vfprintf+0x2d2>
    231e:	19 2d       	mov	r17, r9
    2320:	f4 fe       	sbrs	r15, 4
    2322:	0d c0       	rjmp	.+26     	; 0x233e <vfprintf+0x2f0>
    2324:	fe 01       	movw	r30, r28
    2326:	ed 0d       	add	r30, r13
    2328:	f1 1d       	adc	r31, r1
    232a:	80 81       	ld	r24, Z
    232c:	80 33       	cpi	r24, 0x30	; 48
    232e:	19 f4       	brne	.+6      	; 0x2336 <vfprintf+0x2e8>
    2330:	99 ee       	ldi	r25, 0xE9	; 233
    2332:	f9 22       	and	r15, r25
    2334:	08 c0       	rjmp	.+16     	; 0x2346 <vfprintf+0x2f8>
    2336:	1f 5f       	subi	r17, 0xFF	; 255
    2338:	f2 fe       	sbrs	r15, 2
    233a:	05 c0       	rjmp	.+10     	; 0x2346 <vfprintf+0x2f8>
    233c:	03 c0       	rjmp	.+6      	; 0x2344 <vfprintf+0x2f6>
    233e:	8f 2d       	mov	r24, r15
    2340:	86 78       	andi	r24, 0x86	; 134
    2342:	09 f0       	breq	.+2      	; 0x2346 <vfprintf+0x2f8>
    2344:	1f 5f       	subi	r17, 0xFF	; 255
    2346:	0f 2d       	mov	r16, r15
    2348:	f3 fc       	sbrc	r15, 3
    234a:	14 c0       	rjmp	.+40     	; 0x2374 <vfprintf+0x326>
    234c:	f0 fe       	sbrs	r15, 0
    234e:	0f c0       	rjmp	.+30     	; 0x236e <vfprintf+0x320>
    2350:	1e 15       	cp	r17, r14
    2352:	10 f0       	brcs	.+4      	; 0x2358 <vfprintf+0x30a>
    2354:	9d 2c       	mov	r9, r13
    2356:	0b c0       	rjmp	.+22     	; 0x236e <vfprintf+0x320>
    2358:	9d 2c       	mov	r9, r13
    235a:	9e 0c       	add	r9, r14
    235c:	91 1a       	sub	r9, r17
    235e:	1e 2d       	mov	r17, r14
    2360:	06 c0       	rjmp	.+12     	; 0x236e <vfprintf+0x320>
    2362:	80 e2       	ldi	r24, 0x20	; 32
    2364:	90 e0       	ldi	r25, 0x00	; 0
    2366:	b3 01       	movw	r22, r6
    2368:	0e 94 1a 12 	call	0x2434	; 0x2434 <fputc>
    236c:	1f 5f       	subi	r17, 0xFF	; 255
    236e:	1e 15       	cp	r17, r14
    2370:	c0 f3       	brcs	.-16     	; 0x2362 <vfprintf+0x314>
    2372:	04 c0       	rjmp	.+8      	; 0x237c <vfprintf+0x32e>
    2374:	1e 15       	cp	r17, r14
    2376:	10 f4       	brcc	.+4      	; 0x237c <vfprintf+0x32e>
    2378:	e1 1a       	sub	r14, r17
    237a:	01 c0       	rjmp	.+2      	; 0x237e <vfprintf+0x330>
    237c:	ee 24       	eor	r14, r14
    237e:	04 ff       	sbrs	r16, 4
    2380:	0f c0       	rjmp	.+30     	; 0x23a0 <vfprintf+0x352>
    2382:	80 e3       	ldi	r24, 0x30	; 48
    2384:	90 e0       	ldi	r25, 0x00	; 0
    2386:	b3 01       	movw	r22, r6
    2388:	0e 94 1a 12 	call	0x2434	; 0x2434 <fputc>
    238c:	02 ff       	sbrs	r16, 2
    238e:	1d c0       	rjmp	.+58     	; 0x23ca <vfprintf+0x37c>
    2390:	01 fd       	sbrc	r16, 1
    2392:	03 c0       	rjmp	.+6      	; 0x239a <vfprintf+0x34c>
    2394:	88 e7       	ldi	r24, 0x78	; 120
    2396:	90 e0       	ldi	r25, 0x00	; 0
    2398:	0e c0       	rjmp	.+28     	; 0x23b6 <vfprintf+0x368>
    239a:	88 e5       	ldi	r24, 0x58	; 88
    239c:	90 e0       	ldi	r25, 0x00	; 0
    239e:	0b c0       	rjmp	.+22     	; 0x23b6 <vfprintf+0x368>
    23a0:	80 2f       	mov	r24, r16
    23a2:	86 78       	andi	r24, 0x86	; 134
    23a4:	91 f0       	breq	.+36     	; 0x23ca <vfprintf+0x37c>
    23a6:	01 ff       	sbrs	r16, 1
    23a8:	02 c0       	rjmp	.+4      	; 0x23ae <vfprintf+0x360>
    23aa:	8b e2       	ldi	r24, 0x2B	; 43
    23ac:	01 c0       	rjmp	.+2      	; 0x23b0 <vfprintf+0x362>
    23ae:	80 e2       	ldi	r24, 0x20	; 32
    23b0:	f7 fc       	sbrc	r15, 7
    23b2:	8d e2       	ldi	r24, 0x2D	; 45
    23b4:	90 e0       	ldi	r25, 0x00	; 0
    23b6:	b3 01       	movw	r22, r6
    23b8:	0e 94 1a 12 	call	0x2434	; 0x2434 <fputc>
    23bc:	06 c0       	rjmp	.+12     	; 0x23ca <vfprintf+0x37c>
    23be:	80 e3       	ldi	r24, 0x30	; 48
    23c0:	90 e0       	ldi	r25, 0x00	; 0
    23c2:	b3 01       	movw	r22, r6
    23c4:	0e 94 1a 12 	call	0x2434	; 0x2434 <fputc>
    23c8:	9a 94       	dec	r9
    23ca:	d9 14       	cp	r13, r9
    23cc:	c0 f3       	brcs	.-16     	; 0x23be <vfprintf+0x370>
    23ce:	da 94       	dec	r13
    23d0:	f1 01       	movw	r30, r2
    23d2:	ed 0d       	add	r30, r13
    23d4:	f1 1d       	adc	r31, r1
    23d6:	80 81       	ld	r24, Z
    23d8:	90 e0       	ldi	r25, 0x00	; 0
    23da:	b3 01       	movw	r22, r6
    23dc:	0e 94 1a 12 	call	0x2434	; 0x2434 <fputc>
    23e0:	dd 20       	and	r13, r13
    23e2:	a9 f7       	brne	.-22     	; 0x23ce <vfprintf+0x380>
    23e4:	06 c0       	rjmp	.+12     	; 0x23f2 <vfprintf+0x3a4>
    23e6:	80 e2       	ldi	r24, 0x20	; 32
    23e8:	90 e0       	ldi	r25, 0x00	; 0
    23ea:	b3 01       	movw	r22, r6
    23ec:	0e 94 1a 12 	call	0x2434	; 0x2434 <fputc>
    23f0:	ea 94       	dec	r14
    23f2:	ee 20       	and	r14, r14
    23f4:	c1 f7       	brne	.-16     	; 0x23e6 <vfprintf+0x398>
    23f6:	43 ce       	rjmp	.-890    	; 0x207e <vfprintf+0x30>
    23f8:	f3 01       	movw	r30, r6
    23fa:	66 81       	ldd	r22, Z+6	; 0x06
    23fc:	77 81       	ldd	r23, Z+7	; 0x07
    23fe:	cb 01       	movw	r24, r22
    2400:	2b 96       	adiw	r28, 0x0b	; 11
    2402:	e2 e1       	ldi	r30, 0x12	; 18
    2404:	0c 94 e8 0f 	jmp	0x1fd0	; 0x1fd0 <__epilogue_restores__>

00002408 <strnlen_P>:
    2408:	fc 01       	movw	r30, r24
    240a:	05 90       	lpm	r0, Z+
    240c:	61 50       	subi	r22, 0x01	; 1
    240e:	70 40       	sbci	r23, 0x00	; 0
    2410:	01 10       	cpse	r0, r1
    2412:	d8 f7       	brcc	.-10     	; 0x240a <strnlen_P+0x2>
    2414:	80 95       	com	r24
    2416:	90 95       	com	r25
    2418:	8e 0f       	add	r24, r30
    241a:	9f 1f       	adc	r25, r31
    241c:	08 95       	ret

0000241e <strnlen>:
    241e:	fc 01       	movw	r30, r24
    2420:	61 50       	subi	r22, 0x01	; 1
    2422:	70 40       	sbci	r23, 0x00	; 0
    2424:	01 90       	ld	r0, Z+
    2426:	01 10       	cpse	r0, r1
    2428:	d8 f7       	brcc	.-10     	; 0x2420 <strnlen+0x2>
    242a:	80 95       	com	r24
    242c:	90 95       	com	r25
    242e:	8e 0f       	add	r24, r30
    2430:	9f 1f       	adc	r25, r31
    2432:	08 95       	ret

00002434 <fputc>:
    2434:	0f 93       	push	r16
    2436:	1f 93       	push	r17
    2438:	cf 93       	push	r28
    243a:	df 93       	push	r29
    243c:	8c 01       	movw	r16, r24
    243e:	eb 01       	movw	r28, r22
    2440:	8b 81       	ldd	r24, Y+3	; 0x03
    2442:	81 ff       	sbrs	r24, 1
    2444:	1b c0       	rjmp	.+54     	; 0x247c <fputc+0x48>
    2446:	82 ff       	sbrs	r24, 2
    2448:	0d c0       	rjmp	.+26     	; 0x2464 <fputc+0x30>
    244a:	2e 81       	ldd	r18, Y+6	; 0x06
    244c:	3f 81       	ldd	r19, Y+7	; 0x07
    244e:	8c 81       	ldd	r24, Y+4	; 0x04
    2450:	9d 81       	ldd	r25, Y+5	; 0x05
    2452:	28 17       	cp	r18, r24
    2454:	39 07       	cpc	r19, r25
    2456:	64 f4       	brge	.+24     	; 0x2470 <fputc+0x3c>
    2458:	e8 81       	ld	r30, Y
    245a:	f9 81       	ldd	r31, Y+1	; 0x01
    245c:	01 93       	st	Z+, r16
    245e:	f9 83       	std	Y+1, r31	; 0x01
    2460:	e8 83       	st	Y, r30
    2462:	06 c0       	rjmp	.+12     	; 0x2470 <fputc+0x3c>
    2464:	e8 85       	ldd	r30, Y+8	; 0x08
    2466:	f9 85       	ldd	r31, Y+9	; 0x09
    2468:	80 2f       	mov	r24, r16
    246a:	09 95       	icall
    246c:	89 2b       	or	r24, r25
    246e:	31 f4       	brne	.+12     	; 0x247c <fputc+0x48>
    2470:	8e 81       	ldd	r24, Y+6	; 0x06
    2472:	9f 81       	ldd	r25, Y+7	; 0x07
    2474:	01 96       	adiw	r24, 0x01	; 1
    2476:	9f 83       	std	Y+7, r25	; 0x07
    2478:	8e 83       	std	Y+6, r24	; 0x06
    247a:	02 c0       	rjmp	.+4      	; 0x2480 <fputc+0x4c>
    247c:	0f ef       	ldi	r16, 0xFF	; 255
    247e:	1f ef       	ldi	r17, 0xFF	; 255
    2480:	c8 01       	movw	r24, r16
    2482:	df 91       	pop	r29
    2484:	cf 91       	pop	r28
    2486:	1f 91       	pop	r17
    2488:	0f 91       	pop	r16
    248a:	08 95       	ret

0000248c <__ultoa_invert>:
    248c:	fa 01       	movw	r30, r20
    248e:	aa 27       	eor	r26, r26
    2490:	28 30       	cpi	r18, 0x08	; 8
    2492:	51 f1       	breq	.+84     	; 0x24e8 <__ultoa_invert+0x5c>
    2494:	20 31       	cpi	r18, 0x10	; 16
    2496:	81 f1       	breq	.+96     	; 0x24f8 <__ultoa_invert+0x6c>
    2498:	e8 94       	clt
    249a:	6f 93       	push	r22
    249c:	6e 7f       	andi	r22, 0xFE	; 254
    249e:	6e 5f       	subi	r22, 0xFE	; 254
    24a0:	7f 4f       	sbci	r23, 0xFF	; 255
    24a2:	8f 4f       	sbci	r24, 0xFF	; 255
    24a4:	9f 4f       	sbci	r25, 0xFF	; 255
    24a6:	af 4f       	sbci	r26, 0xFF	; 255
    24a8:	b1 e0       	ldi	r27, 0x01	; 1
    24aa:	3e d0       	rcall	.+124    	; 0x2528 <__ultoa_invert+0x9c>
    24ac:	b4 e0       	ldi	r27, 0x04	; 4
    24ae:	3c d0       	rcall	.+120    	; 0x2528 <__ultoa_invert+0x9c>
    24b0:	67 0f       	add	r22, r23
    24b2:	78 1f       	adc	r23, r24
    24b4:	89 1f       	adc	r24, r25
    24b6:	9a 1f       	adc	r25, r26
    24b8:	a1 1d       	adc	r26, r1
    24ba:	68 0f       	add	r22, r24
    24bc:	79 1f       	adc	r23, r25
    24be:	8a 1f       	adc	r24, r26
    24c0:	91 1d       	adc	r25, r1
    24c2:	a1 1d       	adc	r26, r1
    24c4:	6a 0f       	add	r22, r26
    24c6:	71 1d       	adc	r23, r1
    24c8:	81 1d       	adc	r24, r1
    24ca:	91 1d       	adc	r25, r1
    24cc:	a1 1d       	adc	r26, r1
    24ce:	20 d0       	rcall	.+64     	; 0x2510 <__ultoa_invert+0x84>
    24d0:	09 f4       	brne	.+2      	; 0x24d4 <__ultoa_invert+0x48>
    24d2:	68 94       	set
    24d4:	3f 91       	pop	r19
    24d6:	2a e0       	ldi	r18, 0x0A	; 10
    24d8:	26 9f       	mul	r18, r22
    24da:	11 24       	eor	r1, r1
    24dc:	30 19       	sub	r19, r0
    24de:	30 5d       	subi	r19, 0xD0	; 208
    24e0:	31 93       	st	Z+, r19
    24e2:	de f6       	brtc	.-74     	; 0x249a <__ultoa_invert+0xe>
    24e4:	cf 01       	movw	r24, r30
    24e6:	08 95       	ret
    24e8:	46 2f       	mov	r20, r22
    24ea:	47 70       	andi	r20, 0x07	; 7
    24ec:	40 5d       	subi	r20, 0xD0	; 208
    24ee:	41 93       	st	Z+, r20
    24f0:	b3 e0       	ldi	r27, 0x03	; 3
    24f2:	0f d0       	rcall	.+30     	; 0x2512 <__ultoa_invert+0x86>
    24f4:	c9 f7       	brne	.-14     	; 0x24e8 <__ultoa_invert+0x5c>
    24f6:	f6 cf       	rjmp	.-20     	; 0x24e4 <__ultoa_invert+0x58>
    24f8:	46 2f       	mov	r20, r22
    24fa:	4f 70       	andi	r20, 0x0F	; 15
    24fc:	40 5d       	subi	r20, 0xD0	; 208
    24fe:	4a 33       	cpi	r20, 0x3A	; 58
    2500:	18 f0       	brcs	.+6      	; 0x2508 <__ultoa_invert+0x7c>
    2502:	49 5d       	subi	r20, 0xD9	; 217
    2504:	31 fd       	sbrc	r19, 1
    2506:	40 52       	subi	r20, 0x20	; 32
    2508:	41 93       	st	Z+, r20
    250a:	02 d0       	rcall	.+4      	; 0x2510 <__ultoa_invert+0x84>
    250c:	a9 f7       	brne	.-22     	; 0x24f8 <__ultoa_invert+0x6c>
    250e:	ea cf       	rjmp	.-44     	; 0x24e4 <__ultoa_invert+0x58>
    2510:	b4 e0       	ldi	r27, 0x04	; 4
    2512:	a6 95       	lsr	r26
    2514:	97 95       	ror	r25
    2516:	87 95       	ror	r24
    2518:	77 95       	ror	r23
    251a:	67 95       	ror	r22
    251c:	ba 95       	dec	r27
    251e:	c9 f7       	brne	.-14     	; 0x2512 <__ultoa_invert+0x86>
    2520:	00 97       	sbiw	r24, 0x00	; 0
    2522:	61 05       	cpc	r22, r1
    2524:	71 05       	cpc	r23, r1
    2526:	08 95       	ret
    2528:	9b 01       	movw	r18, r22
    252a:	ac 01       	movw	r20, r24
    252c:	0a 2e       	mov	r0, r26
    252e:	06 94       	lsr	r0
    2530:	57 95       	ror	r21
    2532:	47 95       	ror	r20
    2534:	37 95       	ror	r19
    2536:	27 95       	ror	r18
    2538:	ba 95       	dec	r27
    253a:	c9 f7       	brne	.-14     	; 0x252e <__ultoa_invert+0xa2>
    253c:	62 0f       	add	r22, r18
    253e:	73 1f       	adc	r23, r19
    2540:	84 1f       	adc	r24, r20
    2542:	95 1f       	adc	r25, r21
    2544:	a0 1d       	adc	r26, r0
    2546:	08 95       	ret

00002548 <_exit>:
    2548:	f8 94       	cli

0000254a <__stop_program>:
    254a:	ff cf       	rjmp	.-2      	; 0x254a <__stop_program>
